/*!
* AnySign for PC, v1.1.1.0, r1710
*
* For more information on this product, please see
* http://hsecure.co.kr/
*
* Copyright (c) Hancom Secure Co.,Ltd All Rights Reserved.
*
* Date: 2017-10-10
*/
(function(){function initModule(forge){var util=forge.util=forge.util||{};(function(){if(typeof process!=="undefined"&&process.nextTick){util.nextTick=process.nextTick;if(typeof setImmediate==="function")util.setImmediate=setImmediate;else util.setImmediate=util.nextTick;return}if(typeof setImmediate==="function"){util.setImmediate=setImmediate;util.nextTick=function(callback){return setImmediate(callback)};return}util.setImmediate=function(callback){setTimeout(callback,0)};if(typeof window!=="undefined"&&
typeof window.postMessage==="function"){var msg="forge.setImmediate";var callbacks=[];util.setImmediate=function(callback){callbacks.push(callback);if(callbacks.length===1)window.postMessage(msg,"*")};function handler(event){if(event.source===window&&event.data===msg){event.stopPropagation();var copy=callbacks.slice();callbacks.length=0;copy.forEach(function(callback){callback()})}}window.addEventListener("message",handler,true)}if(typeof MutationObserver!=="undefined"){var now=Date.now();var attr=
true;var div=document.createElement("div");var callbacks=[];(new MutationObserver(function(){var copy=callbacks.slice();callbacks.length=0;copy.forEach(function(callback){callback()})})).observe(div,{attributes:true});var oldSetImmediate=util.setImmediate;util.setImmediate=function(callback){if(Date.now()-now>15){now=Date.now();oldSetImmediate(callback)}else{callbacks.push(callback);if(callbacks.length===1)div.setAttribute("a",attr=!attr)}}}util.nextTick=util.setImmediate})();util.isArray=Array.isArray||
function(x){return Object.prototype.toString.call(x)==="[object Array]"};util.isArrayBuffer=function(x){return typeof ArrayBuffer!=="undefined"&&x instanceof ArrayBuffer};util.isArrayBufferView=function(x){return x&&util.isArrayBuffer(x.buffer)&&x.byteLength!==undefined};util.ByteBuffer=ByteStringBuffer;function ByteStringBuffer(b){this.data="";this.read=0;if(typeof b==="string")this.data=b;else if(util.isArrayBuffer(b)||util.isArrayBufferView(b)){var arr=new Uint8Array(b);try{this.data=String.fromCharCode.apply(null,
arr)}catch(e){for(var i=0;i<arr.length;++i)this.putByte(arr[i])}}else if(b instanceof ByteStringBuffer||typeof b==="object"&&typeof b.data==="string"&&typeof b.read==="number"){this.data=b.data;this.read=b.read}this._constructedStringLength=0}util.ByteStringBuffer=ByteStringBuffer;var _MAX_CONSTRUCTED_STRING_LENGTH=4096;util.ByteStringBuffer.prototype._optimizeConstructedString=function(x){this._constructedStringLength+=x;if(this._constructedStringLength>_MAX_CONSTRUCTED_STRING_LENGTH){this.data.substr(0,
1);this._constructedStringLength=0}};util.ByteStringBuffer.prototype.length=function(){return this.data.length-this.read};util.ByteStringBuffer.prototype.isEmpty=function(){return this.length()<=0};util.ByteStringBuffer.prototype.putByte=function(b){return this.putBytes(String.fromCharCode(b))};util.ByteStringBuffer.prototype.fillWithByte=function(b,n){b=String.fromCharCode(b);var d=this.data;while(n>0){if(n&1)d+=b;n>>>=1;if(n>0)b+=b}this.data=d;this._optimizeConstructedString(n);return this};util.ByteStringBuffer.prototype.putBytes=
function(bytes){this.data+=bytes;this._optimizeConstructedString(bytes.length);return this};util.ByteStringBuffer.prototype.putString=function(str){return this.putBytes(util.encodeUtf8(str))};util.ByteStringBuffer.prototype.putInt16=function(i){return this.putBytes(String.fromCharCode(i>>8&255)+String.fromCharCode(i&255))};util.ByteStringBuffer.prototype.putInt24=function(i){return this.putBytes(String.fromCharCode(i>>16&255)+String.fromCharCode(i>>8&255)+String.fromCharCode(i&255))};util.ByteStringBuffer.prototype.putInt32=
function(i){return this.putBytes(String.fromCharCode(i>>24&255)+String.fromCharCode(i>>16&255)+String.fromCharCode(i>>8&255)+String.fromCharCode(i&255))};util.ByteStringBuffer.prototype.putInt16Le=function(i){return this.putBytes(String.fromCharCode(i&255)+String.fromCharCode(i>>8&255))};util.ByteStringBuffer.prototype.putInt24Le=function(i){return this.putBytes(String.fromCharCode(i&255)+String.fromCharCode(i>>8&255)+String.fromCharCode(i>>16&255))};util.ByteStringBuffer.prototype.putInt32Le=function(i){return this.putBytes(String.fromCharCode(i&
255)+String.fromCharCode(i>>8&255)+String.fromCharCode(i>>16&255)+String.fromCharCode(i>>24&255))};util.ByteStringBuffer.prototype.putInt=function(i,n){var bytes="";do{n-=8;bytes+=String.fromCharCode(i>>n&255)}while(n>0);return this.putBytes(bytes)};util.ByteStringBuffer.prototype.putSignedInt=function(i,n){if(i<0)i+=2<<n-1;return this.putInt(i,n)};util.ByteStringBuffer.prototype.putBuffer=function(buffer){return this.putBytes(buffer.getBytes())};util.ByteStringBuffer.prototype.getByte=function(){return this.data.charCodeAt(this.read++)};
util.ByteStringBuffer.prototype.getInt16=function(){var rval=this.data.charCodeAt(this.read)<<8^this.data.charCodeAt(this.read+1);this.read+=2;return rval};util.ByteStringBuffer.prototype.getInt24=function(){var rval=this.data.charCodeAt(this.read)<<16^this.data.charCodeAt(this.read+1)<<8^this.data.charCodeAt(this.read+2);this.read+=3;return rval};util.ByteStringBuffer.prototype.getInt32=function(){var rval=this.data.charCodeAt(this.read)<<24^this.data.charCodeAt(this.read+1)<<16^this.data.charCodeAt(this.read+
2)<<8^this.data.charCodeAt(this.read+3);this.read+=4;return rval};util.ByteStringBuffer.prototype.getInt16Le=function(){var rval=this.data.charCodeAt(this.read)^this.data.charCodeAt(this.read+1)<<8;this.read+=2;return rval};util.ByteStringBuffer.prototype.getInt24Le=function(){var rval=this.data.charCodeAt(this.read)^this.data.charCodeAt(this.read+1)<<8^this.data.charCodeAt(this.read+2)<<16;this.read+=3;return rval};util.ByteStringBuffer.prototype.getInt32Le=function(){var rval=this.data.charCodeAt(this.read)^
this.data.charCodeAt(this.read+1)<<8^this.data.charCodeAt(this.read+2)<<16^this.data.charCodeAt(this.read+3)<<24;this.read+=4;return rval};util.ByteStringBuffer.prototype.getInt=function(n){var rval=0;do{rval=(rval<<8)+this.data.charCodeAt(this.read++);n-=8}while(n>0);return rval};util.ByteStringBuffer.prototype.getSignedInt=function(n){var x=this.getInt(n);var max=2<<n-2;if(x>=max)x-=max<<1;return x};util.ByteStringBuffer.prototype.getBytes=function(count){var rval;if(count){count=Math.min(this.length(),
count);rval=this.data.slice(this.read,this.read+count);this.read+=count}else if(count===0)rval="";else{rval=this.read===0?this.data:this.data.slice(this.read);this.clear()}return rval};util.ByteStringBuffer.prototype.bytes=function(count){return typeof count==="undefined"?this.data.slice(this.read):this.data.slice(this.read,this.read+count)};util.ByteStringBuffer.prototype.at=function(i){return this.data.charCodeAt(this.read+i)};util.ByteStringBuffer.prototype.setAt=function(i,b){this.data=this.data.substr(0,
this.read+i)+String.fromCharCode(b)+this.data.substr(this.read+i+1);return this};util.ByteStringBuffer.prototype.last=function(){return this.data.charCodeAt(this.data.length-1)};util.ByteStringBuffer.prototype.copy=function(){var c=util.createBuffer(this.data);c.read=this.read;return c};util.ByteStringBuffer.prototype.compact=function(){if(this.read>0){this.data=this.data.slice(this.read);this.read=0}return this};util.ByteStringBuffer.prototype.clear=function(){this.data="";this.read=0;return this};
util.ByteStringBuffer.prototype.truncate=function(count){var len=Math.max(0,this.length()-count);this.data=this.data.substr(this.read,len);this.read=0;return this};util.ByteStringBuffer.prototype.toHex=function(){var rval="";for(var i=this.read;i<this.data.length;++i){var b=this.data.charCodeAt(i);if(b<16)rval+="0";rval+=b.toString(16)}return rval};util.ByteStringBuffer.prototype.toString=function(){return util.decodeUtf8(this.bytes())};function DataBuffer(b,options){options=options||{};this.read=
options.readOffset||0;this.growSize=options.growSize||1024;var isArrayBuffer=util.isArrayBuffer(b);var isArrayBufferView=util.isArrayBufferView(b);if(isArrayBuffer||isArrayBufferView){if(isArrayBuffer)this.data=new DataView(b);else this.data=new DataView(b.buffer,b.byteOffset,b.byteLength);this.write="writeOffset"in options?options.writeOffset:this.data.byteLength;return}this.data=new DataView(new ArrayBuffer(0));this.write=0;if(b!==null&&b!==undefined)this.putBytes(b);if("writeOffset"in options)this.write=
options.writeOffset}util.DataBuffer=DataBuffer;util.DataBuffer.prototype.length=function(){return this.write-this.read};util.DataBuffer.prototype.isEmpty=function(){return this.length()<=0};util.DataBuffer.prototype.accommodate=function(amount,growSize){if(this.length()>=amount)return this;growSize=Math.max(growSize||this.growSize,amount);var src=new Uint8Array(this.data.buffer,this.data.byteOffset,this.data.byteLength);var dst=new Uint8Array(this.length()+growSize);dst.set(src);this.data=new DataView(dst.buffer);
return this};util.DataBuffer.prototype.putByte=function(b){this.accommodate(1);this.data.setUint8(this.write++,b);return this};util.DataBuffer.prototype.fillWithByte=function(b,n){this.accommodate(n);for(var i=0;i<n;++i)this.data.setUint8(b);return this};util.DataBuffer.prototype.putBytes=function(bytes,encoding){if(util.isArrayBufferView(bytes)){var src=new Uint8Array(bytes.buffer,bytes.byteOffset,bytes.byteLength);var len=src.byteLength-src.byteOffset;this.accommodate(len);var dst=new Uint8Array(this.data.buffer,
this.write);dst.set(src);this.write+=len;return this}if(util.isArrayBuffer(bytes)){var src=new Uint8Array(bytes);this.accommodate(src.byteLength);var dst=new Uint8Array(this.data.buffer);dst.set(src,this.write);this.write+=src.byteLength;return this}if(bytes instanceof util.DataBuffer||typeof bytes==="object"&&typeof bytes.read==="number"&&typeof bytes.write==="number"&&util.isArrayBufferView(bytes.data)){var src=new Uint8Array(bytes.data.byteLength,bytes.read,bytes.length());this.accommodate(src.byteLength);
var dst=new Uint8Array(bytes.data.byteLength,this.write);dst.set(src);this.write+=src.byteLength;return this}if(bytes instanceof util.ByteStringBuffer){bytes=bytes.data;encoding="binary"}encoding=encoding||"binary";if(typeof bytes==="string"){var view;if(encoding==="hex"){this.accommodate(Math.ceil(bytes.length/2));view=new Uint8Array(this.data.buffer,this.write);this.write+=util.binary.hex.decode(bytes,view,this.write);return this}if(encoding==="base64"){this.accommodate(Math.ceil(bytes.length/4)*
3);view=new Uint8Array(this.data.buffer,this.write);this.write+=util.binary.base64.decode(bytes,view,this.write);return this}if(encoding==="utf8"){bytes=util.encodeUtf8(bytes);encoding="binary"}if(encoding==="binary"||encoding==="raw"){this.accommodate(bytes.length);view=new Uint8Array(this.data.buffer,this.write);this.write+=util.binary.raw.decode(view);return this}if(encoding==="utf16"){this.accommodate(bytes.length*2);view=new Uint16Array(this.data.buffer,this.write);this.write+=util.text.utf16.encode(view);
return this}throw new Error("Invalid encoding: "+encoding);}throw Error("Invalid parameter: "+bytes);};util.DataBuffer.prototype.putBuffer=function(buffer){this.putBytes(buffer);buffer.clear();return this};util.DataBuffer.prototype.putString=function(str){return this.putBytes(str,"utf16")};util.DataBuffer.prototype.putInt16=function(i){this.accommodate(2);this.data.setInt16(this.write,i);this.write+=2;return this};util.DataBuffer.prototype.putInt24=function(i){this.accommodate(3);this.data.setInt16(this.write,
i>>8&65535);this.data.setInt8(this.write,i>>16&255);this.write+=3;return this};util.DataBuffer.prototype.putInt32=function(i){this.accommodate(4);this.data.setInt32(this.write,i);this.write+=4;return this};util.DataBuffer.prototype.putInt16Le=function(i){this.accommodate(2);this.data.setInt16(this.write,i,true);this.write+=2;return this};util.DataBuffer.prototype.putInt24Le=function(i){this.accommodate(3);this.data.setInt8(this.write,i>>16&255);this.data.setInt16(this.write,i>>8&65535,true);this.write+=
3;return this};util.DataBuffer.prototype.putInt32Le=function(i){this.accommodate(4);this.data.setInt32(this.write,i,true);this.write+=4;return this};util.DataBuffer.prototype.putInt=function(i,n){this.accommodate(n/8);do{n-=8;this.data.setInt8(this.write++,i>>n&255)}while(n>0);return this};util.DataBuffer.prototype.putSignedInt=function(i,n){this.accommodate(n/8);if(i<0)i+=2<<n-1;return this.putInt(i,n)};util.DataBuffer.prototype.getByte=function(){return this.data.getInt8(this.read++)};util.DataBuffer.prototype.getInt16=
function(){var rval=this.data.getInt16(this.read);this.read+=2;return rval};util.DataBuffer.prototype.getInt24=function(){var rval=this.data.getInt16(this.read)<<8^this.data.getInt8(this.read+2);this.read+=3;return rval};util.DataBuffer.prototype.getInt32=function(){var rval=this.data.getInt32(this.read);this.read+=4;return rval};util.DataBuffer.prototype.getInt16Le=function(){var rval=this.data.getInt16(this.read,true);this.read+=2;return rval};util.DataBuffer.prototype.getInt24Le=function(){var rval=
this.data.getInt8(this.read)^this.data.getInt16(this.read+1,true)<<8;this.read+=3;return rval};util.DataBuffer.prototype.getInt32Le=function(){var rval=this.data.getInt32(this.read,true);this.read+=4;return rval};util.DataBuffer.prototype.getInt=function(n){var rval=0;do{rval=(rval<<8)+this.data.getInt8(this.read++);n-=8}while(n>0);return rval};util.DataBuffer.prototype.getSignedInt=function(n){var x=this.getInt(n);var max=2<<n-2;if(x>=max)x-=max<<1;return x};util.DataBuffer.prototype.getBytes=function(count){var rval;
if(count){count=Math.min(this.length(),count);rval=this.data.slice(this.read,this.read+count);this.read+=count}else if(count===0)rval="";else{rval=this.read===0?this.data:this.data.slice(this.read);this.clear()}return rval};util.DataBuffer.prototype.bytes=function(count){return typeof count==="undefined"?this.data.slice(this.read):this.data.slice(this.read,this.read+count)};util.DataBuffer.prototype.at=function(i){return this.data.getUint8(this.read+i)};util.DataBuffer.prototype.setAt=function(i,
b){this.data.setUint8(i,b);return this};util.DataBuffer.prototype.last=function(){return this.data.getUint8(this.write-1)};util.DataBuffer.prototype.copy=function(){return new util.DataBuffer(this)};util.DataBuffer.prototype.compact=function(){if(this.read>0){var src=new Uint8Array(this.data.buffer,this.read);var dst=new Uint8Array(src.byteLength);dst.set(src);this.data=new DataView(dst);this.write-=this.read;this.read=0}return this};util.DataBuffer.prototype.clear=function(){this.data=new DataView(new ArrayBuffer(0));
this.read=this.write=0;return this};util.DataBuffer.prototype.truncate=function(count){this.write=Math.max(0,this.length()-count);this.read=Math.min(this.read,this.write);return this};util.DataBuffer.prototype.toHex=function(){var rval="";for(var i=this.read;i<this.data.byteLength;++i){var b=this.data.getUint8(i);if(b<16)rval+="0";rval+=b.toString(16)}return rval};util.DataBuffer.prototype.toString=function(encoding){var view=new Uint8Array(this.data,this.read,this.length());encoding=encoding||"utf8";
if(encoding==="binary"||encoding==="raw")return util.binary.raw.encode(view);if(encoding==="hex")return util.binary.hex.encode(view);if(encoding==="base64")return util.binary.base64.encode(view);if(encoding==="utf8")return util.text.utf8.decode(view);if(encoding==="utf16")return util.text.utf16.decode(view);throw new Error("Invalid encoding: "+encoding);};util.createBuffer=function(input,encoding){encoding=encoding||"raw";if(input!==undefined&&encoding==="utf8")input=util.encodeUtf8(input);return new util.ByteBuffer(input)};
util.fillString=function(c,n){var s="";while(n>0){if(n&1)s+=c;n>>>=1;if(n>0)c+=c}return s};util.xorBytes=function(s1,s2,n){var s3="";var b="";var t="";var i=0;var c=0;for(;n>0;--n,++i){b=s1.charCodeAt(i)^s2.charCodeAt(i);if(c>=10){s3+=t;t="";c=0}t+=String.fromCharCode(b);++c}s3+=t;return s3};util.hexToBytes=function(hex){var rval="";var i=0;if(hex.length&1==1){i=1;rval+=String.fromCharCode(parseInt(hex.charAt(0),16))}for(;i<hex.length;i+=2)rval+=String.fromCharCode(parseInt(hex.substr(i,2),16));return rval};
util.bytesToHex=function(bytes){return util.createBuffer(bytes).toHex()};util.int32ToBytes=function(i){return String.fromCharCode(i>>24&255)+String.fromCharCode(i>>16&255)+String.fromCharCode(i>>8&255)+String.fromCharCode(i&255)};var _base64="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";var _base64Idx=[62,-1,-1,-1,63,52,53,54,55,56,57,58,59,60,61,-1,-1,-1,64,-1,-1,-1,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,-1,-1,-1,-1,-1,-1,26,27,28,29,30,31,32,33,
34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51];util.encode64=function(input,maxline){var line="";var output="";var chr1,chr2,chr3;var i=0;while(i<input.length){chr1=input.charCodeAt(i++);chr2=input.charCodeAt(i++);chr3=input.charCodeAt(i++);line+=_base64.charAt(chr1>>2);line+=_base64.charAt((chr1&3)<<4|chr2>>4);if(isNaN(chr2))line+="==";else{line+=_base64.charAt((chr2&15)<<2|chr3>>6);line+=isNaN(chr3)?"=":_base64.charAt(chr3&63)}if(maxline&&line.length>maxline){output+=line.substr(0,maxline)+
"\r\n";line=line.substr(maxline)}}output+=line;return output};util.decode64=function(input){input=input.replace(/[^A-Za-z0-9\+\/\=]/g,"");var output="";var enc1,enc2,enc3,enc4;var i=0;while(i<input.length){enc1=_base64Idx[input.charCodeAt(i++)-43];enc2=_base64Idx[input.charCodeAt(i++)-43];enc3=_base64Idx[input.charCodeAt(i++)-43];enc4=_base64Idx[input.charCodeAt(i++)-43];output+=String.fromCharCode(enc1<<2|enc2>>4);if(enc3!==64){output+=String.fromCharCode((enc2&15)<<4|enc3>>2);if(enc4!==64)output+=
String.fromCharCode((enc3&3)<<6|enc4)}}return output};util.encodeUtf8=function(str){return unescape(encodeURIComponent(str))};util.decodeUtf8=function(str){return decodeURIComponent(escape(str))};util.binary={raw:{},hex:{},base64:{}};util.binary.raw.encode=function(bytes){return String.fromCharCode.apply(null,bytes)};util.binary.raw.decode=function(str,output,offset){var out=output;if(!out)out=new Uint8Array(str.length);offset=offset||0;var j=offset;for(var i=0;i<str.length;++i)out[j++]=str.charCodeAt(i);
return output?j-offset:out};util.binary.hex.encode=util.bytesToHex;util.binary.hex.decode=function(hex,output,offset){var out=output;if(!out)out=new Uint8Array(Math.ceil(hex.length/2));offset=offset||0;var i=0,j=offset;if(hex.length&1){i=1;out[j++]=parseInt(hex.charAt(0),16)}for(;i<hex.length;i+=2)out[j++]=parseInt(hex.substr(i,2),16);return output?j-offset:out};util.binary.base64.encode=function(input,maxline){var line="";var output="";var chr1,chr2,chr3;var i=0;while(i<input.byteLength){chr1=input[i++];
chr2=input[i++];chr3=input[i++];line+=_base64.charAt(chr1>>2);line+=_base64.charAt((chr1&3)<<4|chr2>>4);if(isNaN(chr2))line+="==";else{line+=_base64.charAt((chr2&15)<<2|chr3>>6);line+=isNaN(chr3)?"=":_base64.charAt(chr3&63)}if(maxline&&line.length>maxline){output+=line.substr(0,maxline)+"\r\n";line=line.substr(maxline)}}output+=line;return output};util.binary.base64.decode=function(input,output,offset){var out=output;if(!out)out=new Uint8Array(Math.ceil(input.length/4)*3);input=input.replace(/[^A-Za-z0-9\+\/\=]/g,
"");offset=offset||0;var enc1,enc2,enc3,enc4;var i=0,j=offset;while(i<input.length){enc1=_base64Idx[input.charCodeAt(i++)-43];enc2=_base64Idx[input.charCodeAt(i++)-43];enc3=_base64Idx[input.charCodeAt(i++)-43];enc4=_base64Idx[input.charCodeAt(i++)-43];out[j++]=enc1<<2|enc2>>4;if(enc3!==64){out[j++]=(enc2&15)<<4|enc3>>2;if(enc4!==64)out[j++]=(enc3&3)<<6|enc4}}return output?j-offset:out.subarray(0,j)};util.text={utf8:{},utf16:{}};util.text.utf8.encode=function(str,output,offset){str=util.encodeUtf8(str);
var out=output;if(!out)out=new Uint8Array(str.length);offset=offset||0;var j=offset;for(var i=0;i<str.length;++i)out[j++]=str.charCodeAt(i);return output?j-offset:out};util.text.utf8.decode=function(bytes){return util.decodeUtf8(String.fromCharCode.apply(null,bytes))};util.text.utf16.encode=function(str,output,offset){var out=output;if(!out)out=new Uint8Array(str.length*2);var view=new Uint16Array(out.buffer);offset=offset||0;var j=offset;var k=offset;for(var i=0;i<str.length;++i){view[k++]=str.charCodeAt(i);
j+=2}return output?j-offset:out};util.text.utf16.decode=function(bytes){return String.fromCharCode.apply(null,new Uint16Array(bytes.buffer))};util.deflate=function(api,bytes,raw){bytes=util.decode64(api.deflate(util.encode64(bytes)).rval);if(raw){var start=2;var flg=bytes.charCodeAt(1);if(flg&32)start=6;bytes=bytes.substring(start,bytes.length-4)}return bytes};util.inflate=function(api,bytes,raw){var rval=api.inflate(util.encode64(bytes)).rval;return rval===null?null:util.decode64(rval)};var _setStorageObject=
function(api,id,obj){if(!api)throw new Error("WebStorage not available.");var rval;if(obj===null)rval=api.removeItem(id);else{obj=util.encode64(JSON.stringify(obj));rval=api.setItem(id,obj)}if(typeof rval!=="undefined"&&rval.rval!==true){var error=new Error(rval.error.message);error.id=rval.error.id;error.name=rval.error.name;throw error;}};var _getStorageObject=function(api,id){if(!api)throw new Error("WebStorage not available.");var rval=api.getItem(id);if(api.init)if(rval.rval===null){if(rval.error){var error=
new Error(rval.error.message);error.id=rval.error.id;error.name=rval.error.name;throw error;}rval=null}else rval=rval.rval;if(rval!==null)rval=JSON.parse(util.decode64(rval));return rval};var _setItem=function(api,id,key,data){var obj=_getStorageObject(api,id);if(obj===null)obj={};obj[key]=data;_setStorageObject(api,id,obj)};var _getItem=function(api,id,key){var rval=_getStorageObject(api,id);if(rval!==null)rval=key in rval?rval[key]:null;return rval};var _removeItem=function(api,id,key){var obj=
_getStorageObject(api,id);if(obj!==null&&key in obj){delete obj[key];var empty=true;for(var prop in obj){empty=false;break}if(empty)obj=null;_setStorageObject(api,id,obj)}};var _clearItems=function(api,id){_setStorageObject(api,id,null)};var _callStorageFunction=function(func,args,location){var rval=null;if(typeof location==="undefined")location=["web","flash"];var type;var done=false;var exception=null;for(var idx in location){type=location[idx];try{if(type==="local"){args[0]=localStorage;rval=func.apply(this,
args);done=true}else if(type==="session"){args[0]=sessionStorage;rval=func.apply(this,args);done=true}else throw new Error("Unsupported storage type.");}catch(ex){exception=ex}if(done)break}if(!done)throw exception;return rval};util.setItem=function(api,id,key,data,location){_callStorageFunction(_setItem,arguments,location)};util.getItem=function(api,id,key,location){return _callStorageFunction(_getItem,arguments,location)};util.removeItem=function(api,id,key,location){_callStorageFunction(_removeItem,
arguments,location)};util.clearItems=function(api,id,location){_callStorageFunction(_clearItems,arguments,location)};util.parseUrl=function(str){var regex=/^(https?):\/\/([^:&^\/]*):?(\d*)(.*)$/g;regex.lastIndex=0;var m=regex.exec(str);var url=m===null?null:{full:str,scheme:m[1],host:m[2],port:m[3],path:m[4]};if(url){url.fullHost=url.host;if(url.port)if(url.port!==80&&url.scheme==="http")url.fullHost+=":"+url.port;else{if(url.port!==443&&url.scheme==="https")url.fullHost+=":"+url.port}else if(url.scheme===
"http")url.port=80;else if(url.scheme==="https")url.port=443;url.full=url.scheme+"://"+url.fullHost}return url};var _queryVariables=null;util.getQueryVariables=function(query){var parse=function(q){var rval={};var kvpairs=q.split("&");for(var i=0;i<kvpairs.length;i++){var pos=kvpairs[i].indexOf("=");var key;var val;if(pos>0){key=kvpairs[i].substring(0,pos);val=kvpairs[i].substring(pos+1)}else{key=kvpairs[i];val=null}if(!(key in rval))rval[key]=[];if(!(key in Object.prototype)&&val!==null)rval[key].push(unescape(val))}return rval};
var rval;if(typeof query==="undefined"){if(_queryVariables===null)if(typeof window!=="undefined"&&window.location&&window.location.search)_queryVariables=parse(window.location.search.substring(1));else _queryVariables={};rval=_queryVariables}else rval=parse(query);return rval};util.parseFragment=function(fragment){var fp=fragment;var fq="";var pos=fragment.indexOf("?");if(pos>0){fp=fragment.substring(0,pos);fq=fragment.substring(pos+1)}var path=fp.split("/");if(path.length>0&&path[0]==="")path.shift();
var query=fq===""?{}:util.getQueryVariables(fq);return{pathString:fp,queryString:fq,path:path,query:query}};util.makeRequest=function(reqString){var frag=util.parseFragment(reqString);var req={path:frag.pathString,query:frag.queryString,getPath:function(i){return typeof i==="undefined"?frag.path:frag.path[i]},getQuery:function(k,i){var rval;if(typeof k==="undefined")rval=frag.query;else{rval=frag.query[k];if(rval&&typeof i!=="undefined")rval=rval[i]}return rval},getQueryLast:function(k,_default){var rval;
var vals=req.getQuery(k);if(vals)rval=vals[vals.length-1];else rval=_default;return rval}};return req};util.makeLink=function(path,query,fragment){path=jQuery.isArray(path)?path.join("/"):path;var qstr=jQuery.param(query||{});fragment=fragment||"";return path+(qstr.length>0?"?"+qstr:"")+(fragment.length>0?"#"+fragment:"")};util.setPath=function(object,keys,value){if(typeof object==="object"&&object!==null){var i=0;var len=keys.length;while(i<len){var next=keys[i++];if(i==len)object[next]=value;else{var hasNext=
next in object;if(!hasNext||hasNext&&typeof object[next]!=="object"||hasNext&&object[next]===null)object[next]={};object=object[next]}}}};util.getPath=function(object,keys,_default){var i=0;var len=keys.length;var hasNext=true;while(hasNext&&i<len&&typeof object==="object"&&object!==null){var next=keys[i++];hasNext=next in object;if(hasNext)object=object[next]}return hasNext?object:_default};util.deletePath=function(object,keys){if(typeof object==="object"&&object!==null){var i=0;var len=keys.length;
while(i<len){var next=keys[i++];if(i==len)delete object[next];else{if(!(next in object)||typeof object[next]!=="object"||object[next]===null)break;object=object[next]}}}};util.isEmpty=function(obj){for(var prop in obj)if(obj.hasOwnProperty(prop))return false;return true};util.format=function(format){var re=/%./g;var match;var part;var argi=0;var parts=[];var last=0;while(match=re.exec(format)){part=format.substring(last,re.lastIndex-2);if(part.length>0)parts.push(part);last=re.lastIndex;var code=
match[0][1];switch(code){case "s":case "o":if(argi<arguments.length)parts.push(arguments[argi++ +1]);else parts.push("<?>");break;case "%":parts.push("%");break;default:parts.push("<%"+code+"?>")}}parts.push(format.substring(last));return parts.join("")};util.formatNumber=function(number,decimals,dec_point,thousands_sep){var n=number,c=isNaN(decimals=Math.abs(decimals))?2:decimals;var d=dec_point===undefined?",":dec_point;var t=thousands_sep===undefined?".":thousands_sep,s=n<0?"-":"";var i=parseInt(n=
Math.abs(+n||0).toFixed(c),10)+"";var j=i.length>3?i.length%3:0;return s+(j?i.substr(0,j)+t:"")+i.substr(j).replace(/(\d{3})(?=\d)/g,"$1"+t)+(c?d+Math.abs(n-i).toFixed(c).slice(2):"")};util.formatSize=function(size){if(size>=1073741824)size=util.formatNumber(size/1073741824,2,".","")+" GiB";else if(size>=1048576)size=util.formatNumber(size/1048576,2,".","")+" MiB";else if(size>=1024)size=util.formatNumber(size/1024,0)+" KiB";else size=util.formatNumber(size,0)+" bytes";return size};util.bytesFromIP=
function(ip){if(ip.indexOf(".")!==-1)return util.bytesFromIPv4(ip);if(ip.indexOf(":")!==-1)return util.bytesFromIPv6(ip);return null};util.bytesFromIPv4=function(ip){ip=ip.split(".");if(ip.length!==4)return null;var b=util.createBuffer();for(var i=0;i<ip.length;++i){var num=parseInt(ip[i],10);if(isNaN(num))return null;b.putByte(num)}return b.getBytes()};util.bytesFromIPv6=function(ip){var blanks=0;ip=ip.split(":").filter(function(e){if(e.length===0)++blanks;return true});var zeros=(8-ip.length+blanks)*
2;var b=util.createBuffer();for(var i=0;i<8;++i){if(!ip[i]||ip[i].length===0){b.fillWithByte(0,zeros);zeros=0;continue}var bytes=util.hexToBytes(ip[i]);if(bytes.length<2)b.putByte(0);b.putBytes(bytes)}return b.getBytes()};util.bytesToIP=function(bytes){if(bytes.length===4)return util.bytesToIPv4(bytes);if(bytes.length===16)return util.bytesToIPv6(bytes);return null};util.bytesToIPv4=function(bytes){if(bytes.length!==4)return null;var ip=[];for(var i=0;i<bytes.length;++i)ip.push(bytes.charCodeAt(i));
return ip.join(".")};util.bytesToIPv6=function(bytes){if(bytes.length!==16)return null;var ip=[];var zeroGroups=[];var zeroMaxGroup=0;for(var i=0;i<bytes.length;i+=2){var hex=util.bytesToHex(bytes[i]+bytes[i+1]);while(hex[0]==="0"&&hex!=="0")hex=hex.substr(1);if(hex==="0"){var last=zeroGroups[zeroGroups.length-1];var idx=ip.length;if(!last||idx!==last.end+1)zeroGroups.push({start:idx,end:idx});else{last.end=idx;if(last.end-last.start>zeroGroups[zeroMaxGroup].end-zeroGroups[zeroMaxGroup].start)zeroMaxGroup=
zeroGroups.length-1}}ip.push(hex)}if(zeroGroups.length>0){var group=zeroGroups[zeroMaxGroup];if(group.end-group.start>0){ip.splice(group.start,group.end-group.start+1,"");if(group.start===0)ip.unshift("");if(group.end===7)ip.push("")}}return ip.join(":")};util.estimateCores=function(options,callback){if(typeof options==="function"){callback=options;options={}}options=options||{};if("cores"in util&&!options.update)return callback(null,util.cores);if(typeof navigator!=="undefined"&&"hardwareConcurrency"in
navigator&&navigator.hardwareConcurrency>0){util.cores=navigator.hardwareConcurrency;return callback(null,util.cores)}if(typeof Worker==="undefined"){util.cores=1;return callback(null,util.cores)}if(typeof Blob==="undefined"){util.cores=2;return callback(null,util.cores)}var blobUrl=URL.createObjectURL(new Blob(["(",function(){self.addEventListener("message",function(e){var st=Date.now();var et=st+4;while(Date.now()<et);self.postMessage({st:st,et:et})})}.toString(),")()"],{type:"application/javascript"}));
sample([],5,16);function sample(max,samples,numWorkers){if(samples===0){var avg=Math.floor(max.reduce(function(avg,x){return avg+x},0)/max.length);util.cores=Math.max(1,avg);URL.revokeObjectURL(blobUrl);return callback(null,util.cores)}map(numWorkers,function(err,results){max.push(reduce(numWorkers,results));sample(max,samples-1,numWorkers)})}function map(numWorkers,callback){var workers=[];var results=[];for(var i=0;i<numWorkers;++i){var worker=new Worker(blobUrl);worker.addEventListener("message",
function(e){results.push(e.data);if(results.length===numWorkers){for(var i=0;i<numWorkers;++i)workers[i].terminate();callback(null,results)}});workers.push(worker)}for(var i=0;i<numWorkers;++i)workers[i].postMessage(i)}function reduce(numWorkers,results){var overlaps=[];for(var n=0;n<numWorkers;++n){var r1=results[n];var overlap=overlaps[n]=[];for(var i=0;i<numWorkers;++i){if(n===i)continue;var r2=results[i];if(r1.st>r2.st&&r1.st<r2.et||r2.st>r1.st&&r2.st<r1.et)overlap.push(i)}}return overlaps.reduce(function(max,
overlap){return Math.max(max,overlap.length)},0)}}}var name="util";if(typeof define!=="function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,module)}}else{if(typeof forge==="undefined")forge={};return initModule(forge)}var deps;var defineFunc=function(require,module){module.exports=function(forge){var mods=deps.map(function(dep){return require(dep)}).concat(initModule);forge=forge||{};forge.defined=forge.defined||{};if(forge.defined[name])return forge[name];
forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);return forge[name]}};var tmpDefine=define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):ids.slice(2);if(nodeJS){delete define;return tmpDefine.apply(null,Array.prototype.slice.call(arguments,0))}define=tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,0))};define(["require","module"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,0))})})();(function(){function initModule(forge){var asn1=forge.asn1=forge.asn1||{};asn1.Class={UNIVERSAL:0,APPLICATION:64,CONTEXT_SPECIFIC:128,PRIVATE:192};asn1.Type={NONE:0,BOOLEAN:1,INTEGER:2,BITSTRING:3,OCTETSTRING:4,NULL:5,OID:6,ODESC:7,EXTERNAL:8,REAL:9,ENUMERATED:10,EMBEDDED:11,UTF8:12,ROID:13,SEQUENCE:16,SET:17,PRINTABLESTRING:19,IA5STRING:22,UTCTIME:23,GENERALIZEDTIME:24,BMPSTRING:30};asn1.create=function(tagClass,type,constructed,value){if(forge.util.isArray(value)){var tmp=[];for(var i=0;i<value.length;++i)if(value[i]!==
undefined)tmp.push(value[i]);value=tmp}return{tagClass:tagClass,type:type,constructed:constructed,composed:constructed||forge.util.isArray(value),value:value}};var _getValueLength=asn1.getBerValueLength=function(b){var b2=b.getByte();if(b2===128)return undefined;var length;var longForm=b2&128;if(!longForm)length=b2;else length=b.getInt((b2&127)<<3);return length};asn1.fromDer=function(bytes,strict){if(strict===undefined)strict=true;if(typeof bytes==="string")bytes=forge.util.createBuffer(bytes);if(bytes.length()<
2){var error=new Error("Too few bytes to parse DER.");error.bytes=bytes.length();throw error;}var b1=bytes.getByte();var tagClass=b1&192;var type=b1&31;var length=_getValueLength(bytes);if(bytes.length()<length){if(strict){var error=new Error("Too few bytes to read ASN.1 value.");error.detail=bytes.length()+" < "+length;throw error;}length=bytes.length()}var value;var constructed=(b1&32)===32;var composed=constructed;if(!composed&&tagClass===asn1.Class.UNIVERSAL&&type===asn1.Type.BITSTRING&&length>
1){var read=bytes.read;var unused=bytes.getByte();if(unused===0){b1=bytes.getByte();var tc=b1&192;if(tc===asn1.Class.UNIVERSAL||tc===asn1.Class.CONTEXT_SPECIFIC)try{var len=_getValueLength(bytes);composed=len===length-(bytes.read-read);if(composed){++read;--length}}catch(ex){}}bytes.read=read}if(composed){value=[];if(length===undefined)for(;;){if(bytes.bytes(2)===String.fromCharCode(0,0)){bytes.getBytes(2);break}value.push(asn1.fromDer(bytes,strict))}else{var start=bytes.length();while(length>0){value.push(asn1.fromDer(bytes,
strict));length-=start-bytes.length();start=bytes.length()}}}else{if(length===undefined){if(strict)throw new Error("Non-constructed ASN.1 object of indefinite length.");length=bytes.length()}if(type===asn1.Type.BMPSTRING){value="";for(var i=0;i<length;i+=2)value+=String.fromCharCode(bytes.getInt16())}else value=bytes.getBytes(length)}return asn1.create(tagClass,type,constructed,value)};asn1.toDer=function(obj){var bytes=forge.util.createBuffer();var b1=obj.tagClass|obj.type;var value=forge.util.createBuffer();
if(obj.composed){if(obj.constructed){if(asn1.Type.OCTETSTRING!=b1)b1|=32}else value.putByte(0);for(var i=0;i<obj.value.length;++i)if(obj.value[i]!==undefined)value.putBuffer(asn1.toDer(obj.value[i]))}else if(obj.type===asn1.Type.BMPSTRING)for(var i=0;i<obj.value.length;++i)value.putInt16(obj.value.charCodeAt(i));else value.putBytes(obj.value);bytes.putByte(b1);if(value.length()<=127)bytes.putByte(value.length()&127);else{var len=value.length();var lenBytes="";do{lenBytes+=String.fromCharCode(len&
255);len=len>>>8}while(len>0);bytes.putByte(lenBytes.length|128);for(var i=lenBytes.length-1;i>=0;--i)bytes.putByte(lenBytes.charCodeAt(i))}bytes.putBuffer(value);return bytes};asn1.oidToDer=function(oid){var values=oid.split(".");var bytes=forge.util.createBuffer();bytes.putByte(40*parseInt(values[0],10)+parseInt(values[1],10));var last,valueBytes,value,b;for(var i=2;i<values.length;++i){last=true;valueBytes=[];value=parseInt(values[i],10);do{b=value&127;value=value>>>7;if(!last)b|=128;valueBytes.push(b);
last=false}while(value>0);for(var n=valueBytes.length-1;n>=0;--n)bytes.putByte(valueBytes[n])}return bytes};asn1.derToOid=function(bytes){var oid;if(typeof bytes==="string")bytes=forge.util.createBuffer(bytes);var b=bytes.getByte();oid=Math.floor(b/40)+"."+b%40;var value=0;while(bytes.length()>0){b=bytes.getByte();value=value<<7;if(b&128)value+=b&127;else{oid+="."+(value+b);value=0}}return oid};asn1.utcTimeToDate=function(utc){var date=new Date;var year=parseInt(utc.substr(0,2),10);year=year>=50?
1900+year:2E3+year;var MM=parseInt(utc.substr(2,2),10)-1;var DD=parseInt(utc.substr(4,2),10);var hh=parseInt(utc.substr(6,2),10);var mm=parseInt(utc.substr(8,2),10);var ss=0;if(utc.length>11){var c=utc.charAt(10);var end=10;if(c!=="+"&&c!=="-"){ss=parseInt(utc.substr(10,2),10);end+=2}}date.setUTCFullYear(year,MM,DD);date.setUTCHours(hh,mm,ss,0);if(end){c=utc.charAt(end);if(c==="+"||c==="-"){var hhoffset=parseInt(utc.substr(end+1,2),10);var mmoffset=parseInt(utc.substr(end+4,2),10);var offset=hhoffset*
60+mmoffset;offset*=6E4;if(c==="+")date.setTime(+date-offset);else date.setTime(+date+offset)}}return date};asn1.generalizedTimeToDate=function(gentime){var date=new Date;var YYYY=parseInt(gentime.substr(0,4),10);var MM=parseInt(gentime.substr(4,2),10)-1;var DD=parseInt(gentime.substr(6,2),10);var hh=parseInt(gentime.substr(8,2),10);var mm=parseInt(gentime.substr(10,2),10);var ss=parseInt(gentime.substr(12,2),10);var fff=0;var offset=0;var isUTC=false;if(gentime.charAt(gentime.length-1)==="Z")isUTC=
true;var end=gentime.length-5,c=gentime.charAt(end);if(c==="+"||c==="-"){var hhoffset=parseInt(gentime.substr(end+1,2),10);var mmoffset=parseInt(gentime.substr(end+4,2),10);offset=hhoffset*60+mmoffset;offset*=6E4;if(c==="+")offset*=-1;isUTC=true}if(gentime.charAt(14)===".")fff=parseFloat(gentime.substr(14),10)*1E3;if(isUTC){date.setUTCFullYear(YYYY,MM,DD);date.setUTCHours(hh,mm,ss,fff);date.setTime(+date+offset)}else{date.setFullYear(YYYY,MM,DD);date.setHours(hh,mm,ss,fff)}return date};asn1.dateToUtcTime=
function(date){if(typeof date==="string")return date;var rval="";var format=[];format.push((""+date.getUTCFullYear()).substr(2));format.push(""+(date.getUTCMonth()+1));format.push(""+date.getUTCDate());format.push(""+date.getUTCHours());format.push(""+date.getUTCMinutes());format.push(""+date.getUTCSeconds());for(var i=0;i<format.length;++i){if(format[i].length<2)rval+="0";rval+=format[i]}rval+="Z";return rval};asn1.dateToGeneralizedTime=function(date){if(typeof date==="string")return date;var rval=
"";var format=[];format.push(""+date.getUTCFullYear());format.push(""+(date.getUTCMonth()+1));format.push(""+date.getUTCDate());format.push(""+date.getUTCHours());format.push(""+date.getUTCMinutes());format.push(""+date.getUTCSeconds());for(var i=0;i<format.length;++i){if(format[i].length<2)rval+="0";rval+=format[i]}rval+="Z";return rval};asn1.integerToDer=function(x){var rval=forge.util.createBuffer();if(x>=-128&&x<128)return rval.putSignedInt(x,8);if(x>=-32768&&x<32768)return rval.putSignedInt(x,
16);if(x>=-8388608&&x<8388608)return rval.putSignedInt(x,24);if(x>=-2147483648&&x<2147483648)return rval.putSignedInt(x,32);var error=new Error("Integer too large; max is 32-bits.");error.integer=x;throw error;};asn1.derToInteger=function(bytes){if(typeof bytes==="string")bytes=forge.util.createBuffer(bytes);var n=bytes.length()*8;if(n>32)throw new Error("Integer too large; max is 32-bits.");return bytes.getSignedInt(n)};asn1.validate=function(obj,v,capture,errors){var rval=false;if((obj.tagClass===
v.tagClass||typeof v.tagClass==="undefined")&&(obj.type===v.type||typeof v.type==="undefined"))if(obj.constructed===v.constructed||typeof v.constructed==="undefined"){rval=true;if(v.value&&forge.util.isArray(v.value)){var j=0;for(var i=0;rval&&i<v.value.length;++i){rval=v.value[i].optional||false;if(obj.value[j]){rval=asn1.validate(obj.value[j],v.value[i],capture,errors);if(rval)++j;else if(v.value[i].optional)rval=true}if(!rval&&errors)errors.push("["+v.name+"] "+'Tag class "'+v.tagClass+'", type "'+
v.type+'" expected value length "'+v.value.length+'", got "'+obj.value.length+'"')}}if(rval&&capture){if(v.capture)capture[v.capture]=obj.value;if(v.captureAsn1)capture[v.captureAsn1]=obj}}else{if(errors)errors.push("["+v.name+"] "+'Expected constructed "'+v.constructed+'", got "'+obj.constructed+'"')}else if(errors){if(obj.tagClass!==v.tagClass)errors.push("["+v.name+"] "+'Expected tag class "'+v.tagClass+'", got "'+obj.tagClass+'"');if(obj.type!==v.type)errors.push("["+v.name+"] "+'Expected type "'+
v.type+'", got "'+obj.type+'"')}return rval};var _nonLatinRegex=/[^\\u0000-\\u00ff]/;asn1.prettyPrint=function(obj,level,indentation){var rval="";level=level||0;indentation=indentation||2;if(level>0)rval+="\n";var indent="";for(var i=0;i<level*indentation;++i)indent+=" ";rval+=indent+"Tag: ";switch(obj.tagClass){case asn1.Class.UNIVERSAL:rval+="Universal:";break;case asn1.Class.APPLICATION:rval+="Application:";break;case asn1.Class.CONTEXT_SPECIFIC:rval+="Context-Specific:";break;case asn1.Class.PRIVATE:rval+=
"Private:";break}if(obj.tagClass===asn1.Class.UNIVERSAL){rval+=obj.type;switch(obj.type){case asn1.Type.NONE:rval+=" (None)";break;case asn1.Type.BOOLEAN:rval+=" (Boolean)";break;case asn1.Type.BITSTRING:rval+=" (Bit string)";break;case asn1.Type.INTEGER:rval+=" (Integer)";break;case asn1.Type.OCTETSTRING:rval+=" (Octet string)";break;case asn1.Type.NULL:rval+=" (Null)";break;case asn1.Type.OID:rval+=" (Object Identifier)";break;case asn1.Type.ODESC:rval+=" (Object Descriptor)";break;case asn1.Type.EXTERNAL:rval+=
" (External or Instance of)";break;case asn1.Type.REAL:rval+=" (Real)";break;case asn1.Type.ENUMERATED:rval+=" (Enumerated)";break;case asn1.Type.EMBEDDED:rval+=" (Embedded PDV)";break;case asn1.Type.UTF8:rval+=" (UTF8)";break;case asn1.Type.ROID:rval+=" (Relative Object Identifier)";break;case asn1.Type.SEQUENCE:rval+=" (Sequence)";break;case asn1.Type.SET:rval+=" (Set)";break;case asn1.Type.PRINTABLESTRING:rval+=" (Printable String)";break;case asn1.Type.IA5String:rval+=" (IA5String (ASCII))";break;
case asn1.Type.UTCTIME:rval+=" (UTC time)";break;case asn1.Type.GENERALIZEDTIME:rval+=" (Generalized time)";break;case asn1.Type.BMPSTRING:rval+=" (BMP String)";break}}else rval+=obj.type;rval+="\n";rval+=indent+"Constructed: "+obj.constructed+"\n";if(obj.composed){var subvalues=0;var sub="";for(var i=0;i<obj.value.length;++i)if(obj.value[i]!==undefined){subvalues+=1;sub+=asn1.prettyPrint(obj.value[i],level+1,indentation);if(i+1<obj.value.length)sub+=","}rval+=indent+"Sub values: "+subvalues+sub}else{rval+=
indent+"Value: ";if(obj.type===asn1.Type.OID){var oid=asn1.derToOid(obj.value);rval+=oid;if(forge.pki&&forge.pki.oids)if(oid in forge.pki.oids)rval+=" ("+forge.pki.oids[oid]+") "}if(obj.type===asn1.Type.INTEGER)try{rval+=asn1.derToInteger(obj.value)}catch(ex){rval+="0x"+forge.util.bytesToHex(obj.value)}else if(obj.type===asn1.Type.OCTETSTRING){if(!_nonLatinRegex.test(obj.value))rval+="("+obj.value+") ";rval+="0x"+forge.util.bytesToHex(obj.value)}else if(obj.type===asn1.Type.UTF8)rval+=forge.util.decodeUtf8(obj.value);
else if(obj.type===asn1.Type.PRINTABLESTRING||obj.type===asn1.Type.IA5String)rval+=obj.value;else if(_nonLatinRegex.test(obj.value))rval+="0x"+forge.util.bytesToHex(obj.value);else if(obj.value.length===0)rval+="[null]";else rval+=obj.value}return rval}}var name="asn1";if(typeof define!=="function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,module)}}else{if(typeof forge==="undefined")forge={};return initModule(forge)}var deps;var defineFunc=
function(require,module){module.exports=function(forge){var mods=deps.map(function(dep){return require(dep)}).concat(initModule);forge=forge||{};forge.defined=forge.defined||{};if(forge.defined[name])return forge[name];forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);return forge[name]}};var tmpDefine=define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):ids.slice(2);if(nodeJS){delete define;return tmpDefine.apply(null,Array.prototype.slice.call(arguments,
0))}define=tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,0))};define(["require","module","./util","./oids"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,0))})})();(function(){function initModule(forge){forge.pki=forge.pki||{};var oids=forge.pki.oids=forge.oids=forge.oids||{};oids["1.2.840.113549.1.1.1"]="rsaEncryption";oids["rsaEncryption"]="1.2.840.113549.1.1.1";oids["1.2.840.113549.1.1.4"]="md5WithRSAEncryption";oids["md5WithRSAEncryption"]="1.2.840.113549.1.1.4";oids["1.2.840.113549.1.1.5"]="sha1WithRSAEncryption";oids["sha1WithRSAEncryption"]="1.2.840.113549.1.1.5";oids["1.2.840.113549.1.1.7"]="RSAES-OAEP";oids["RSAES-OAEP"]="1.2.840.113549.1.1.7";oids["1.2.840.113549.1.1.8"]=
"mgf1";oids["mgf1"]="1.2.840.113549.1.1.8";oids["1.2.840.113549.1.1.9"]="pSpecified";oids["pSpecified"]="1.2.840.113549.1.1.9";oids["1.2.840.113549.1.1.10"]="RSASSA-PSS";oids["RSASSA-PSS"]="1.2.840.113549.1.1.10";oids["1.2.840.113549.1.1.11"]="sha256WithRSAEncryption";oids["sha256WithRSAEncryption"]="1.2.840.113549.1.1.11";oids["1.2.840.113549.1.1.12"]="sha384WithRSAEncryption";oids["sha384WithRSAEncryption"]="1.2.840.113549.1.1.12";oids["1.2.840.113549.1.1.13"]="sha512WithRSAEncryption";oids["sha512WithRSAEncryption"]=
"1.2.840.113549.1.1.13";oids["1.3.14.3.2.7"]="desCBC";oids["desCBC"]="1.3.14.3.2.7";oids["1.3.14.3.2.26"]="sha1";oids["sha1"]="1.3.14.3.2.26";oids["2.16.840.1.101.3.4.2.1"]="sha256";oids["sha256"]="2.16.840.1.101.3.4.2.1";oids["2.16.840.1.101.3.4.2.2"]="sha384";oids["sha384"]="2.16.840.1.101.3.4.2.2";oids["2.16.840.1.101.3.4.2.3"]="sha512";oids["sha512"]="2.16.840.1.101.3.4.2.3";oids["1.2.840.113549.2.5"]="md5";oids["md5"]="1.2.840.113549.2.5";oids["1.2.840.113549.1.7.1"]="data";oids["data"]="1.2.840.113549.1.7.1";
oids["1.2.840.113549.1.7.2"]="signedData";oids["signedData"]="1.2.840.113549.1.7.2";oids["1.2.840.113549.1.7.3"]="envelopedData";oids["envelopedData"]="1.2.840.113549.1.7.3";oids["1.2.840.113549.1.7.4"]="signedAndEnvelopedData";oids["signedAndEnvelopedData"]="1.2.840.113549.1.7.4";oids["1.2.840.113549.1.7.5"]="digestedData";oids["digestedData"]="1.2.840.113549.1.7.5";oids["1.2.840.113549.1.7.6"]="encryptedData";oids["encryptedData"]="1.2.840.113549.1.7.6";oids["1.2.840.113549.1.9.1"]="emailAddress";
oids["emailAddress"]="1.2.840.113549.1.9.1";oids["1.2.840.113549.1.9.2"]="unstructuredName";oids["unstructuredName"]="1.2.840.113549.1.9.2";oids["1.2.840.113549.1.9.3"]="contentType";oids["contentType"]="1.2.840.113549.1.9.3";oids["1.2.840.113549.1.9.4"]="messageDigest";oids["messageDigest"]="1.2.840.113549.1.9.4";oids["1.2.840.113549.1.9.5"]="signingTime";oids["signingTime"]="1.2.840.113549.1.9.5";oids["1.2.840.113549.1.9.6"]="counterSignature";oids["counterSignature"]="1.2.840.113549.1.9.6";oids["1.2.840.113549.1.9.7"]=
"challengePassword";oids["challengePassword"]="1.2.840.113549.1.9.7";oids["1.2.840.113549.1.9.8"]="unstructuredAddress";oids["unstructuredAddress"]="1.2.840.113549.1.9.8";oids["1.2.840.113549.1.9.14"]="extensionRequest";oids["extensionRequest"]="1.2.840.113549.1.9.14";oids["1.2.840.113549.1.9.20"]="friendlyName";oids["friendlyName"]="1.2.840.113549.1.9.20";oids["1.2.840.113549.1.9.21"]="localKeyId";oids["localKeyId"]="1.2.840.113549.1.9.21";oids["1.2.840.113549.1.9.22.1"]="x509Certificate";oids["x509Certificate"]=
"1.2.840.113549.1.9.22.1";oids["1.2.840.113549.1.12.10.1.1"]="keyBag";oids["keyBag"]="1.2.840.113549.1.12.10.1.1";oids["1.2.840.113549.1.12.10.1.2"]="pkcs8ShroudedKeyBag";oids["pkcs8ShroudedKeyBag"]="1.2.840.113549.1.12.10.1.2";oids["1.2.840.113549.1.12.10.1.3"]="certBag";oids["certBag"]="1.2.840.113549.1.12.10.1.3";oids["1.2.840.113549.1.12.10.1.4"]="crlBag";oids["crlBag"]="1.2.840.113549.1.12.10.1.4";oids["1.2.840.113549.1.12.10.1.5"]="secretBag";oids["secretBag"]="1.2.840.113549.1.12.10.1.5";oids["1.2.840.113549.1.12.10.1.6"]=
"safeContentsBag";oids["safeContentsBag"]="1.2.840.113549.1.12.10.1.6";oids["1.2.840.113549.1.5.13"]="pkcs5PBES2";oids["pkcs5PBES2"]="1.2.840.113549.1.5.13";oids["1.2.840.113549.1.5.12"]="pkcs5PBKDF2";oids["pkcs5PBKDF2"]="1.2.840.113549.1.5.12";oids["1.2.840.113549.1.12.1.1"]="pbeWithSHAAnd128BitRC4";oids["pbeWithSHAAnd128BitRC4"]="1.2.840.113549.1.12.1.1";oids["1.2.840.113549.1.12.1.2"]="pbeWithSHAAnd40BitRC4";oids["pbeWithSHAAnd40BitRC4"]="1.2.840.113549.1.12.1.2";oids["1.2.840.113549.1.12.1.3"]=
"pbeWithSHAAnd3-KeyTripleDES-CBC";oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]="1.2.840.113549.1.12.1.3";oids["1.2.840.113549.1.12.1.4"]="pbeWithSHAAnd2-KeyTripleDES-CBC";oids["pbeWithSHAAnd2-KeyTripleDES-CBC"]="1.2.840.113549.1.12.1.4";oids["1.2.840.113549.1.12.1.5"]="pbeWithSHAAnd128BitRC2-CBC";oids["pbeWithSHAAnd128BitRC2-CBC"]="1.2.840.113549.1.12.1.5";oids["1.2.840.113549.1.12.1.6"]="pbewithSHAAnd40BitRC2-CBC";oids["pbewithSHAAnd40BitRC2-CBC"]="1.2.840.113549.1.12.1.6";oids["1.2.840.113549.3.7"]=
"des-EDE3-CBC";oids["des-EDE3-CBC"]="1.2.840.113549.3.7";oids["2.16.840.1.101.3.4.1.2"]="aes128-CBC";oids["aes128-CBC"]="2.16.840.1.101.3.4.1.2";oids["2.16.840.1.101.3.4.1.22"]="aes192-CBC";oids["aes192-CBC"]="2.16.840.1.101.3.4.1.22";oids["2.16.840.1.101.3.4.1.42"]="aes256-CBC";oids["aes256-CBC"]="2.16.840.1.101.3.4.1.42";oids["2.5.4.3"]="commonName";oids["commonName"]="2.5.4.3";oids["2.5.4.5"]="serialName";oids["serialName"]="2.5.4.5";oids["2.5.4.6"]="countryName";oids["countryName"]="2.5.4.6";
oids["2.5.4.7"]="localityName";oids["localityName"]="2.5.4.7";oids["2.5.4.8"]="stateOrProvinceName";oids["stateOrProvinceName"]="2.5.4.8";oids["2.5.4.10"]="organizationName";oids["organizationName"]="2.5.4.10";oids["2.5.4.11"]="organizationalUnitName";oids["organizationalUnitName"]="2.5.4.11";oids["2.16.840.1.113730.1.1"]="nsCertType";oids["nsCertType"]="2.16.840.1.113730.1.1";oids["2.5.29.1"]="authorityKeyIdentifier";oids["2.5.29.2"]="keyAttributes";oids["2.5.29.3"]="certificatePolicies";oids["2.5.29.4"]=
"keyUsageRestriction";oids["2.5.29.5"]="policyMapping";oids["2.5.29.6"]="subtreesConstraint";oids["2.5.29.7"]="subjectAltName";oids["2.5.29.8"]="issuerAltName";oids["2.5.29.9"]="subjectDirectoryAttributes";oids["2.5.29.10"]="basicConstraints";oids["2.5.29.11"]="nameConstraints";oids["2.5.29.12"]="policyConstraints";oids["2.5.29.13"]="basicConstraints";oids["2.5.29.14"]="subjectKeyIdentifier";oids["subjectKeyIdentifier"]="2.5.29.14";oids["2.5.29.15"]="keyUsage";oids["keyUsage"]="2.5.29.15";oids["2.5.29.16"]=
"privateKeyUsagePeriod";oids["2.5.29.17"]="subjectAltName";oids["subjectAltName"]="2.5.29.17";oids["2.5.29.18"]="issuerAltName";oids["issuerAltName"]="2.5.29.18";oids["2.5.29.19"]="basicConstraints";oids["basicConstraints"]="2.5.29.19";oids["2.5.29.20"]="cRLNumber";oids["2.5.29.21"]="cRLReason";oids["2.5.29.22"]="expirationDate";oids["2.5.29.23"]="instructionCode";oids["2.5.29.24"]="invalidityDate";oids["2.5.29.25"]="cRLDistributionPoints";oids["2.5.29.26"]="issuingDistributionPoint";oids["2.5.29.27"]=
"deltaCRLIndicator";oids["2.5.29.28"]="issuingDistributionPoint";oids["2.5.29.29"]="certificateIssuer";oids["2.5.29.30"]="nameConstraints";oids["2.5.29.31"]="cRLDistributionPoints";oids["2.5.29.32"]="certificatePolicies";oids["2.5.29.33"]="policyMappings";oids["2.5.29.34"]="policyConstraints";oids["2.5.29.35"]="authorityKeyIdentifier";oids["authorityKeyIdentifier"]="2.5.29.35";oids["2.5.29.36"]="policyConstraints";oids["2.5.29.37"]="extKeyUsage";oids["extKeyUsage"]="2.5.29.37";oids["2.5.29.46"]="freshestCRL";
oids["2.5.29.54"]="inhibitAnyPolicy";oids["1.3.6.1.5.5.7.3.1"]="serverAuth";oids["serverAuth"]="1.3.6.1.5.5.7.3.1";oids["1.3.6.1.5.5.7.3.2"]="clientAuth";oids["clientAuth"]="1.3.6.1.5.5.7.3.2";oids["1.3.6.1.5.5.7.3.3"]="codeSigning";oids["codeSigning"]="1.3.6.1.5.5.7.3.3";oids["1.3.6.1.5.5.7.3.4"]="emailProtection";oids["emailProtection"]="1.3.6.1.5.5.7.3.4";oids["1.3.6.1.5.5.7.3.8"]="timeStamping";oids["timeStamping"]="1.3.6.1.5.5.7.3.8"}var name="oids";if(typeof define!=="function")if(typeof module===
"object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,module)}}else{if(typeof forge==="undefined")forge={};return initModule(forge)}var deps;var defineFunc=function(require,module){module.exports=function(forge){var mods=deps.map(function(dep){return require(dep)}).concat(initModule);forge=forge||{};forge.defined=forge.defined||{};if(forge.defined[name])return forge[name];forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);return forge[name]}};var tmpDefine=
define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):ids.slice(2);if(nodeJS){delete define;return tmpDefine.apply(null,Array.prototype.slice.call(arguments,0))}define=tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,0))};define(["require","module"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,0))})})();(function(){function initModule(forge){var sha1=forge.sha1=forge.sha1||{};forge.md=forge.md||{};forge.md.algorithms=forge.md.algorithms||{};forge.md.sha1=forge.md.algorithms.sha1=sha1;sha1.create=function(){if(!_initialized)_init();var _state=null;var _input=forge.util.createBuffer();var _w=new Array(80);var md={algorithm:"sha1",blockLength:64,digestLength:20,messageLength:0,fullMessageLength:null,messageLengthSize:8};md.start=function(){md.messageLength=0;md.fullMessageLength=md.messageLength64=
[];var int32s=md.messageLengthSize/4;for(var i=0;i<int32s;++i)md.fullMessageLength.push(0);_input=forge.util.createBuffer();_state={h0:1732584193,h1:4023233417,h2:2562383102,h3:271733878,h4:3285377520};return md};md.start();md.update=function(msg,encoding){if(encoding==="utf8")msg=forge.util.encodeUtf8(msg);var len=msg.length;md.messageLength+=len;len=[len/4294967296>>>0,len>>>0];for(var i=md.fullMessageLength.length-1;i>=0;--i){md.fullMessageLength[i]+=len[1];len[1]=len[0]+(md.fullMessageLength[i]/
4294967296>>>0);md.fullMessageLength[i]=md.fullMessageLength[i]>>>0;len[0]=len[1]/4294967296>>>0}_input.putBytes(msg);_update(_state,_w,_input);if(_input.read>2048||_input.length()===0)_input.compact();return md};md.digest=function(){var finalBlock=forge.util.createBuffer();finalBlock.putBytes(_input.bytes());var remaining=md.fullMessageLength[md.fullMessageLength.length-1]+md.messageLengthSize;var overflow=remaining&md.blockLength-1;finalBlock.putBytes(_padding.substr(0,md.blockLength-overflow));
var messageLength=forge.util.createBuffer();var next,carry;var bits=md.fullMessageLength[0]*8;for(var i=0;i<md.fullMessageLength.length;++i){next=md.fullMessageLength[i+1]*8;carry=next/4294967296>>>0;bits+=carry;finalBlock.putInt32(bits>>>0);bits=next}var s2={h0:_state.h0,h1:_state.h1,h2:_state.h2,h3:_state.h3,h4:_state.h4};_update(s2,_w,finalBlock);var rval=forge.util.createBuffer();rval.putInt32(s2.h0);rval.putInt32(s2.h1);rval.putInt32(s2.h2);rval.putInt32(s2.h3);rval.putInt32(s2.h4);return rval};
return md};var _padding=null;var _initialized=false;function _init(){_padding=String.fromCharCode(128);_padding+=forge.util.fillString(String.fromCharCode(0),64);_initialized=true}function _update(s,w,bytes){var t,a,b,c,d,e,f,i;var len=bytes.length();while(len>=64){a=s.h0;b=s.h1;c=s.h2;d=s.h3;e=s.h4;for(i=0;i<16;++i){t=bytes.getInt32();w[i]=t;f=d^b&(c^d);t=(a<<5|a>>>27)+f+e+1518500249+t;e=d;d=c;c=b<<30|b>>>2;b=a;a=t}for(;i<20;++i){t=w[i-3]^w[i-8]^w[i-14]^w[i-16];t=t<<1|t>>>31;w[i]=t;f=d^b&(c^d);t=
(a<<5|a>>>27)+f+e+1518500249+t;e=d;d=c;c=b<<30|b>>>2;b=a;a=t}for(;i<32;++i){t=w[i-3]^w[i-8]^w[i-14]^w[i-16];t=t<<1|t>>>31;w[i]=t;f=b^c^d;t=(a<<5|a>>>27)+f+e+1859775393+t;e=d;d=c;c=b<<30|b>>>2;b=a;a=t}for(;i<40;++i){t=w[i-6]^w[i-16]^w[i-28]^w[i-32];t=t<<2|t>>>30;w[i]=t;f=b^c^d;t=(a<<5|a>>>27)+f+e+1859775393+t;e=d;d=c;c=b<<30|b>>>2;b=a;a=t}for(;i<60;++i){t=w[i-6]^w[i-16]^w[i-28]^w[i-32];t=t<<2|t>>>30;w[i]=t;f=b&c|d&(b^c);t=(a<<5|a>>>27)+f+e+2400959708+t;e=d;d=c;c=b<<30|b>>>2;b=a;a=t}for(;i<80;++i){t=
w[i-6]^w[i-16]^w[i-28]^w[i-32];t=t<<2|t>>>30;w[i]=t;f=b^c^d;t=(a<<5|a>>>27)+f+e+3395469782+t;e=d;d=c;c=b<<30|b>>>2;b=a;a=t}s.h0=s.h0+a|0;s.h1=s.h1+b|0;s.h2=s.h2+c|0;s.h3=s.h3+d|0;s.h4=s.h4+e|0;len-=64}}}var name="sha1";if(typeof define!=="function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,module)}}else{if(typeof forge==="undefined")forge={};return initModule(forge)}var deps;var defineFunc=function(require,module){module.exports=function(forge){var mods=
deps.map(function(dep){return require(dep)}).concat(initModule);forge=forge||{};forge.defined=forge.defined||{};if(forge.defined[name])return forge[name];forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);return forge[name]}};var tmpDefine=define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):ids.slice(2);if(nodeJS){delete define;return tmpDefine.apply(null,Array.prototype.slice.call(arguments,0))}define=tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,
0))};define(["require","module","./util"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,0))})})();(function(){function initModule(forge){var hmac=forge.hmac=forge.hmac||{};hmac.create=function(){var _key=null;var _md=null;var _ipadding=null;var _opadding=null;var ctx={};ctx.start=function(md,key){if(md!==null)if(typeof md==="string"){md=md.toLowerCase();if(md in forge.md.algorithms)_md=forge.md.algorithms[md].create();else throw new Error('Unknown hash algorithm "'+md+'"');}else _md=md;if(key===null)key=_key;else{if(typeof key==="string")key=forge.util.createBuffer(key);else if(forge.util.isArray(key)){var tmp=
key;key=forge.util.createBuffer();for(var i=0;i<tmp.length;++i)key.putByte(tmp[i])}var keylen=key.length();if(keylen>_md.blockLength){_md.start();_md.update(key.bytes());key=_md.digest()}_ipadding=forge.util.createBuffer();_opadding=forge.util.createBuffer();keylen=key.length();for(var i=0;i<keylen;++i){var tmp=key.at(i);_ipadding.putByte(54^tmp);_opadding.putByte(92^tmp)}if(keylen<_md.blockLength){var tmp=_md.blockLength-keylen;for(var i=0;i<tmp;++i){_ipadding.putByte(54);_opadding.putByte(92)}}_key=
key;_ipadding=_ipadding.bytes();_opadding=_opadding.bytes()}_md.start();_md.update(_ipadding)};ctx.update=function(bytes){_md.update(bytes)};ctx.getMac=function(){var inner=_md.digest().bytes();_md.start();_md.update(_opadding);_md.update(inner);return _md.digest()};ctx.digest=ctx.getMac;return ctx}}var name="hmac";if(typeof define!=="function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,module)}}else{if(typeof forge==="undefined")forge=
{};return initModule(forge)}var deps;var defineFunc=function(require,module){module.exports=function(forge){var mods=deps.map(function(dep){return require(dep)}).concat(initModule);forge=forge||{};forge.defined=forge.defined||{};if(forge.defined[name])return forge[name];forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);return forge[name]}};var tmpDefine=define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):ids.slice(2);if(nodeJS){delete define;return tmpDefine.apply(null,
Array.prototype.slice.call(arguments,0))}define=tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,0))};define(["require","module","./md","./util"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,0))})})();(function(){function initModule(forge){var md5=forge.md5=forge.md5||{};forge.md=forge.md||{};forge.md.algorithms=forge.md.algorithms||{};forge.md.md5=forge.md.algorithms.md5=md5;md5.create=function(){if(!_initialized)_init();var _state=null;var _input=forge.util.createBuffer();var _w=new Array(16);var md={algorithm:"md5",blockLength:64,digestLength:16,messageLength:0,fullMessageLength:null,messageLengthSize:8};md.start=function(){md.messageLength=0;md.fullMessageLength=md.messageLength64=[];var int32s=
md.messageLengthSize/4;for(var i=0;i<int32s;++i)md.fullMessageLength.push(0);_input=forge.util.createBuffer();_state={h0:1732584193,h1:4023233417,h2:2562383102,h3:271733878};return md};md.start();md.update=function(msg,encoding){if(encoding==="utf8")msg=forge.util.encodeUtf8(msg);var len=msg.length;md.messageLength+=len;len=[len/4294967296>>>0,len>>>0];for(var i=md.fullMessageLength.length-1;i>=0;--i){md.fullMessageLength[i]+=len[1];len[1]=len[0]+(md.fullMessageLength[i]/4294967296>>>0);md.fullMessageLength[i]=
md.fullMessageLength[i]>>>0;len[0]=len[1]/4294967296>>>0}_input.putBytes(msg);_update(_state,_w,_input);if(_input.read>2048||_input.length()===0)_input.compact();return md};md.digest=function(){var finalBlock=forge.util.createBuffer();finalBlock.putBytes(_input.bytes());var remaining=md.fullMessageLength[md.fullMessageLength.length-1]+md.messageLengthSize;var overflow=remaining&md.blockLength-1;finalBlock.putBytes(_padding.substr(0,md.blockLength-overflow));var bits,carry=0;for(var i=md.fullMessageLength.length-
1;i>=0;--i){bits=md.fullMessageLength[i]*8+carry;carry=bits/4294967296>>>0;finalBlock.putInt32Le(bits>>>0)}var s2={h0:_state.h0,h1:_state.h1,h2:_state.h2,h3:_state.h3};_update(s2,_w,finalBlock);var rval=forge.util.createBuffer();rval.putInt32Le(s2.h0);rval.putInt32Le(s2.h1);rval.putInt32Le(s2.h2);rval.putInt32Le(s2.h3);return rval};return md};var _padding=null;var _g=null;var _r=null;var _k=null;var _initialized=false;function _init(){_padding=String.fromCharCode(128);_padding+=forge.util.fillString(String.fromCharCode(0),
64);_g=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,1,6,11,0,5,10,15,4,9,14,3,8,13,2,7,12,5,8,11,14,1,4,7,10,13,0,3,6,9,12,15,2,0,7,14,5,12,3,10,1,8,15,6,13,4,11,2,9];_r=[7,12,17,22,7,12,17,22,7,12,17,22,7,12,17,22,5,9,14,20,5,9,14,20,5,9,14,20,5,9,14,20,4,11,16,23,4,11,16,23,4,11,16,23,4,11,16,23,6,10,15,21,6,10,15,21,6,10,15,21,6,10,15,21];_k=new Array(64);for(var i=0;i<64;++i)_k[i]=Math.floor(Math.abs(Math.sin(i+1))*4294967296);_initialized=true}function _update(s,w,bytes){var t,a,b,c,d,f,r,i;var len=
bytes.length();while(len>=64){a=s.h0;b=s.h1;c=s.h2;d=s.h3;for(i=0;i<16;++i){w[i]=bytes.getInt32Le();f=d^b&(c^d);t=a+f+_k[i]+w[i];r=_r[i];a=d;d=c;c=b;b+=t<<r|t>>>32-r}for(;i<32;++i){f=c^d&(b^c);t=a+f+_k[i]+w[_g[i]];r=_r[i];a=d;d=c;c=b;b+=t<<r|t>>>32-r}for(;i<48;++i){f=b^c^d;t=a+f+_k[i]+w[_g[i]];r=_r[i];a=d;d=c;c=b;b+=t<<r|t>>>32-r}for(;i<64;++i){f=c^(b|~d);t=a+f+_k[i]+w[_g[i]];r=_r[i];a=d;d=c;c=b;b+=t<<r|t>>>32-r}s.h0=s.h0+a|0;s.h1=s.h1+b|0;s.h2=s.h2+c|0;s.h3=s.h3+d|0;len-=64}}}var name="md5";if(typeof define!==
"function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,module)}}else{if(typeof forge==="undefined")forge={};return initModule(forge)}var deps;var defineFunc=function(require,module){module.exports=function(forge){var mods=deps.map(function(dep){return require(dep)}).concat(initModule);forge=forge||{};forge.defined=forge.defined||{};if(forge.defined[name])return forge[name];forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);
return forge[name]}};var tmpDefine=define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):ids.slice(2);if(nodeJS){delete define;return tmpDefine.apply(null,Array.prototype.slice.call(arguments,0))}define=tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,0))};define(["require","module","./util"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,0))})})();(function(){function initModule(forge){var sha256=forge.sha256=forge.sha256||{};forge.md=forge.md||{};forge.md.algorithms=forge.md.algorithms||{};forge.md.sha256=forge.md.algorithms.sha256=sha256;sha256.create=function(){if(!_initialized)_init();var _state=null;var _input=forge.util.createBuffer();var _w=new Array(64);var md={algorithm:"sha256",blockLength:64,digestLength:32,messageLength:0,fullMessageLength:null,messageLengthSize:8};md.start=function(){md.messageLength=0;md.fullMessageLength=md.messageLength64=
[];var int32s=md.messageLengthSize/4;for(var i=0;i<int32s;++i)md.fullMessageLength.push(0);_input=forge.util.createBuffer();_state={h0:1779033703,h1:3144134277,h2:1013904242,h3:2773480762,h4:1359893119,h5:2600822924,h6:528734635,h7:1541459225};return md};md.start();md.update=function(msg,encoding){if(encoding==="utf8")msg=forge.util.encodeUtf8(msg);var len=msg.length;md.messageLength+=len;len=[len/4294967296>>>0,len>>>0];for(var i=md.fullMessageLength.length-1;i>=0;--i){md.fullMessageLength[i]+=len[1];
len[1]=len[0]+(md.fullMessageLength[i]/4294967296>>>0);md.fullMessageLength[i]=md.fullMessageLength[i]>>>0;len[0]=len[1]/4294967296>>>0}_input.putBytes(msg);_update(_state,_w,_input);if(_input.read>2048||_input.length()===0)_input.compact();return md};md.digest=function(){var finalBlock=forge.util.createBuffer();finalBlock.putBytes(_input.bytes());var remaining=md.fullMessageLength[md.fullMessageLength.length-1]+md.messageLengthSize;var overflow=remaining&md.blockLength-1;finalBlock.putBytes(_padding.substr(0,
md.blockLength-overflow));var messageLength=forge.util.createBuffer();var next,carry;var bits=md.fullMessageLength[0]*8;for(var i=0;i<md.fullMessageLength.length;++i){next=md.fullMessageLength[i+1]*8;carry=next/4294967296>>>0;bits+=carry;finalBlock.putInt32(bits>>>0);bits=next}var s2={h0:_state.h0,h1:_state.h1,h2:_state.h2,h3:_state.h3,h4:_state.h4,h5:_state.h5,h6:_state.h6,h7:_state.h7};_update(s2,_w,finalBlock);var rval=forge.util.createBuffer();rval.putInt32(s2.h0);rval.putInt32(s2.h1);rval.putInt32(s2.h2);
rval.putInt32(s2.h3);rval.putInt32(s2.h4);rval.putInt32(s2.h5);rval.putInt32(s2.h6);rval.putInt32(s2.h7);return rval};return md};var _padding=null;var _initialized=false;var _k=null;function _init(){_padding=String.fromCharCode(128);_padding+=forge.util.fillString(String.fromCharCode(0),64);_k=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,
604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];_initialized=true}
function _update(s,w,bytes){var t1,t2,s0,s1,ch,maj,i,a,b,c,d,e,f,g,h;var len=bytes.length();while(len>=64){for(i=0;i<16;++i)w[i]=bytes.getInt32();for(;i<64;++i){t1=w[i-2];t1=(t1>>>17|t1<<15)^(t1>>>19|t1<<13)^t1>>>10;t2=w[i-15];t2=(t2>>>7|t2<<25)^(t2>>>18|t2<<14)^t2>>>3;w[i]=t1+w[i-7]+t2+w[i-16]|0}a=s.h0;b=s.h1;c=s.h2;d=s.h3;e=s.h4;f=s.h5;g=s.h6;h=s.h7;for(i=0;i<64;++i){s1=(e>>>6|e<<26)^(e>>>11|e<<21)^(e>>>25|e<<7);ch=g^e&(f^g);s0=(a>>>2|a<<30)^(a>>>13|a<<19)^(a>>>22|a<<10);maj=a&b|c&(a^b);t1=h+s1+
ch+_k[i]+w[i];t2=s0+maj;h=g;g=f;f=e;e=d+t1|0;d=c;c=b;b=a;a=t1+t2|0}s.h0=s.h0+a|0;s.h1=s.h1+b|0;s.h2=s.h2+c|0;s.h3=s.h3+d|0;s.h4=s.h4+e|0;s.h5=s.h5+f|0;s.h6=s.h6+g|0;s.h7=s.h7+h|0;len-=64}}}var name="sha256";if(typeof define!=="function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,module)}}else{if(typeof forge==="undefined")forge={};return initModule(forge)}var deps;var defineFunc=function(require,module){module.exports=function(forge){var mods=
deps.map(function(dep){return require(dep)}).concat(initModule);forge=forge||{};forge.defined=forge.defined||{};if(forge.defined[name])return forge[name];forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);return forge[name]}};var tmpDefine=define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):ids.slice(2);if(nodeJS){delete define;return tmpDefine.apply(null,Array.prototype.slice.call(arguments,0))}define=tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,
0))};define(["require","module","./util"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,0))})})();(function(){function initModule(forge){var sha512=forge.sha512=forge.sha512||{};forge.md=forge.md||{};forge.md.algorithms=forge.md.algorithms||{};forge.md.sha512=forge.md.algorithms.sha512=sha512;var sha384=forge.sha384=forge.sha512.sha384=forge.sha512.sha384||{};sha384.create=function(){return sha512.create("SHA-384")};forge.md.sha384=forge.md.algorithms.sha384=sha384;forge.sha512.sha256=forge.sha512.sha256||{create:function(){return sha512.create("SHA-512/256")}};forge.md["sha512/256"]=forge.md.algorithms["sha512/256"]=
forge.sha512.sha256;forge.sha512.sha224=forge.sha512.sha224||{create:function(){return sha512.create("SHA-512/224")}};forge.md["sha512/224"]=forge.md.algorithms["sha512/224"]=forge.sha512.sha224;sha512.create=function(algorithm){if(!_initialized)_init();if(typeof algorithm==="undefined")algorithm="SHA-512";if(!(algorithm in _states))throw new Error("Invalid SHA-512 algorithm: "+algorithm);var _state=_states[algorithm];var _h=null;var _input=forge.util.createBuffer();var _w=new Array(80);for(var wi=
0;wi<80;++wi)_w[wi]=new Array(2);var md={algorithm:algorithm.replace("-","").toLowerCase(),blockLength:128,digestLength:64,messageLength:0,fullMessageLength:null,messageLengthSize:16};md.start=function(){md.messageLength=0;md.fullMessageLength=md.messageLength128=[];var int32s=md.messageLengthSize/4;for(var i=0;i<int32s;++i)md.fullMessageLength.push(0);_input=forge.util.createBuffer();_h=new Array(_state.length);for(var i=0;i<_state.length;++i)_h[i]=_state[i].slice(0);return md};md.start();md.update=
function(msg,encoding){if(encoding==="utf8")msg=forge.util.encodeUtf8(msg);var len=msg.length;md.messageLength+=len;len=[len/4294967296>>>0,len>>>0];for(var i=md.fullMessageLength.length-1;i>=0;--i){md.fullMessageLength[i]+=len[1];len[1]=len[0]+(md.fullMessageLength[i]/4294967296>>>0);md.fullMessageLength[i]=md.fullMessageLength[i]>>>0;len[0]=len[1]/4294967296>>>0}_input.putBytes(msg);_update(_h,_w,_input);if(_input.read>2048||_input.length()===0)_input.compact();return md};md.digest=function(){var finalBlock=
forge.util.createBuffer();finalBlock.putBytes(_input.bytes());var remaining=md.fullMessageLength[md.fullMessageLength.length-1]+md.messageLengthSize;var overflow=remaining&md.blockLength-1;finalBlock.putBytes(_padding.substr(0,md.blockLength-overflow));var messageLength=forge.util.createBuffer();var next,carry;var bits=md.fullMessageLength[0]*8;for(var i=0;i<md.fullMessageLength.length;++i){next=md.fullMessageLength[i+1]*8;carry=next/4294967296>>>0;bits+=carry;finalBlock.putInt32(bits>>>0);bits=next}var h=
new Array(_h.length);for(var i=0;i<_h.length;++i)h[i]=_h[i].slice(0);_update(h,_w,finalBlock);var rval=forge.util.createBuffer();var hlen;if(algorithm==="SHA-512")hlen=h.length;else if(algorithm==="SHA-384")hlen=h.length-2;else hlen=h.length-4;for(var i=0;i<hlen;++i){rval.putInt32(h[i][0]);if(i!==hlen-1||algorithm!=="SHA-512/224")rval.putInt32(h[i][1])}return rval};return md};var _padding=null;var _initialized=false;var _k=null;var _states=null;function _init(){_padding=String.fromCharCode(128);_padding+=
forge.util.fillString(String.fromCharCode(0),128);_k=[[1116352408,3609767458],[1899447441,602891725],[3049323471,3964484399],[3921009573,2173295548],[961987163,4081628472],[1508970993,3053834265],[2453635748,2937671579],[2870763221,3664609560],[3624381080,2734883394],[310598401,1164996542],[607225278,1323610764],[1426881987,3590304994],[1925078388,4068182383],[2162078206,991336113],[2614888103,633803317],[3248222580,3479774868],[3835390401,2666613458],[4022224774,944711139],[264347078,2341262773],
[604807628,2007800933],[770255983,1495990901],[1249150122,1856431235],[1555081692,3175218132],[1996064986,2198950837],[2554220882,3999719339],[2821834349,766784016],[2952996808,2566594879],[3210313671,3203337956],[3336571891,1034457026],[3584528711,2466948901],[113926993,3758326383],[338241895,168717936],[666307205,1188179964],[773529912,1546045734],[1294757372,1522805485],[1396182291,2643833823],[1695183700,2343527390],[1986661051,1014477480],[2177026350,1206759142],[2456956037,344077627],[2730485921,
1290863460],[2820302411,3158454273],[3259730800,3505952657],[3345764771,106217008],[3516065817,3606008344],[3600352804,1432725776],[4094571909,1467031594],[275423344,851169720],[430227734,3100823752],[506948616,1363258195],[659060556,3750685593],[883997877,3785050280],[958139571,3318307427],[1322822218,3812723403],[1537002063,2003034995],[1747873779,3602036899],[1955562222,1575990012],[2024104815,1125592928],[2227730452,2716904306],[2361852424,442776044],[2428436474,593698344],[2756734187,3733110249],
[3204031479,2999351573],[3329325298,3815920427],[3391569614,3928383900],[3515267271,566280711],[3940187606,3454069534],[4118630271,4000239992],[116418474,1914138554],[174292421,2731055270],[289380356,3203993006],[460393269,320620315],[685471733,587496836],[852142971,1086792851],[1017036298,365543100],[1126000580,2618297676],[1288033470,3409855158],[1501505948,4234509866],[1607167915,987167468],[1816402316,1246189591]];_states={};_states["SHA-512"]=[[1779033703,4089235720],[3144134277,2227873595],
[1013904242,4271175723],[2773480762,1595750129],[1359893119,2917565137],[2600822924,725511199],[528734635,4215389547],[1541459225,327033209]];_states["SHA-384"]=[[3418070365,3238371032],[1654270250,914150663],[2438529370,812702999],[355462360,4144912697],[1731405415,4290775857],[2394180231,1750603025],[3675008525,1694076839],[1203062813,3204075428]];_states["SHA-512/256"]=[[573645204,4230739756],[2673172387,3360449730],[596883563,1867755857],[2520282905,1497426621],[2519219938,2827943907],[3193839141,
1401305490],[721525244,746961066],[246885852,2177182882]];_states["SHA-512/224"]=[[2352822216,424955298],[1944164710,2312950998],[502970286,855612546],[1738396948,1479516111],[258812777,2077511080],[2011393907,79989058],[1067287976,1780299464],[286451373,2446758561]];_initialized=true}function _update(s,w,bytes){var t1_hi,t1_lo;var t2_hi,t2_lo;var s0_hi,s0_lo;var s1_hi,s1_lo;var ch_hi,ch_lo;var maj_hi,maj_lo;var a_hi,a_lo;var b_hi,b_lo;var c_hi,c_lo;var d_hi,d_lo;var e_hi,e_lo;var f_hi,f_lo;var g_hi,
g_lo;var h_hi,h_lo;var i,hi,lo,w2,w7,w15,w16;var len=bytes.length();while(len>=128){for(i=0;i<16;++i){w[i][0]=bytes.getInt32()>>>0;w[i][1]=bytes.getInt32()>>>0}for(;i<80;++i){w2=w[i-2];hi=w2[0];lo=w2[1];t1_hi=((hi>>>19|lo<<13)^(lo>>>29|hi<<3)^hi>>>6)>>>0;t1_lo=((hi<<13|lo>>>19)^(lo<<3|hi>>>29)^(hi<<26|lo>>>6))>>>0;w15=w[i-15];hi=w15[0];lo=w15[1];t2_hi=((hi>>>1|lo<<31)^(hi>>>8|lo<<24)^hi>>>7)>>>0;t2_lo=((hi<<31|lo>>>1)^(hi<<24|lo>>>8)^(hi<<25|lo>>>7))>>>0;w7=w[i-7];w16=w[i-16];lo=t1_lo+w7[1]+t2_lo+
w16[1];w[i][0]=t1_hi+w7[0]+t2_hi+w16[0]+(lo/4294967296>>>0)>>>0;w[i][1]=lo>>>0}a_hi=s[0][0];a_lo=s[0][1];b_hi=s[1][0];b_lo=s[1][1];c_hi=s[2][0];c_lo=s[2][1];d_hi=s[3][0];d_lo=s[3][1];e_hi=s[4][0];e_lo=s[4][1];f_hi=s[5][0];f_lo=s[5][1];g_hi=s[6][0];g_lo=s[6][1];h_hi=s[7][0];h_lo=s[7][1];for(i=0;i<80;++i){s1_hi=((e_hi>>>14|e_lo<<18)^(e_hi>>>18|e_lo<<14)^(e_lo>>>9|e_hi<<23))>>>0;s1_lo=((e_hi<<18|e_lo>>>14)^(e_hi<<14|e_lo>>>18)^(e_lo<<23|e_hi>>>9))>>>0;ch_hi=(g_hi^e_hi&(f_hi^g_hi))>>>0;ch_lo=(g_lo^e_lo&
(f_lo^g_lo))>>>0;s0_hi=((a_hi>>>28|a_lo<<4)^(a_lo>>>2|a_hi<<30)^(a_lo>>>7|a_hi<<25))>>>0;s0_lo=((a_hi<<4|a_lo>>>28)^(a_lo<<30|a_hi>>>2)^(a_lo<<25|a_hi>>>7))>>>0;maj_hi=(a_hi&b_hi|c_hi&(a_hi^b_hi))>>>0;maj_lo=(a_lo&b_lo|c_lo&(a_lo^b_lo))>>>0;lo=h_lo+s1_lo+ch_lo+_k[i][1]+w[i][1];t1_hi=h_hi+s1_hi+ch_hi+_k[i][0]+w[i][0]+(lo/4294967296>>>0)>>>0;t1_lo=lo>>>0;lo=s0_lo+maj_lo;t2_hi=s0_hi+maj_hi+(lo/4294967296>>>0)>>>0;t2_lo=lo>>>0;h_hi=g_hi;h_lo=g_lo;g_hi=f_hi;g_lo=f_lo;f_hi=e_hi;f_lo=e_lo;lo=d_lo+t1_lo;
e_hi=d_hi+t1_hi+(lo/4294967296>>>0)>>>0;e_lo=lo>>>0;d_hi=c_hi;d_lo=c_lo;c_hi=b_hi;c_lo=b_lo;b_hi=a_hi;b_lo=a_lo;lo=t1_lo+t2_lo;a_hi=t1_hi+t2_hi+(lo/4294967296>>>0)>>>0;a_lo=lo>>>0}lo=s[0][1]+a_lo;s[0][0]=s[0][0]+a_hi+(lo/4294967296>>>0)>>>0;s[0][1]=lo>>>0;lo=s[1][1]+b_lo;s[1][0]=s[1][0]+b_hi+(lo/4294967296>>>0)>>>0;s[1][1]=lo>>>0;lo=s[2][1]+c_lo;s[2][0]=s[2][0]+c_hi+(lo/4294967296>>>0)>>>0;s[2][1]=lo>>>0;lo=s[3][1]+d_lo;s[3][0]=s[3][0]+d_hi+(lo/4294967296>>>0)>>>0;s[3][1]=lo>>>0;lo=s[4][1]+e_lo;s[4][0]=
s[4][0]+e_hi+(lo/4294967296>>>0)>>>0;s[4][1]=lo>>>0;lo=s[5][1]+f_lo;s[5][0]=s[5][0]+f_hi+(lo/4294967296>>>0)>>>0;s[5][1]=lo>>>0;lo=s[6][1]+g_lo;s[6][0]=s[6][0]+g_hi+(lo/4294967296>>>0)>>>0;s[6][1]=lo>>>0;lo=s[7][1]+h_lo;s[7][0]=s[7][0]+h_hi+(lo/4294967296>>>0)>>>0;s[7][1]=lo>>>0;len-=128}}}var name="sha512";if(typeof define!=="function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,module)}}else{if(typeof forge==="undefined")forge={};return initModule(forge)}var deps;
var defineFunc=function(require,module){module.exports=function(forge){var mods=deps.map(function(dep){return require(dep)}).concat(initModule);forge=forge||{};forge.defined=forge.defined||{};if(forge.defined[name])return forge[name];forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);return forge[name]}};var tmpDefine=define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):ids.slice(2);if(nodeJS){delete define;return tmpDefine.apply(null,Array.prototype.slice.call(arguments,
0))}define=tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,0))};define(["require","module","./util"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,0))})})();(function(){function initModule(forge){var has160=forge.has160=forge.has160||{};forge.md=forge.md||{};forge.md.algorithms=forge.md.algorithms||{};forge.md.has160=forge.md.algorithms.has160=has160;has160.create=function(){var _state=null;var _input=[];var _pos=0;var md={algorithm:"has160",blockLength:64,digestLength:20};md.start=function(){this._state=[1732584193,4023233417,2562383102,271733878,3285377520];this._input=[];this._pos=0;return md};md.start();md.update=function(msg,encoding){this._input=
this._input.concat(has160internal.str2byteArray(msg));var b=md.blockLength;while(this._pos+b<=this._input.length){_update(this._input.slice(this._pos,this._pos+b),this._state,this._input.length);this._pos+=b}return this};md.digest=function(){_pad(this._input,this._pos);var b=md.blockLength;while(this._pos<this._input.length){_update(this._input.slice(this._pos,this._pos+b),this._state,this._input.length);this._pos+=b}var c=_finish(md.digestLength,this._state);c=has160internal.byteArray2str(c);this._reset();
var digestBuffer=forge.util.createBuffer();digestBuffer.putBytes(c);return digestBuffer};md._reset=function(){this._pos=0;this._input=[];this._state=null};return md};function _update(f,_state,_block_size){var g=has160internal.safeAdd32;var h=has160internal.rotl32;function FF(a,b,c,d,e,x,s){e=g(g(g(e,h(a,s)),d^b&(c^d)),x);b=h(b,10);return[b,e]}function GG(a,b,c,d,e,x,s){e=g(g(g(g(e,h(a,s)),b^c^d),x),1518500249);b=h(b,17);return[b,e]}function HH(a,b,c,d,e,x,s){e=g(g(g(g(e,h(a,s)),c^(b|~d)),x),1859775393);
b=h(b,25);return[b,e]}function II(a,b,c,d,e,x,s){e=g(g(g(g(e,h(a,s)),b^c^d),x),2400959708);b=h(b,30);return[b,e]}var a,b,c,d,e,T=new Array(16),K,t;var H=_state;var j=[];var k=_block_size;for(var i=0;i<k/4;i++)j[i]=has160internal.load32(f,i*4);a=H[0];b=H[1];c=H[2];d=H[3];e=H[4];T[0]=j[8]^j[9]^j[10]^j[11];T[1]=j[12]^j[13]^j[14]^j[15];T[2]=j[0]^j[1]^j[2]^j[3];T[3]=j[4]^j[5]^j[6]^j[7];T[4]=j[11]^j[14]^j[1]^j[4];T[5]=j[7]^j[10]^j[13]^j[0];T[6]=j[3]^j[6]^j[9]^j[12];T[7]=j[15]^j[2]^j[5]^j[8];T[8]=j[4]^j[13]^
j[6]^j[15];T[9]=j[8]^j[1]^j[10]^j[3];T[10]=j[12]^j[5]^j[14]^j[7];T[11]=j[0]^j[9]^j[2]^j[11];T[12]=j[15]^j[10]^j[5]^j[0];T[13]=j[11]^j[6]^j[1]^j[12];T[14]=j[7]^j[2]^j[13]^j[8];T[15]=j[3]^j[14]^j[9]^j[4];t=FF(a,b,c,d,e,T[0],5);b=t[0];e=t[1];t=FF(e,a,b,c,d,j[0],11);a=t[0];d=t[1];t=FF(d,e,a,b,c,j[1],7);e=t[0];c=t[1];t=FF(c,d,e,a,b,j[2],15);d=t[0];b=t[1];t=FF(b,c,d,e,a,j[3],6);c=t[0];a=t[1];t=FF(a,b,c,d,e,T[1],13);b=t[0];e=t[1];t=FF(e,a,b,c,d,j[4],8);a=t[0];d=t[1];t=FF(d,e,a,b,c,j[5],14);e=t[0];c=t[1];
t=FF(c,d,e,a,b,j[6],7);d=t[0];b=t[1];t=FF(b,c,d,e,a,j[7],12);c=t[0];a=t[1];t=FF(a,b,c,d,e,T[2],9);b=t[0];e=t[1];t=FF(e,a,b,c,d,j[8],11);a=t[0];d=t[1];t=FF(d,e,a,b,c,j[9],8);e=t[0];c=t[1];t=FF(c,d,e,a,b,j[10],15);d=t[0];b=t[1];t=FF(b,c,d,e,a,j[11],6);c=t[0];a=t[1];t=FF(a,b,c,d,e,T[3],12);b=t[0];e=t[1];t=FF(e,a,b,c,d,j[12],9);a=t[0];d=t[1];t=FF(d,e,a,b,c,j[13],14);e=t[0];c=t[1];t=FF(c,d,e,a,b,j[14],5);d=t[0];b=t[1];t=FF(b,c,d,e,a,j[15],13);c=t[0];a=t[1];t=GG(a,b,c,d,e,T[4],5);b=t[0];e=t[1];t=GG(e,a,
b,c,d,j[3],11);a=t[0];d=t[1];t=GG(d,e,a,b,c,j[6],7);e=t[0];c=t[1];t=GG(c,d,e,a,b,j[9],15);d=t[0];b=t[1];t=GG(b,c,d,e,a,j[12],6);c=t[0];a=t[1];t=GG(a,b,c,d,e,T[5],13);b=t[0];e=t[1];t=GG(e,a,b,c,d,j[15],8);a=t[0];d=t[1];t=GG(d,e,a,b,c,j[2],14);e=t[0];c=t[1];t=GG(c,d,e,a,b,j[5],7);d=t[0];b=t[1];t=GG(b,c,d,e,a,j[8],12);c=t[0];a=t[1];t=GG(a,b,c,d,e,T[6],9);b=t[0];e=t[1];t=GG(e,a,b,c,d,j[11],11);a=t[0];d=t[1];t=GG(d,e,a,b,c,j[14],8);e=t[0];c=t[1];t=GG(c,d,e,a,b,j[1],15);d=t[0];b=t[1];t=GG(b,c,d,e,a,j[4],
6);c=t[0];a=t[1];t=GG(a,b,c,d,e,T[7],12);b=t[0];e=t[1];t=GG(e,a,b,c,d,j[7],9);a=t[0];d=t[1];t=GG(d,e,a,b,c,j[10],14);e=t[0];c=t[1];t=GG(c,d,e,a,b,j[13],5);d=t[0];b=t[1];t=GG(b,c,d,e,a,j[0],13);c=t[0];a=t[1];t=HH(a,b,c,d,e,T[8],5);b=t[0];e=t[1];t=HH(e,a,b,c,d,j[12],11);a=t[0];d=t[1];t=HH(d,e,a,b,c,j[5],7);e=t[0];c=t[1];t=HH(c,d,e,a,b,j[14],15);d=t[0];b=t[1];t=HH(b,c,d,e,a,j[7],6);c=t[0];a=t[1];t=HH(a,b,c,d,e,T[9],13);b=t[0];e=t[1];t=HH(e,a,b,c,d,j[0],8);a=t[0];d=t[1];t=HH(d,e,a,b,c,j[9],14);e=t[0];
c=t[1];t=HH(c,d,e,a,b,j[2],7);d=t[0];b=t[1];t=HH(b,c,d,e,a,j[11],12);c=t[0];a=t[1];t=HH(a,b,c,d,e,T[10],9);b=t[0];e=t[1];t=HH(e,a,b,c,d,j[4],11);a=t[0];d=t[1];t=HH(d,e,a,b,c,j[13],8);e=t[0];c=t[1];t=HH(c,d,e,a,b,j[6],15);d=t[0];b=t[1];t=HH(b,c,d,e,a,j[15],6);c=t[0];a=t[1];t=HH(a,b,c,d,e,T[11],12);b=t[0];e=t[1];t=HH(e,a,b,c,d,j[8],9);a=t[0];d=t[1];t=HH(d,e,a,b,c,j[1],14);e=t[0];c=t[1];t=HH(c,d,e,a,b,j[10],5);d=t[0];b=t[1];t=HH(b,c,d,e,a,j[3],13);c=t[0];a=t[1];t=II(a,b,c,d,e,T[12],5);b=t[0];e=t[1];
t=II(e,a,b,c,d,j[7],11);a=t[0];d=t[1];t=II(d,e,a,b,c,j[2],7);e=t[0];c=t[1];t=II(c,d,e,a,b,j[13],15);d=t[0];b=t[1];t=II(b,c,d,e,a,j[8],6);c=t[0];a=t[1];t=II(a,b,c,d,e,T[13],13);b=t[0];e=t[1];t=II(e,a,b,c,d,j[3],8);a=t[0];d=t[1];t=II(d,e,a,b,c,j[14],14);e=t[0];c=t[1];t=II(c,d,e,a,b,j[9],7);d=t[0];b=t[1];t=II(b,c,d,e,a,j[4],12);c=t[0];a=t[1];t=II(a,b,c,d,e,T[14],9);b=t[0];e=t[1];t=II(e,a,b,c,d,j[15],11);a=t[0];d=t[1];t=II(d,e,a,b,c,j[10],8);e=t[0];c=t[1];t=II(c,d,e,a,b,j[5],15);d=t[0];b=t[1];t=II(b,
c,d,e,a,j[0],6);c=t[0];a=t[1];t=II(a,b,c,d,e,T[15],12);b=t[0];e=t[1];t=II(e,a,b,c,d,j[11],9);a=t[0];d=t[1];t=II(d,e,a,b,c,j[6],14);e=t[0];c=t[1];t=II(c,d,e,a,b,j[1],5);d=t[0];b=t[1];t=II(b,c,d,e,a,j[12],13);c=t[0];a=t[1];H[0]=g(H[0],a);H[1]=g(H[1],b);H[2]=g(H[2],c);H[3]=g(H[3],d);H[4]=g(H[4],e);_state=H}function _pad(a,b){var c=a.length;var d=c-b;a[b+d]=128;d++;if(d>56){while(d<64){a[b+d]=0;d++}d=0;b+=64}while(d<56){a[b+d]=0;d++}var e=new Array(8);has160internal.store64(e,0,0,c*8);for(var i=0;i<e.length;i++)a.push(e[i])}
function _finish(_digest_size,_state){var a=_digest_size;var b=new Array(a);for(var i=0;i<a/4;i++)has160internal.store32(b,i*4,_state[i]);_state=null;return b}var has160internal={rotl32:function(w,n){if(n<32)return w<<n|w>>>32-n;else return x},load32:function(a,i){return a[i]|a[i+1]<<8|a[i+2]<<16|a[i+3]<<24},store32:function(a,i,w){a.splice(i,4,w&255,w>>>8&255,w>>>16&255,w>>>24&255)},store64:function(a,i,b,c){a.splice(i,4,c&255,c>>>8&255,c>>>16&255,c>>>24&255);a.splice(i+4,4,b&255,b>>>8&255,b>>>16&
255,b>>>24&255)},safeAdd32:function(x,y){var a=(x&65535)+(y&65535);var b=(x>>>16)+(y>>>16)+(a>>>16);return(b&65535)<<16|a&65535},byteArray2str:function(a){var b="",i=0;while(i<a.length)b+=String.fromCharCode(a[i++]&255);return b},str2byteArray:function(a){var b=[],i=0;while(i<a.length){b[i]=a.charCodeAt(i);i++}return b}}}var name="has160";if(typeof define!=="function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,module)}}else{if(typeof forge===
"undefined")forge={};return initModule(forge)}var deps;var defineFunc=function(require,module){module.exports=function(forge){var mods=deps.map(function(dep){return require(dep)}).concat(initModule);forge=forge||{};forge.defined=forge.defined||{};if(forge.defined[name])return forge[name];forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);return forge[name]}};var tmpDefine=define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):ids.slice(2);if(nodeJS){delete define;
return tmpDefine.apply(null,Array.prototype.slice.call(arguments,0))}define=tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,0))};define(["require","module","./util"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,0))})})();(function(){function initModule(forge){var asn1=forge.asn1;var pki=forge.pki=forge.pki||{};pki.pemToDer=function(pem){var msg=forge.pem.decode(pem)[0];if(msg.procType&&msg.procType.type==="ENCRYPTED")throw new Error("Could not convert PEM to DER; PEM is encrypted.");return forge.util.createBuffer(msg.body)};pki.privateKeyFromPem=function(pem){var msg=forge.pem.decode(pem)[0];if(msg.type!=="PRIVATE KEY"&&msg.type!=="RSA PRIVATE KEY"){var error=new Error("Could not convert private key from PEM; PEM "+
'header type is not "PRIVATE KEY" or "RSA PRIVATE KEY".');error.headerType=msg.type;throw error;}if(msg.procType&&msg.procType.type==="ENCRYPTED")throw new Error("Could not convert private key from PEM; PEM is encrypted.");var obj=asn1.fromDer(msg.body);return pki.privateKeyFromAsn1(obj)};pki.privateKeyToPem=function(key,maxline){var msg={type:"RSA PRIVATE KEY",body:asn1.toDer(pki.privateKeyToAsn1(key)).getBytes()};return forge.pem.encode(msg,{maxline:maxline})};pki.privateKeyInfoToPem=function(pki,
maxline){var msg={type:"PRIVATE KEY",body:asn1.toDer(pki).getBytes()};return forge.pem.encode(msg,{maxline:maxline})}}var name="pki";if(typeof define!=="function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,module)}}else{if(typeof forge==="undefined")forge={};return initModule(forge)}var deps;var defineFunc=function(require,module){module.exports=function(forge){var mods=deps.map(function(dep){return require(dep)}).concat(initModule);forge=
forge||{};forge.defined=forge.defined||{};if(forge.defined[name])return forge[name];forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);return forge[name]}};var tmpDefine=define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):ids.slice(2);if(nodeJS){delete define;return tmpDefine.apply(null,Array.prototype.slice.call(arguments,0))}define=tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,0))};define(["require","module","./asn1","./oids",
"./pbe","./pem","./pbkdf2","./pkcs12","./pss","./rsa","./util","./x509"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,0))})})();(function(){function initModule(forge){var dbits;var canary=0xdeadbeefcafe;var j_lm=(canary&16777215)==15715070;function BigInteger(a,b,c){this.data=[];if(a!=null)if("number"==typeof a)this.fromNumber(a,b,c);else if(b==null&&"string"!=typeof a)this.fromString(a,256);else this.fromString(a,b)}function nbi(){return new BigInteger(null)}function am1(i,x,w,j,c,n){while(--n>=0){var v=x*this.data[i++]+w.data[j]+c;c=Math.floor(v/67108864);w.data[j++]=v&67108863}return c}function am2(i,x,w,j,c,n){var xl=
x&32767,xh=x>>15;while(--n>=0){var l=this.data[i]&32767;var h=this.data[i++]>>15;var m=xh*l+h*xl;l=xl*l+((m&32767)<<15)+w.data[j]+(c&1073741823);c=(l>>>30)+(m>>>15)+xh*h+(c>>>30);w.data[j++]=l&1073741823}return c}function am3(i,x,w,j,c,n){var xl=x&16383,xh=x>>14;while(--n>=0){var l=this.data[i]&16383;var h=this.data[i++]>>14;var m=xh*l+h*xl;l=xl*l+((m&16383)<<14)+w.data[j]+c;c=(l>>28)+(m>>14)+xh*h;w.data[j++]=l&268435455}return c}if(typeof navigator==="undefined"){BigInteger.prototype.am=am3;dbits=
28}else if(j_lm&&navigator.appName=="Microsoft Internet Explorer"){BigInteger.prototype.am=am2;dbits=30}else if(j_lm&&navigator.appName!="Netscape"){BigInteger.prototype.am=am1;dbits=26}else{BigInteger.prototype.am=am3;dbits=28}BigInteger.prototype.DB=dbits;BigInteger.prototype.DM=(1<<dbits)-1;BigInteger.prototype.DV=1<<dbits;var BI_FP=52;BigInteger.prototype.FV=Math.pow(2,BI_FP);BigInteger.prototype.F1=BI_FP-dbits;BigInteger.prototype.F2=2*dbits-BI_FP;var BI_RM="0123456789abcdefghijklmnopqrstuvwxyz";
var BI_RC=new Array;var rr,vv;rr="0".charCodeAt(0);for(vv=0;vv<=9;++vv)BI_RC[rr++]=vv;rr="a".charCodeAt(0);for(vv=10;vv<36;++vv)BI_RC[rr++]=vv;rr="A".charCodeAt(0);for(vv=10;vv<36;++vv)BI_RC[rr++]=vv;function int2char(n){return BI_RM.charAt(n)}function intAt(s,i){var c=BI_RC[s.charCodeAt(i)];return c==null?-1:c}function bnpCopyTo(r){for(var i=this.t-1;i>=0;--i)r.data[i]=this.data[i];r.t=this.t;r.s=this.s}function bnpFromInt(x){this.t=1;this.s=x<0?-1:0;if(x>0)this.data[0]=x;else if(x<-1)this.data[0]=
x+this.DV;else this.t=0}function nbv(i){var r=nbi();r.fromInt(i);return r}function bnpFromString(s,b){var k;if(b==16)k=4;else if(b==8)k=3;else if(b==256)k=8;else if(b==2)k=1;else if(b==32)k=5;else if(b==4)k=2;else{this.fromRadix(s,b);return}this.t=0;this.s=0;var i=s.length,mi=false,sh=0;while(--i>=0){var x=k==8?s[i]&255:intAt(s,i);if(x<0){if(s.charAt(i)=="-")mi=true;continue}mi=false;if(sh==0)this.data[this.t++]=x;else if(sh+k>this.DB){this.data[this.t-1]|=(x&(1<<this.DB-sh)-1)<<sh;this.data[this.t++]=
x>>this.DB-sh}else this.data[this.t-1]|=x<<sh;sh+=k;if(sh>=this.DB)sh-=this.DB}if(k==8&&(s[0]&128)!=0){this.s=-1;if(sh>0)this.data[this.t-1]|=(1<<this.DB-sh)-1<<sh}this.clamp();if(mi)BigInteger.ZERO.subTo(this,this)}function bnpClamp(){var c=this.s&this.DM;while(this.t>0&&this.data[this.t-1]==c)--this.t}function bnToString(b){if(this.s<0)return"-"+this.negate().toString(b);var k;if(b==16)k=4;else if(b==8)k=3;else if(b==2)k=1;else if(b==32)k=5;else if(b==4)k=2;else return this.toRadix(b);var km=(1<<
k)-1,d,m=false,r="",i=this.t;var p=this.DB-i*this.DB%k;if(i-- >0){if(p<this.DB&&(d=this.data[i]>>p)>0){m=true;r=int2char(d)}while(i>=0){if(p<k){d=(this.data[i]&(1<<p)-1)<<k-p;d|=this.data[--i]>>(p+=this.DB-k)}else{d=this.data[i]>>(p-=k)&km;if(p<=0){p+=this.DB;--i}}if(d>0)m=true;if(m)r+=int2char(d)}}return m?r:"0"}function bnNegate(){var r=nbi();BigInteger.ZERO.subTo(this,r);return r}function bnAbs(){return this.s<0?this.negate():this}function bnCompareTo(a){var r=this.s-a.s;if(r!=0)return r;var i=
this.t;r=i-a.t;if(r!=0)return this.s<0?-r:r;while(--i>=0)if((r=this.data[i]-a.data[i])!=0)return r;return 0}function nbits(x){var r=1,t;if((t=x>>>16)!=0){x=t;r+=16}if((t=x>>8)!=0){x=t;r+=8}if((t=x>>4)!=0){x=t;r+=4}if((t=x>>2)!=0){x=t;r+=2}if((t=x>>1)!=0){x=t;r+=1}return r}function bnBitLength(){if(this.t<=0)return 0;return this.DB*(this.t-1)+nbits(this.data[this.t-1]^this.s&this.DM)}function bnpDLShiftTo(n,r){var i;for(i=this.t-1;i>=0;--i)r.data[i+n]=this.data[i];for(i=n-1;i>=0;--i)r.data[i]=0;r.t=
this.t+n;r.s=this.s}function bnpDRShiftTo(n,r){for(var i=n;i<this.t;++i)r.data[i-n]=this.data[i];r.t=Math.max(this.t-n,0);r.s=this.s}function bnpLShiftTo(n,r){var bs=n%this.DB;var cbs=this.DB-bs;var bm=(1<<cbs)-1;var ds=Math.floor(n/this.DB),c=this.s<<bs&this.DM,i;for(i=this.t-1;i>=0;--i){r.data[i+ds+1]=this.data[i]>>cbs|c;c=(this.data[i]&bm)<<bs}for(i=ds-1;i>=0;--i)r.data[i]=0;r.data[ds]=c;r.t=this.t+ds+1;r.s=this.s;r.clamp()}function bnpRShiftTo(n,r){r.s=this.s;var ds=Math.floor(n/this.DB);if(ds>=
this.t){r.t=0;return}var bs=n%this.DB;var cbs=this.DB-bs;var bm=(1<<bs)-1;r.data[0]=this.data[ds]>>bs;for(var i=ds+1;i<this.t;++i){r.data[i-ds-1]|=(this.data[i]&bm)<<cbs;r.data[i-ds]=this.data[i]>>bs}if(bs>0)r.data[this.t-ds-1]|=(this.s&bm)<<cbs;r.t=this.t-ds;r.clamp()}function bnpSubTo(a,r){var i=0,c=0,m=Math.min(a.t,this.t);while(i<m){c+=this.data[i]-a.data[i];r.data[i++]=c&this.DM;c>>=this.DB}if(a.t<this.t){c-=a.s;while(i<this.t){c+=this.data[i];r.data[i++]=c&this.DM;c>>=this.DB}c+=this.s}else{c+=
this.s;while(i<a.t){c-=a.data[i];r.data[i++]=c&this.DM;c>>=this.DB}c-=a.s}r.s=c<0?-1:0;if(c<-1)r.data[i++]=this.DV+c;else if(c>0)r.data[i++]=c;r.t=i;r.clamp()}function bnpMultiplyTo(a,r){var x=this.abs(),y=a.abs();var i=x.t;r.t=i+y.t;while(--i>=0)r.data[i]=0;for(i=0;i<y.t;++i)r.data[i+x.t]=x.am(0,y.data[i],r,i,0,x.t);r.s=0;r.clamp();if(this.s!=a.s)BigInteger.ZERO.subTo(r,r)}function bnpSquareTo(r){var x=this.abs();var i=r.t=2*x.t;while(--i>=0)r.data[i]=0;for(i=0;i<x.t-1;++i){var c=x.am(i,x.data[i],
r,2*i,0,1);if((r.data[i+x.t]+=x.am(i+1,2*x.data[i],r,2*i+1,c,x.t-i-1))>=x.DV){r.data[i+x.t]-=x.DV;r.data[i+x.t+1]=1}}if(r.t>0)r.data[r.t-1]+=x.am(i,x.data[i],r,2*i,0,1);r.s=0;r.clamp()}function bnpDivRemTo(m,q,r){var pm=m.abs();if(pm.t<=0)return;var pt=this.abs();if(pt.t<pm.t){if(q!=null)q.fromInt(0);if(r!=null)this.copyTo(r);return}if(r==null)r=nbi();var y=nbi(),ts=this.s,ms=m.s;var nsh=this.DB-nbits(pm.data[pm.t-1]);if(nsh>0){pm.lShiftTo(nsh,y);pt.lShiftTo(nsh,r)}else{pm.copyTo(y);pt.copyTo(r)}var ys=
y.t;var y0=y.data[ys-1];if(y0==0)return;var yt=y0*(1<<this.F1)+(ys>1?y.data[ys-2]>>this.F2:0);var d1=this.FV/yt,d2=(1<<this.F1)/yt,e=1<<this.F2;var i=r.t,j=i-ys,t=q==null?nbi():q;y.dlShiftTo(j,t);if(r.compareTo(t)>=0){r.data[r.t++]=1;r.subTo(t,r)}BigInteger.ONE.dlShiftTo(ys,t);t.subTo(y,y);while(y.t<ys)y.data[y.t++]=0;while(--j>=0){var qd=r.data[--i]==y0?this.DM:Math.floor(r.data[i]*d1+(r.data[i-1]+e)*d2);if((r.data[i]+=y.am(0,qd,r,j,0,ys))<qd){y.dlShiftTo(j,t);r.subTo(t,r);while(r.data[i]<--qd)r.subTo(t,
r)}}if(q!=null){r.drShiftTo(ys,q);if(ts!=ms)BigInteger.ZERO.subTo(q,q)}r.t=ys;r.clamp();if(nsh>0)r.rShiftTo(nsh,r);if(ts<0)BigInteger.ZERO.subTo(r,r)}function bnMod(a){var r=nbi();this.abs().divRemTo(a,null,r);if(this.s<0&&r.compareTo(BigInteger.ZERO)>0)a.subTo(r,r);return r}function Classic(m){this.m=m}function cConvert(x){if(x.s<0||x.compareTo(this.m)>=0)return x.mod(this.m);else return x}function cRevert(x){return x}function cReduce(x){x.divRemTo(this.m,null,x)}function cMulTo(x,y,r){x.multiplyTo(y,
r);this.reduce(r)}function cSqrTo(x,r){x.squareTo(r);this.reduce(r)}Classic.prototype.convert=cConvert;Classic.prototype.revert=cRevert;Classic.prototype.reduce=cReduce;Classic.prototype.mulTo=cMulTo;Classic.prototype.sqrTo=cSqrTo;function bnpInvDigit(){if(this.t<1)return 0;var x=this.data[0];if((x&1)==0)return 0;var y=x&3;y=y*(2-(x&15)*y)&15;y=y*(2-(x&255)*y)&255;y=y*(2-((x&65535)*y&65535))&65535;y=y*(2-x*y%this.DV)%this.DV;return y>0?this.DV-y:-y}function Montgomery(m){this.m=m;this.mp=m.invDigit();
this.mpl=this.mp&32767;this.mph=this.mp>>15;this.um=(1<<m.DB-15)-1;this.mt2=2*m.t}function montConvert(x){var r=nbi();x.abs().dlShiftTo(this.m.t,r);r.divRemTo(this.m,null,r);if(x.s<0&&r.compareTo(BigInteger.ZERO)>0)this.m.subTo(r,r);return r}function montRevert(x){var r=nbi();x.copyTo(r);this.reduce(r);return r}function montReduce(x){while(x.t<=this.mt2)x.data[x.t++]=0;for(var i=0;i<this.m.t;++i){var j=x.data[i]&32767;var u0=j*this.mpl+((j*this.mph+(x.data[i]>>15)*this.mpl&this.um)<<15)&x.DM;j=i+
this.m.t;x.data[j]+=this.m.am(0,u0,x,i,0,this.m.t);while(x.data[j]>=x.DV){x.data[j]-=x.DV;x.data[++j]++}}x.clamp();x.drShiftTo(this.m.t,x);if(x.compareTo(this.m)>=0)x.subTo(this.m,x)}function montSqrTo(x,r){x.squareTo(r);this.reduce(r)}function montMulTo(x,y,r){x.multiplyTo(y,r);this.reduce(r)}Montgomery.prototype.convert=montConvert;Montgomery.prototype.revert=montRevert;Montgomery.prototype.reduce=montReduce;Montgomery.prototype.mulTo=montMulTo;Montgomery.prototype.sqrTo=montSqrTo;function bnpIsEven(){return(this.t>
0?this.data[0]&1:this.s)==0}function bnpExp(e,z){if(e>4294967295||e<1)return BigInteger.ONE;var r=nbi(),r2=nbi(),g=z.convert(this),i=nbits(e)-1;g.copyTo(r);while(--i>=0){z.sqrTo(r,r2);if((e&1<<i)>0)z.mulTo(r2,g,r);else{var t=r;r=r2;r2=t}}return z.revert(r)}function bnModPowInt(e,m){var z;if(e<256||m.isEven())z=new Classic(m);else z=new Montgomery(m);return this.exp(e,z)}BigInteger.prototype.copyTo=bnpCopyTo;BigInteger.prototype.fromInt=bnpFromInt;BigInteger.prototype.fromString=bnpFromString;BigInteger.prototype.clamp=
bnpClamp;BigInteger.prototype.dlShiftTo=bnpDLShiftTo;BigInteger.prototype.drShiftTo=bnpDRShiftTo;BigInteger.prototype.lShiftTo=bnpLShiftTo;BigInteger.prototype.rShiftTo=bnpRShiftTo;BigInteger.prototype.subTo=bnpSubTo;BigInteger.prototype.multiplyTo=bnpMultiplyTo;BigInteger.prototype.squareTo=bnpSquareTo;BigInteger.prototype.divRemTo=bnpDivRemTo;BigInteger.prototype.invDigit=bnpInvDigit;BigInteger.prototype.isEven=bnpIsEven;BigInteger.prototype.exp=bnpExp;BigInteger.prototype.toString=bnToString;BigInteger.prototype.negate=
bnNegate;BigInteger.prototype.abs=bnAbs;BigInteger.prototype.compareTo=bnCompareTo;BigInteger.prototype.bitLength=bnBitLength;BigInteger.prototype.mod=bnMod;BigInteger.prototype.modPowInt=bnModPowInt;BigInteger.ZERO=nbv(0);BigInteger.ONE=nbv(1);function bnClone(){var r=nbi();this.copyTo(r);return r}function bnIntValue(){if(this.s<0)if(this.t==1)return this.data[0]-this.DV;else{if(this.t==0)return-1}else if(this.t==1)return this.data[0];else if(this.t==0)return 0;return(this.data[1]&(1<<32-this.DB)-
1)<<this.DB|this.data[0]}function bnByteValue(){return this.t==0?this.s:this.data[0]<<24>>24}function bnShortValue(){return this.t==0?this.s:this.data[0]<<16>>16}function bnpChunkSize(r){return Math.floor(Math.LN2*this.DB/Math.log(r))}function bnSigNum(){if(this.s<0)return-1;else if(this.t<=0||this.t==1&&this.data[0]<=0)return 0;else return 1}function bnpToRadix(b){if(b==null)b=10;if(this.signum()==0||b<2||b>36)return"0";var cs=this.chunkSize(b);var a=Math.pow(b,cs);var d=nbv(a),y=nbi(),z=nbi(),r=
"";this.divRemTo(d,y,z);while(y.signum()>0){r=(a+z.intValue()).toString(b).substr(1)+r;y.divRemTo(d,y,z)}return z.intValue().toString(b)+r}function bnpFromRadix(s,b){this.fromInt(0);if(b==null)b=10;var cs=this.chunkSize(b);var d=Math.pow(b,cs),mi=false,j=0,w=0;for(var i=0;i<s.length;++i){var x=intAt(s,i);if(x<0){if(s.charAt(i)=="-"&&this.signum()==0)mi=true;continue}w=b*w+x;if(++j>=cs){this.dMultiply(d);this.dAddOffset(w,0);j=0;w=0}}if(j>0){this.dMultiply(Math.pow(b,j));this.dAddOffset(w,0)}if(mi)BigInteger.ZERO.subTo(this,
this)}function bnpFromNumber(a,b,c){if("number"==typeof b)if(a<2)this.fromInt(1);else{this.fromNumber(a,c);if(!this.testBit(a-1))this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);if(this.isEven())this.dAddOffset(1,0);while(!this.isProbablePrime(b)){this.dAddOffset(2,0);if(this.bitLength()>a)this.subTo(BigInteger.ONE.shiftLeft(a-1),this)}}else{var x=new Array,t=a&7;x.length=(a>>3)+1;b.nextBytes(x);if(t>0)x[0]&=(1<<t)-1;else x[0]=0;this.fromString(x,256)}}function bnToByteArray(){var i=this.t,
r=new Array;r[0]=this.s;var p=this.DB-i*this.DB%8,d,k=0;if(i-- >0){if(p<this.DB&&(d=this.data[i]>>p)!=(this.s&this.DM)>>p)r[k++]=d|this.s<<this.DB-p;while(i>=0){if(p<8){d=(this.data[i]&(1<<p)-1)<<8-p;d|=this.data[--i]>>(p+=this.DB-8)}else{d=this.data[i]>>(p-=8)&255;if(p<=0){p+=this.DB;--i}}if((d&128)!=0)d|=-256;if(k==0&&(this.s&128)!=(d&128))++k;if(k>0||d!=this.s)r[k++]=d}}return r}function bnEquals(a){return this.compareTo(a)==0}function bnMin(a){return this.compareTo(a)<0?this:a}function bnMax(a){return this.compareTo(a)>
0?this:a}function bnpBitwiseTo(a,op,r){var i,f,m=Math.min(a.t,this.t);for(i=0;i<m;++i)r.data[i]=op(this.data[i],a.data[i]);if(a.t<this.t){f=a.s&this.DM;for(i=m;i<this.t;++i)r.data[i]=op(this.data[i],f);r.t=this.t}else{f=this.s&this.DM;for(i=m;i<a.t;++i)r.data[i]=op(f,a.data[i]);r.t=a.t}r.s=op(this.s,a.s);r.clamp()}function op_and(x,y){return x&y}function bnAnd(a){var r=nbi();this.bitwiseTo(a,op_and,r);return r}function op_or(x,y){return x|y}function bnOr(a){var r=nbi();this.bitwiseTo(a,op_or,r);return r}
function op_xor(x,y){return x^y}function bnXor(a){var r=nbi();this.bitwiseTo(a,op_xor,r);return r}function op_andnot(x,y){return x&~y}function bnAndNot(a){var r=nbi();this.bitwiseTo(a,op_andnot,r);return r}function bnNot(){var r=nbi();for(var i=0;i<this.t;++i)r.data[i]=this.DM&~this.data[i];r.t=this.t;r.s=~this.s;return r}function bnShiftLeft(n){var r=nbi();if(n<0)this.rShiftTo(-n,r);else this.lShiftTo(n,r);return r}function bnShiftRight(n){var r=nbi();if(n<0)this.lShiftTo(-n,r);else this.rShiftTo(n,
r);return r}function lbit(x){if(x==0)return-1;var r=0;if((x&65535)==0){x>>=16;r+=16}if((x&255)==0){x>>=8;r+=8}if((x&15)==0){x>>=4;r+=4}if((x&3)==0){x>>=2;r+=2}if((x&1)==0)++r;return r}function bnGetLowestSetBit(){for(var i=0;i<this.t;++i)if(this.data[i]!=0)return i*this.DB+lbit(this.data[i]);if(this.s<0)return this.t*this.DB;return-1}function cbit(x){var r=0;while(x!=0){x&=x-1;++r}return r}function bnBitCount(){var r=0,x=this.s&this.DM;for(var i=0;i<this.t;++i)r+=cbit(this.data[i]^x);return r}function bnTestBit(n){var j=
Math.floor(n/this.DB);if(j>=this.t)return this.s!=0;return(this.data[j]&1<<n%this.DB)!=0}function bnpChangeBit(n,op){var r=BigInteger.ONE.shiftLeft(n);this.bitwiseTo(r,op,r);return r}function bnSetBit(n){return this.changeBit(n,op_or)}function bnClearBit(n){return this.changeBit(n,op_andnot)}function bnFlipBit(n){return this.changeBit(n,op_xor)}function bnpAddTo(a,r){var i=0,c=0,m=Math.min(a.t,this.t);while(i<m){c+=this.data[i]+a.data[i];r.data[i++]=c&this.DM;c>>=this.DB}if(a.t<this.t){c+=a.s;while(i<
this.t){c+=this.data[i];r.data[i++]=c&this.DM;c>>=this.DB}c+=this.s}else{c+=this.s;while(i<a.t){c+=a.data[i];r.data[i++]=c&this.DM;c>>=this.DB}c+=a.s}r.s=c<0?-1:0;if(c>0)r.data[i++]=c;else if(c<-1)r.data[i++]=this.DV+c;r.t=i;r.clamp()}function bnAdd(a){var r=nbi();this.addTo(a,r);return r}function bnSubtract(a){var r=nbi();this.subTo(a,r);return r}function bnMultiply(a){var r=nbi();this.multiplyTo(a,r);return r}function bnDivide(a){var r=nbi();this.divRemTo(a,r,null);return r}function bnRemainder(a){var r=
nbi();this.divRemTo(a,null,r);return r}function bnDivideAndRemainder(a){var q=nbi(),r=nbi();this.divRemTo(a,q,r);return new Array(q,r)}function bnpDMultiply(n){this.data[this.t]=this.am(0,n-1,this,0,0,this.t);++this.t;this.clamp()}function bnpDAddOffset(n,w){if(n==0)return;while(this.t<=w)this.data[this.t++]=0;this.data[w]+=n;while(this.data[w]>=this.DV){this.data[w]-=this.DV;if(++w>=this.t)this.data[this.t++]=0;++this.data[w]}}function NullExp(){}function nNop(x){return x}function nMulTo(x,y,r){x.multiplyTo(y,
r)}function nSqrTo(x,r){x.squareTo(r)}NullExp.prototype.convert=nNop;NullExp.prototype.revert=nNop;NullExp.prototype.mulTo=nMulTo;NullExp.prototype.sqrTo=nSqrTo;function bnPow(e){return this.exp(e,new NullExp)}function bnpMultiplyLowerTo(a,n,r){var i=Math.min(this.t+a.t,n);r.s=0;r.t=i;while(i>0)r.data[--i]=0;var j;for(j=r.t-this.t;i<j;++i)r.data[i+this.t]=this.am(0,a.data[i],r,i,0,this.t);for(j=Math.min(a.t,n);i<j;++i)this.am(0,a.data[i],r,i,0,n-i);r.clamp()}function bnpMultiplyUpperTo(a,n,r){--n;
var i=r.t=this.t+a.t-n;r.s=0;while(--i>=0)r.data[i]=0;for(i=Math.max(n-this.t,0);i<a.t;++i)r.data[this.t+i-n]=this.am(n-i,a.data[i],r,0,0,this.t+i-n);r.clamp();r.drShiftTo(1,r)}function Barrett(m){this.r2=nbi();this.q3=nbi();BigInteger.ONE.dlShiftTo(2*m.t,this.r2);this.mu=this.r2.divide(m);this.m=m}function barrettConvert(x){if(x.s<0||x.t>2*this.m.t)return x.mod(this.m);else if(x.compareTo(this.m)<0)return x;else{var r=nbi();x.copyTo(r);this.reduce(r);return r}}function barrettRevert(x){return x}
function barrettReduce(x){x.drShiftTo(this.m.t-1,this.r2);if(x.t>this.m.t+1){x.t=this.m.t+1;x.clamp()}this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);while(x.compareTo(this.r2)<0)x.dAddOffset(1,this.m.t+1);x.subTo(this.r2,x);while(x.compareTo(this.m)>=0)x.subTo(this.m,x)}function barrettSqrTo(x,r){x.squareTo(r);this.reduce(r)}function barrettMulTo(x,y,r){x.multiplyTo(y,r);this.reduce(r)}Barrett.prototype.convert=barrettConvert;Barrett.prototype.revert=
barrettRevert;Barrett.prototype.reduce=barrettReduce;Barrett.prototype.mulTo=barrettMulTo;Barrett.prototype.sqrTo=barrettSqrTo;function bnModPow(e,m){var i=e.bitLength(),k,r=nbv(1),z;if(i<=0)return r;else if(i<18)k=1;else if(i<48)k=3;else if(i<144)k=4;else if(i<768)k=5;else k=6;if(i<8)z=new Classic(m);else if(m.isEven())z=new Barrett(m);else z=new Montgomery(m);var g=new Array,n=3,k1=k-1,km=(1<<k)-1;g[1]=z.convert(this);if(k>1){var g2=nbi();z.sqrTo(g[1],g2);while(n<=km){g[n]=nbi();z.mulTo(g2,g[n-
2],g[n]);n+=2}}var j=e.t-1,w,is1=true,r2=nbi(),t;i=nbits(e.data[j])-1;while(j>=0){if(i>=k1)w=e.data[j]>>i-k1&km;else{w=(e.data[j]&(1<<i+1)-1)<<k1-i;if(j>0)w|=e.data[j-1]>>this.DB+i-k1}n=k;while((w&1)==0){w>>=1;--n}if((i-=n)<0){i+=this.DB;--j}if(is1){g[w].copyTo(r);is1=false}else{while(n>1){z.sqrTo(r,r2);z.sqrTo(r2,r);n-=2}if(n>0)z.sqrTo(r,r2);else{t=r;r=r2;r2=t}z.mulTo(r2,g[w],r)}while(j>=0&&(e.data[j]&1<<i)==0){z.sqrTo(r,r2);t=r;r=r2;r2=t;if(--i<0){i=this.DB-1;--j}}}return z.revert(r)}function bnGCD(a){var x=
this.s<0?this.negate():this.clone();var y=a.s<0?a.negate():a.clone();if(x.compareTo(y)<0){var t=x;x=y;y=t}var i=x.getLowestSetBit(),g=y.getLowestSetBit();if(g<0)return x;if(i<g)g=i;if(g>0){x.rShiftTo(g,x);y.rShiftTo(g,y)}while(x.signum()>0){if((i=x.getLowestSetBit())>0)x.rShiftTo(i,x);if((i=y.getLowestSetBit())>0)y.rShiftTo(i,y);if(x.compareTo(y)>=0){x.subTo(y,x);x.rShiftTo(1,x)}else{y.subTo(x,y);y.rShiftTo(1,y)}}if(g>0)y.lShiftTo(g,y);return y}function bnpModInt(n){if(n<=0)return 0;var d=this.DV%
n,r=this.s<0?n-1:0;if(this.t>0)if(d==0)r=this.data[0]%n;else for(var i=this.t-1;i>=0;--i)r=(d*r+this.data[i])%n;return r}function bnModInverse(m){var ac=m.isEven();if(this.isEven()&&ac||m.signum()==0)return BigInteger.ZERO;var u=m.clone(),v=this.clone();var a=nbv(1),b=nbv(0),c=nbv(0),d=nbv(1);while(u.signum()!=0){while(u.isEven()){u.rShiftTo(1,u);if(ac){if(!a.isEven()||!b.isEven()){a.addTo(this,a);b.subTo(m,b)}a.rShiftTo(1,a)}else if(!b.isEven())b.subTo(m,b);b.rShiftTo(1,b)}while(v.isEven()){v.rShiftTo(1,
v);if(ac){if(!c.isEven()||!d.isEven()){c.addTo(this,c);d.subTo(m,d)}c.rShiftTo(1,c)}else if(!d.isEven())d.subTo(m,d);d.rShiftTo(1,d)}if(u.compareTo(v)>=0){u.subTo(v,u);if(ac)a.subTo(c,a);b.subTo(d,b)}else{v.subTo(u,v);if(ac)c.subTo(a,c);d.subTo(b,d)}}if(v.compareTo(BigInteger.ONE)!=0)return BigInteger.ZERO;if(d.compareTo(m)>=0)return d.subtract(m);if(d.signum()<0)d.addTo(m,d);else return d;if(d.signum()<0)return d.add(m);else return d}var lowprimes=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,
61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509];var lplim=(1<<26)/lowprimes[lowprimes.length-1];function bnIsProbablePrime(t){var i,x=this.abs();if(x.t==1&&x.data[0]<=lowprimes[lowprimes.length-1]){for(i=0;i<lowprimes.length;++i)if(x.data[0]==
lowprimes[i])return true;return false}if(x.isEven())return false;i=1;while(i<lowprimes.length){var m=lowprimes[i],j=i+1;while(j<lowprimes.length&&m<lplim)m*=lowprimes[j++];m=x.modInt(m);while(i<j)if(m%lowprimes[i++]==0)return false}return x.millerRabin(t)}function bnpMillerRabin(t){var n1=this.subtract(BigInteger.ONE);var k=n1.getLowestSetBit();if(k<=0)return false;var r=n1.shiftRight(k);var prng=bnGetPrng();var a;for(var i=0;i<t;++i){do a=new BigInteger(this.bitLength(),prng);while(a.compareTo(BigInteger.ONE)<=
0||a.compareTo(n1)>=0);var y=a.modPow(r,this);if(y.compareTo(BigInteger.ONE)!=0&&y.compareTo(n1)!=0){var j=1;while(j++<k&&y.compareTo(n1)!=0){y=y.modPowInt(2,this);if(y.compareTo(BigInteger.ONE)==0)return false}if(y.compareTo(n1)!=0)return false}}return true}function bnGetPrng(){return{nextBytes:function(x){for(var i=0;i<x.length;++i)x[i]=Math.floor(Math.random()*256)}}}BigInteger.probablePrime=function(a,b,c){if(typeof c=="undefined"||c==null)c=1;var x=new BigInteger(a,b);if(!x.testBit(a-1))x.bitwiseTo(BigInteger.ONE.shiftLeft(a-
1),op_or,x);if(x.isEven())x.dAddOffset(1,0);while(!x.isProbablePrime(c)){x.dAddOffset(2,0);if(x.bitLength()>a)x.subTo(BigInteger.ONE.shiftLeft(a-1),x)}return x};BigInteger.random=function(bitlength,b){return new BigInteger(bitlength,b)};BigInteger.prototype.chunkSize=bnpChunkSize;BigInteger.prototype.toRadix=bnpToRadix;BigInteger.prototype.fromRadix=bnpFromRadix;BigInteger.prototype.fromNumber=bnpFromNumber;BigInteger.prototype.bitwiseTo=bnpBitwiseTo;BigInteger.prototype.changeBit=bnpChangeBit;BigInteger.prototype.addTo=
bnpAddTo;BigInteger.prototype.dMultiply=bnpDMultiply;BigInteger.prototype.dAddOffset=bnpDAddOffset;BigInteger.prototype.multiplyLowerTo=bnpMultiplyLowerTo;BigInteger.prototype.multiplyUpperTo=bnpMultiplyUpperTo;BigInteger.prototype.modInt=bnpModInt;BigInteger.prototype.millerRabin=bnpMillerRabin;BigInteger.prototype.clone=bnClone;BigInteger.prototype.intValue=bnIntValue;BigInteger.prototype.byteValue=bnByteValue;BigInteger.prototype.shortValue=bnShortValue;BigInteger.prototype.signum=bnSigNum;BigInteger.prototype.toByteArray=
bnToByteArray;BigInteger.prototype.equals=bnEquals;BigInteger.prototype.min=bnMin;BigInteger.prototype.max=bnMax;BigInteger.prototype.and=bnAnd;BigInteger.prototype.or=bnOr;BigInteger.prototype.xor=bnXor;BigInteger.prototype.andNot=bnAndNot;BigInteger.prototype.not=bnNot;BigInteger.prototype.shiftLeft=bnShiftLeft;BigInteger.prototype.shiftRight=bnShiftRight;BigInteger.prototype.getLowestSetBit=bnGetLowestSetBit;BigInteger.prototype.bitCount=bnBitCount;BigInteger.prototype.testBit=bnTestBit;BigInteger.prototype.setBit=
bnSetBit;BigInteger.prototype.clearBit=bnClearBit;BigInteger.prototype.flipBit=bnFlipBit;BigInteger.prototype.add=bnAdd;BigInteger.prototype.subtract=bnSubtract;BigInteger.prototype.multiply=bnMultiply;BigInteger.prototype.divide=bnDivide;BigInteger.prototype.remainder=bnRemainder;BigInteger.prototype.divideAndRemainder=bnDivideAndRemainder;BigInteger.prototype.modPow=bnModPow;BigInteger.prototype.modInverse=bnModInverse;BigInteger.prototype.pow=bnPow;BigInteger.prototype.gcd=bnGCD;BigInteger.prototype.isProbablePrime=
bnIsProbablePrime;forge.jsbn=forge.jsbn||{};forge.jsbn.BigInteger=BigInteger}var name="jsbn";if(typeof define!=="function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,module)}}else{if(typeof forge==="undefined")forge={};return initModule(forge)}var deps;var defineFunc=function(require,module){module.exports=function(forge){var mods=deps.map(function(dep){return require(dep)}).concat(initModule);forge=forge||{};forge.defined=forge.defined||
{};if(forge.defined[name])return forge[name];forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);return forge[name]}};var tmpDefine=define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):ids.slice(2);if(nodeJS){delete define;return tmpDefine.apply(null,Array.prototype.slice.call(arguments,0))}define=tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,0))};define(["require","module"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,
0))})})();(function(){function initModule(forge){if(typeof BigInteger==="undefined")var BigInteger=forge.jsbn.BigInteger;var asn1=forge.asn1;var pki=forge.pki=forge.pki||{};pki.pbe=forge.pbe=forge.pbe||{};var oids=pki.oids;var encryptedPrivateKeyValidator={name:"EncryptedPrivateKeyInfo",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"EncryptedPrivateKeyInfo.encryptionAlgorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"AlgorithmIdentifier.algorithm",
tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,capture:"encryptionOid"},{name:"AlgorithmIdentifier.parameters",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,captureAsn1:"encryptionParams"}]},{name:"EncryptedPrivateKeyInfo.encryptedData",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OCTETSTRING,constructed:false,capture:"encryptedData"}]};var PBES2AlgorithmsValidator={name:"PBES2Algorithms",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,
value:[{name:"PBES2Algorithms.keyDerivationFunc",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"PBES2Algorithms.keyDerivationFunc.oid",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,capture:"kdfOid"},{name:"PBES2Algorithms.params",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"PBES2Algorithms.params.salt",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OCTETSTRING,constructed:false,capture:"kdfSalt"},{name:"PBES2Algorithms.params.iterationCount",
tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,onstructed:true,capture:"kdfIterationCount"}]}]},{name:"PBES2Algorithms.encryptionScheme",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"PBES2Algorithms.encryptionScheme.oid",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,capture:"encOid"},{name:"PBES2Algorithms.encryptionScheme.iv",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OCTETSTRING,constructed:false,capture:"encIv"}]}]};var pkcs12PbeParamsValidator=
{name:"pkcs-12PbeParams",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"pkcs-12PbeParams.salt",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OCTETSTRING,constructed:false,capture:"salt"},{name:"pkcs-12PbeParams.iterations",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"iterations"}]};pki.encryptPrivateKeyInfo=function(obj,password,options){options=options||{};options.saltSize=options.saltSize||8;options.count=options.count||2048;
options.algorithm=options.algorithm||"aes128";var salt=forge.random.getBytesSync(options.saltSize);var count=options.count;var countBytes=asn1.integerToDer(count);var dkLen;var encryptionAlgorithm;var encryptedData;if(options.algorithm.indexOf("aes")===0||options.algorithm==="des"){var ivLen,encOid,cipherFn;switch(options.algorithm){case "aes128":dkLen=16;ivLen=16;encOid=oids["aes128-CBC"];cipherFn=forge.aes.createEncryptionCipher;break;case "aes192":dkLen=24;ivLen=16;encOid=oids["aes192-CBC"];cipherFn=
forge.aes.createEncryptionCipher;break;case "aes256":dkLen=32;ivLen=16;encOid=oids["aes256-CBC"];cipherFn=forge.aes.createEncryptionCipher;break;case "des":dkLen=8;ivLen=8;encOid=oids["desCBC"];cipherFn=forge.des.createEncryptionCipher;break;default:var error=new Error("Cannot encrypt private key. Unknown encryption algorithm.");error.algorithm=options.algorithm;throw error;}var dk=forge.pkcs5.pbkdf2(password,salt,count,dkLen);var iv=forge.random.getBytesSync(ivLen);var cipher=cipherFn(dk);cipher.start(iv);
cipher.update(asn1.toDer(obj));cipher.finish();encryptedData=cipher.output.getBytes();encryptionAlgorithm=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(oids["pkcs5PBES2"]).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(oids["pkcs5PBKDF2"]).getBytes()),asn1.create(asn1.Class.UNIVERSAL,
asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,salt),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,countBytes.getBytes())])]),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(encOid).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,iv)])])])}else if(options.algorithm==="3des"){dkLen=24;var saltBytes=new forge.util.ByteBuffer(salt);var dk=pki.pbe.generatePkcs12Key(password,
saltBytes,1,count,dkLen);var iv=pki.pbe.generatePkcs12Key(password,saltBytes,2,count,dkLen);var cipher=forge.des.createEncryptionCipher(dk);cipher.start(iv);cipher.update(asn1.toDer(obj));cipher.finish();encryptedData=cipher.output.getBytes();encryptionAlgorithm=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,
asn1.Type.OCTETSTRING,false,salt),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,countBytes.getBytes())])])}else{var error=new Error("Cannot encrypt private key. Unknown encryption algorithm.");error.algorithm=options.algorithm;throw error;}var rval=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[encryptionAlgorithm,asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,encryptedData)]);return rval};pki.decryptPrivateKeyInfo=function(obj,password){var rval=null;var capture=
{};var errors=[];if(!asn1.validate(obj,encryptedPrivateKeyValidator,capture,errors)){var error=new Error("Cannot read encrypted private key. "+"ASN.1 object is not a supported EncryptedPrivateKeyInfo.");error.errors=errors;throw error;}var oid=asn1.derToOid(capture.encryptionOid);var cipher=pki.pbe.getCipher(oid,capture.encryptionParams,password);var encrypted=forge.util.createBuffer(capture.encryptedData);cipher.update(encrypted);if(cipher.finish())rval=asn1.fromDer(cipher.output);return rval};pki.encryptedPrivateKeyToPem=
function(epki,maxline){var msg={type:"ENCRYPTED PRIVATE KEY",body:asn1.toDer(epki).getBytes()};return forge.pem.encode(msg,{maxline:maxline})};pki.encryptedPrivateKeyFromPem=function(pem){var msg=forge.pem.decode(pem)[0];if(msg.type!=="ENCRYPTED PRIVATE KEY"){var error=new Error("Could not convert encrypted private key from PEM; "+'PEM header type is "ENCRYPTED PRIVATE KEY".');error.headerType=msg.type;throw error;}if(msg.procType&&msg.procType.type==="ENCRYPTED")throw new Error("Could not convert encrypted private key from PEM; "+
"PEM is encrypted.");return asn1.fromDer(msg.body)};pki.encryptRsaPrivateKey=function(rsaKey,password,options){options=options||{};if(!options.legacy){var rval=pki.wrapRsaPrivateKey(pki.privateKeyToAsn1(rsaKey));rval=pki.encryptPrivateKeyInfo(rval,password,options);return pki.encryptedPrivateKeyToPem(rval)}var algorithm;var iv;var dkLen;var cipherFn;switch(options.algorithm){case "aes128":algorithm="AES-128-CBC";dkLen=16;iv=forge.random.getBytesSync(16);cipherFn=forge.aes.createEncryptionCipher;break;
case "aes192":algorithm="AES-192-CBC";dkLen=24;iv=forge.random.getBytesSync(16);cipherFn=forge.aes.createEncryptionCipher;break;case "aes256":algorithm="AES-256-CBC";dkLen=32;iv=forge.random.getBytesSync(16);cipherFn=forge.aes.createEncryptionCipher;break;case "3des":algorithm="DES-EDE3-CBC";dkLen=24;iv=forge.random.getBytesSync(8);cipherFn=forge.des.createEncryptionCipher;break;case "des":algorithm="DES-CBC";dkLen=8;iv=forge.random.getBytesSync(8);cipherFn=forge.des.createEncryptionCipher;break;
default:var error=new Error("Could not encrypt RSA private key; unsupported "+'encryption algorithm "'+options.algorithm+'".');error.algorithm=options.algorithm;throw error;}var dk=forge.pbe.opensslDeriveBytes(password,iv.substr(0,8),dkLen);var cipher=cipherFn(dk);cipher.start(iv);cipher.update(asn1.toDer(pki.privateKeyToAsn1(rsaKey)));cipher.finish();var msg={type:"RSA PRIVATE KEY",procType:{version:"4",type:"ENCRYPTED"},dekInfo:{algorithm:algorithm,parameters:forge.util.bytesToHex(iv).toUpperCase()},
body:cipher.output.getBytes()};return forge.pem.encode(msg)};pki.decryptRsaPrivateKey=function(pem,password){var rval=null;var msg=forge.pem.decode(pem)[0];if(msg.type!=="ENCRYPTED PRIVATE KEY"&&msg.type!=="PRIVATE KEY"&&msg.type!=="RSA PRIVATE KEY"){var error=new Error("Could not convert private key from PEM; PEM header type "+'is not "ENCRYPTED PRIVATE KEY", "PRIVATE KEY", or "RSA PRIVATE KEY".');error.headerType=error;throw error;}if(msg.procType&&msg.procType.type==="ENCRYPTED"){var dkLen;var cipherFn;
switch(msg.dekInfo.algorithm){case "DES-CBC":dkLen=8;cipherFn=forge.des.createDecryptionCipher;break;case "DES-EDE3-CBC":dkLen=24;cipherFn=forge.des.createDecryptionCipher;break;case "AES-128-CBC":dkLen=16;cipherFn=forge.aes.createDecryptionCipher;break;case "AES-192-CBC":dkLen=24;cipherFn=forge.aes.createDecryptionCipher;break;case "AES-256-CBC":dkLen=32;cipherFn=forge.aes.createDecryptionCipher;break;case "RC2-40-CBC":dkLen=5;cipherFn=function(key){return forge.rc2.createDecryptionCipher(key,40)};
break;case "RC2-64-CBC":dkLen=8;cipherFn=function(key){return forge.rc2.createDecryptionCipher(key,64)};break;case "RC2-128-CBC":dkLen=16;cipherFn=function(key){return forge.rc2.createDecryptionCipher(key,128)};break;default:var error=new Error("Could not decrypt private key; unsupported "+'encryption algorithm "'+msg.dekInfo.algorithm+'".');error.algorithm=msg.dekInfo.algorithm;throw error;}var iv=forge.util.hexToBytes(msg.dekInfo.parameters);var dk=forge.pbe.opensslDeriveBytes(password,iv.substr(0,
8),dkLen);var cipher=cipherFn(dk);cipher.start(iv);cipher.update(forge.util.createBuffer(msg.body));if(cipher.finish())rval=cipher.output.getBytes();else return rval}else rval=msg.body;if(msg.type==="ENCRYPTED PRIVATE KEY")rval=pki.decryptPrivateKeyInfo(asn1.fromDer(rval),password);else rval=asn1.fromDer(rval);if(rval!==null)rval=pki.privateKeyFromAsn1(rval);return rval};pki.pbe.generatePkcs12Key=function(password,salt,id,iter,n,md){var j,l;if(typeof md==="undefined"||md===null)md=forge.md.sha1.create();
var u=md.digestLength;var v=md.blockLength;var result=new forge.util.ByteBuffer;var passBuf=new forge.util.ByteBuffer;if(password!==null&&password!==undefined){for(l=0;l<password.length;l++)passBuf.putInt16(password.charCodeAt(l));passBuf.putInt16(0)}var p=passBuf.length();var s=salt.length();var D=new forge.util.ByteBuffer;D.fillWithByte(id,v);var Slen=v*Math.ceil(s/v);var S=new forge.util.ByteBuffer;for(l=0;l<Slen;l++)S.putByte(salt.at(l%s));var Plen=v*Math.ceil(p/v);var P=new forge.util.ByteBuffer;
for(l=0;l<Plen;l++)P.putByte(passBuf.at(l%p));var I=S;I.putBuffer(P);var c=Math.ceil(n/u);for(var i=1;i<=c;i++){var buf=new forge.util.ByteBuffer;buf.putBytes(D.bytes());buf.putBytes(I.bytes());for(var round=0;round<iter;round++){md.start();md.update(buf.getBytes());buf=md.digest()}var B=new forge.util.ByteBuffer;for(l=0;l<v;l++)B.putByte(buf.at(l%u));var k=Math.ceil(s/v)+Math.ceil(p/v);var Inew=new forge.util.ByteBuffer;for(j=0;j<k;j++){var chunk=new forge.util.ByteBuffer(I.getBytes(v));var x=511;
for(l=B.length()-1;l>=0;l--){x=x>>8;x+=B.at(l)+chunk.at(l);chunk.setAt(l,x&255)}Inew.putBuffer(chunk)}I=Inew;result.putBuffer(buf)}result.truncate(result.length()-n);return result};pki.pbe.getCipher=function(oid,params,password){switch(oid){case pki.oids["pkcs5PBES2"]:return pki.pbe.getCipherForPBES2(oid,params,password);case pki.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]:case pki.oids["pbewithSHAAnd40BitRC2-CBC"]:return pki.pbe.getCipherForPKCS12PBE(oid,params,password);default:var error=new Error("Cannot read encrypted PBE data block. Unsupported OID.");
error.oid=oid;error.supportedOids=["pkcs5PBES2","pbeWithSHAAnd3-KeyTripleDES-CBC","pbewithSHAAnd40BitRC2-CBC"];throw error;}};pki.pbe.getCipherForPBES2=function(oid,params,password){var capture={};var errors=[];if(!asn1.validate(params,PBES2AlgorithmsValidator,capture,errors)){var error=new Error("Cannot read password-based-encryption algorithm "+"parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");error.errors=errors;throw error;}oid=asn1.derToOid(capture.kdfOid);if(oid!==pki.oids["pkcs5PBKDF2"]){var error=
new Error("Cannot read encrypted private key. "+"Unsupported key derivation function OID.");error.oid=oid;error.supportedOids=["pkcs5PBKDF2"];throw error;}oid=asn1.derToOid(capture.encOid);if(oid!==pki.oids["aes128-CBC"]&&oid!==pki.oids["aes192-CBC"]&&oid!==pki.oids["aes256-CBC"]&&oid!==pki.oids["des-EDE3-CBC"]&&oid!==pki.oids["desCBC"]){var error=new Error("Cannot read encrypted private key. "+"Unsupported encryption scheme OID.");error.oid=oid;error.supportedOids=["aes128-CBC","aes192-CBC","aes256-CBC",
"des-EDE3-CBC","desCBC"];throw error;}var salt=capture.kdfSalt;var count=forge.util.createBuffer(capture.kdfIterationCount);count=count.getInt(count.length()<<3);var dkLen;var cipherFn;switch(pki.oids[oid]){case "aes128-CBC":dkLen=16;cipherFn=forge.aes.createDecryptionCipher;break;case "aes192-CBC":dkLen=24;cipherFn=forge.aes.createDecryptionCipher;break;case "aes256-CBC":dkLen=32;cipherFn=forge.aes.createDecryptionCipher;break;case "des-EDE3-CBC":dkLen=24;cipherFn=forge.des.createDecryptionCipher;
break;case "desCBC":dkLen=8;cipherFn=forge.des.createDecryptionCipher;break}var dk=forge.pkcs5.pbkdf2(password,salt,count,dkLen);var iv=capture.encIv;var cipher=cipherFn(dk);cipher.start(iv);return cipher};pki.pbe.getCipherForPKCS12PBE=function(oid,params,password){var capture={};var errors=[];if(!asn1.validate(params,pkcs12PbeParamsValidator,capture,errors)){var error=new Error("Cannot read password-based-encryption algorithm "+"parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.");
error.errors=errors;throw error;}var salt=forge.util.createBuffer(capture.salt);var count=forge.util.createBuffer(capture.iterations);count=count.getInt(count.length()<<3);var dkLen,dIvLen,cipherFn;switch(oid){case pki.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]:dkLen=24;dIvLen=8;cipherFn=forge.des.startDecrypting;break;case pki.oids["pbewithSHAAnd40BitRC2-CBC"]:dkLen=5;dIvLen=8;cipherFn=function(key,iv){var cipher=forge.rc2.createDecryptionCipher(key,40);cipher.start(iv,null);return cipher};break;default:var error=
new Error("Cannot read PKCS #12 PBE data block. Unsupported OID.");error.oid=oid;throw error;}var key=pki.pbe.generatePkcs12Key(password,salt,1,count,dkLen);var iv=pki.pbe.generatePkcs12Key(password,salt,2,count,dIvLen);return cipherFn(key,iv)};pki.pbe.opensslDeriveBytes=function(password,salt,dkLen,md){if(typeof md==="undefined"||md===null)md=forge.md.md5.create();if(salt===null)salt="";var digests=[hash(md,password+salt)];for(var length=16,i=1;length<dkLen;++i,length+=16)digests.push(hash(md,digests[i-
1]+password+salt));return digests.join("").substr(0,dkLen)};function hash(md,bytes){return md.start().update(bytes).digest().getBytes()}}var name="pbe";if(typeof define!=="function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,module)}}else{if(typeof forge==="undefined")forge={};return initModule(forge)}var deps;var defineFunc=function(require,module){module.exports=function(forge){var mods=deps.map(function(dep){return require(dep)}).concat(initModule);
forge=forge||{};forge.defined=forge.defined||{};if(forge.defined[name])return forge[name];forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);return forge[name]}};var tmpDefine=define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):ids.slice(2);if(nodeJS){delete define;return tmpDefine.apply(null,Array.prototype.slice.call(arguments,0))}define=tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,0))};define(["require","module","./aes",
"./asn1","./des","./md","./oids","./pem","./pbkdf2","./random","./rc2","./rsa","./util"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,0))})})();(function(){function initModule(forge){var pem=forge.pem=forge.pem||{};pem.encode=function(msg,options){options=options||{};var rval="-----BEGIN "+msg.type+"-----\r\n";var header;if(msg.procType){header={name:"Proc-Type",values:[String(msg.procType.version),msg.procType.type]};rval+=foldHeader(header)}if(msg.contentDomain){header={name:"Content-Domain",values:[msg.contentDomain]};rval+=foldHeader(header)}if(msg.dekInfo){header={name:"DEK-Info",values:[msg.dekInfo.algorithm]};if(msg.dekInfo.parameters)header.values.push(msg.dekInfo.parameters);
rval+=foldHeader(header)}if(msg.headers)for(var i=0;i<msg.headers.length;++i)rval+=foldHeader(msg.headers[i]);if(msg.procType)rval+="\r\n";rval+=forge.util.encode64(msg.body,options.maxline||64)+"\r\n";rval+="-----END "+msg.type+"-----\r\n";return rval};pem.decode=function(str){var rval=[];var rMessage=/\s*-----BEGIN ([A-Z0-9- ]+)-----\r?\n?([\x21-\x7e\s]+?(?:\r?\n\r?\n))?([:A-Za-z0-9+\/=\s]+?)-----END \1-----/g;var rHeader=/([\x21-\x7e]+):\s*([\x21-\x7e\s^:]+)/;var rCRLF=/\r?\n/;var match;while(true){match=
rMessage.exec(str);if(!match)break;var msg={type:match[1],procType:null,contentDomain:null,dekInfo:null,headers:[],body:forge.util.decode64(match[3])};rval.push(msg);if(!match[2])continue;var lines=match[2].split(rCRLF);var li=0;while(match&&li<lines.length){var line=lines[li].replace(/\s+$/,"");for(var nl=li+1;nl<lines.length;++nl){var next=lines[nl];if(!/\s/.test(next[0]))break;line+=next;li=nl}match=line.match(rHeader);if(match){var header={name:match[1],values:[]};var values=match[2].split(",");
for(var vi=0;vi<values.length;++vi)header.values.push(ltrim(values[vi]));if(!msg.procType){if(header.name!=="Proc-Type")throw new Error("Invalid PEM formatted message. The first "+'encapsulated header must be "Proc-Type".');else if(header.values.length!==2)throw new Error('Invalid PEM formatted message. The "Proc-Type" '+"header must have two subfields.");msg.procType={version:values[0],type:values[1]}}else if(!msg.contentDomain&&header.name==="Content-Domain")msg.contentDomain=values[0]||"";else if(!msg.dekInfo&&
header.name==="DEK-Info"){if(header.values.length===0)throw new Error('Invalid PEM formatted message. The "DEK-Info" '+"header must have at least one subfield.");msg.dekInfo={algorithm:values[0],parameters:values[1]||null}}else msg.headers.push(header)}++li}if(msg.procType==="ENCRYPTED"&&!msg.dekInfo)throw new Error('Invalid PEM formatted message. The "DEK-Info" '+'header must be present if "Proc-Type" is "ENCRYPTED".');}if(rval.length===0)throw new Error("Invalid PEM formatted message.");return rval};
function foldHeader(header){var rval=header.name+": ";var values=[];var insertSpace=function(match,$1){return" "+$1};for(var i=0;i<header.values.length;++i)values.push(header.values[i].replace(/^(\S+\r\n)/,insertSpace));rval+=values.join(",")+"\r\n";var length=0;var candidate=-1;for(var i=0;i<rval.length;++i,++length)if(length>65&&candidate!==-1){var insert=rval[candidate];if(insert===","){++candidate;rval=rval.substr(0,candidate)+"\r\n "+rval.substr(candidate)}else rval=rval.substr(0,candidate)+
"\r\n"+insert+rval.substr(candidate+1);length=i-candidate-1;candidate=-1;++i}else if(rval[i]===" "||rval[i]==="\t"||rval[i]===",")candidate=i;return rval}function ltrim(str){return str.replace(/^\s+/,"")}}var name="pem";if(typeof define!=="function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,module)}}else{if(typeof forge==="undefined")forge={};return initModule(forge)}var deps;var defineFunc=function(require,module){module.exports=function(forge){var mods=
deps.map(function(dep){return require(dep)}).concat(initModule);forge=forge||{};forge.defined=forge.defined||{};if(forge.defined[name])return forge[name];forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);return forge[name]}};var tmpDefine=define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):ids.slice(2);if(nodeJS){delete define;return tmpDefine.apply(null,Array.prototype.slice.call(arguments,0))}define=tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,
0))};define(["require","module","./util"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,0))})})();(function(){function initModule(forge){if(typeof BigInteger==="undefined")var BigInteger=forge.jsbn.BigInteger;var asn1=forge.asn1;forge.pki=forge.pki||{};forge.pki.rsa=forge.rsa=forge.rsa||{};var pki=forge.pki;var GCD_30_DELTA=[6,4,2,4,2,4,6,2];var privateKeyValidator={name:"PrivateKeyInfo",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"PrivateKeyInfo.version",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"privateKeyVersion"},
{name:"PrivateKeyInfo.privateKeyAlgorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,capture:"privateKeyOid"}]},{name:"PrivateKeyInfo",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OCTETSTRING,constructed:false,capture:"privateKey"}]};var rsaPrivateKeyValidator={name:"RSAPrivateKey",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"RSAPrivateKey.version",
tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"privateKeyVersion"},{name:"RSAPrivateKey.modulus",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"privateKeyModulus"},{name:"RSAPrivateKey.publicExponent",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"privateKeyPublicExponent"},{name:"RSAPrivateKey.privateExponent",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"privateKeyPrivateExponent"},
{name:"RSAPrivateKey.prime1",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"privateKeyPrime1"},{name:"RSAPrivateKey.prime2",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"privateKeyPrime2"},{name:"RSAPrivateKey.exponent1",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"privateKeyExponent1"},{name:"RSAPrivateKey.exponent2",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"privateKeyExponent2"},
{name:"RSAPrivateKey.coefficient",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"privateKeyCoefficient"}]};var rsaPublicKeyValidator={name:"RSAPublicKey",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"RSAPublicKey.modulus",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"publicKeyModulus"},{name:"RSAPublicKey.exponent",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"publicKeyExponent"}]};
var publicKeyValidator=forge.pki.rsa.publicKeyValidator={name:"SubjectPublicKeyInfo",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,captureAsn1:"subjectPublicKeyInfo",value:[{name:"SubjectPublicKeyInfo.AlgorithmIdentifier",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,capture:"publicKeyOid"}]},{name:"SubjectPublicKeyInfo.subjectPublicKey",
tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.BITSTRING,constructed:false,value:[{name:"SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,optional:true,captureAsn1:"rsaPublicKey"}]}]};var emsaPkcs1v15encode=function(md){var oid;if(md.algorithm in pki.oids)oid=pki.oids[md.algorithm];else{var error=new Error("Unknown message digest algorithm.");error.algorithm=md.algorithm;throw error;}var oidBytes=asn1.oidToDer(oid).getBytes();
var digestInfo=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[]);var digestAlgorithm=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[]);digestAlgorithm.value.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,oidBytes));digestAlgorithm.value.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.NULL,false,""));var digest=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,md.digest().getBytes());digestInfo.value.push(digestAlgorithm);digestInfo.value.push(digest);return asn1.toDer(digestInfo).getBytes()};
var _modPow=function(x,key,pub){if(pub)return x.modPow(key.e,key.n);if(!key.p||!key.q)return x.modPow(key.d,key.n);if(!key.dP)key.dP=key.d.mod(key.p.subtract(BigInteger.ONE));if(!key.dQ)key.dQ=key.d.mod(key.q.subtract(BigInteger.ONE));if(!key.qInv)key.qInv=key.q.modInverse(key.p);var r;do r=new BigInteger(forge.util.bytesToHex(forge.random.getBytes(key.n.bitLength()/8)),16);while(r.compareTo(key.n)>=0||!r.gcd(key.n).equals(BigInteger.ONE));x=x.multiply(r.modPow(key.e,key.n)).mod(key.n);var xp=x.mod(key.p).modPow(key.dP,
key.p);var xq=x.mod(key.q).modPow(key.dQ,key.q);while(xp.compareTo(xq)<0)xp=xp.add(key.p);var y=xp.subtract(xq).multiply(key.qInv).mod(key.p).multiply(key.q).add(xq);y=y.multiply(r.modInverse(key.n)).mod(key.n);return y};pki.rsa.encrypt=function(m,key,bt){var pub=bt;var eb;var k=Math.ceil(key.n.bitLength()/8);if(bt!==false&&bt!==true){pub=bt===2;eb=_encodePkcs1_v1_5(m,key,bt)}else{eb=forge.util.createBuffer();eb.putBytes(m)}var x=new BigInteger(eb.toHex(),16);var y=_modPow(x,key,pub);var yhex=y.toString(16);
var ed=forge.util.createBuffer();var zeros=k-Math.ceil(yhex.length/2);while(zeros>0){ed.putByte(0);--zeros}ed.putBytes(forge.util.hexToBytes(yhex));return ed.getBytes()};pki.rsa.decrypt=function(ed,key,pub,ml){var k=Math.ceil(key.n.bitLength()/8);if(ed.length!==k){var error=new Error("Encrypted message length is invalid.");error.length=ed.length;error.expected=k;throw error;}var y=new BigInteger(forge.util.createBuffer(ed).toHex(),16);if(y.compareTo(key.n)>=0)throw new Error("Encrypted message is invalid.");
var x=_modPow(y,key,pub);var xhex=x.toString(16);var eb=forge.util.createBuffer();var zeros=k-Math.ceil(xhex.length/2);while(zeros>0){eb.putByte(0);--zeros}eb.putBytes(forge.util.hexToBytes(xhex));if(ml!==false)return _decodePkcs1_v1_5(eb.getBytes(),key,pub);return eb.getBytes()};pki.rsa.createKeyPairGenerationState=function(bits,e,options){if(typeof bits==="string")bits=parseInt(bits,10);bits=bits||2048;options=options||{};var prng=options.prng||forge.random;var rng={nextBytes:function(x){var b=
prng.getBytesSync(x.length);for(var i=0;i<x.length;++i)x[i]=b.charCodeAt(i)}};var algorithm=options.algorithm||"PRIMEINC";var rval;if(algorithm==="PRIMEINC"){rval={algorithm:algorithm,state:0,bits:bits,rng:rng,eInt:e||65537,e:new BigInteger(null),p:null,q:null,qBits:bits>>1,pBits:bits-(bits>>1),pqState:0,num:null,keys:null};rval.e.fromInt(rval.eInt)}else throw new Error("Invalid key generation algorithm: "+algorithm);return rval};pki.rsa.stepKeyPairGenerationState=function(state,n){if(!("algorithm"in
state))state.algorithm="PRIMEINC";var THIRTY=new BigInteger(null);THIRTY.fromInt(30);var deltaIdx=0;var op_or=function(x,y){return x|y};var t1=+new Date;var t2;var total=0;while(state.keys===null&&(n<=0||total<n)){if(state.state===0){var bits=state.p===null?state.pBits:state.qBits;var bits1=bits-1;if(state.pqState===0){state.num=new BigInteger(bits,state.rng);if(!state.num.testBit(bits1))state.num.bitwiseTo(BigInteger.ONE.shiftLeft(bits1),op_or,state.num);state.num.dAddOffset(31-state.num.mod(THIRTY).byteValue(),
0);deltaIdx=0;++state.pqState}else if(state.pqState===1)if(state.num.bitLength()>bits)state.pqState=0;else if(state.num.isProbablePrime(_getMillerRabinTests(state.num.bitLength())))++state.pqState;else state.num.dAddOffset(GCD_30_DELTA[deltaIdx++%8],0);else if(state.pqState===2)state.pqState=state.num.subtract(BigInteger.ONE).gcd(state.e).compareTo(BigInteger.ONE)===0?3:0;else if(state.pqState===3){state.pqState=0;if(state.p===null)state.p=state.num;else state.q=state.num;if(state.p!==null&&state.q!==
null)++state.state;state.num=null}}else if(state.state===1){if(state.p.compareTo(state.q)<0){state.num=state.p;state.p=state.q;state.q=state.num}++state.state}else if(state.state===2){state.p1=state.p.subtract(BigInteger.ONE);state.q1=state.q.subtract(BigInteger.ONE);state.phi=state.p1.multiply(state.q1);++state.state}else if(state.state===3)if(state.phi.gcd(state.e).compareTo(BigInteger.ONE)===0)++state.state;else{state.p=null;state.q=null;state.state=0}else if(state.state===4){state.n=state.p.multiply(state.q);
if(state.n.bitLength()===state.bits)++state.state;else{state.q=null;state.state=0}}else if(state.state===5){var d=state.e.modInverse(state.phi);state.keys={privateKey:pki.rsa.setPrivateKey(state.n,state.e,d,state.p,state.q,d.mod(state.p1),d.mod(state.q1),state.q.modInverse(state.p)),publicKey:pki.rsa.setPublicKey(state.n,state.e)}}t2=+new Date;total+=t2-t1;t1=t2}return state.keys!==null};pki.rsa.generateKeyPair=function(bits,e,options,callback){if(arguments.length===1)if(typeof bits==="object"){options=
bits;bits=undefined}else{if(typeof bits==="function"){callback=bits;bits=undefined}}else if(arguments.length===2)if(typeof bits==="number")if(typeof e==="function"){callback=e;e=undefined}else{if(typeof e!=="number"){options=e;e=undefined}}else{options=bits;callback=e;bits=undefined;e=undefined}else if(arguments.length===3)if(typeof e==="number"){if(typeof options==="function"){callback=options;options=undefined}}else{callback=options;options=e;e=undefined}options=options||{};if(bits===undefined)bits=
options.bits||2048;if(e===undefined)e=options.e||65537;var state=pki.rsa.createKeyPairGenerationState(bits,e,options);if(!callback){pki.rsa.stepKeyPairGenerationState(state,0);return state.keys}_generateKeyPair(state,options,callback)};pki.setRsaPublicKey=pki.rsa.setPublicKey=function(n,e,obj){var key={n:n,e:e,obj:obj,bit:0,rsa:true};var bitTmp=n.bitLength();if(bitTmp<=0)key.bit=0;if(bitTmp<=1024)key.bit=1024;else if(bitTmp<=2048)key.bit=2048;else if(bitTmp<=3072)key.bit=3072;else if(bitTmp<=4096)key.bit=
4096;else key.bit=bitTmp;key.encrypt=function(data,scheme,schemeOptions){if(typeof scheme==="string")scheme=scheme.toUpperCase();else if(scheme===undefined)scheme="RSAES-PKCS1-V1_5";if(scheme==="RSAES-PKCS1-V1_5")scheme={encode:function(m,key,pub){return _encodePkcs1_v1_5(m,key,2).getBytes()}};else if(scheme==="RSA-OAEP"||scheme==="RSAES-OAEP")scheme={encode:function(m,key){return forge.pkcs1.encode_rsa_oaep(key,m,schemeOptions)}};else if(["RAW","NONE","NULL",null].indexOf(scheme)!==-1)scheme={encode:function(e){return e}};
else if(typeof scheme==="string")throw new Error('Unsupported encryption scheme: "'+scheme+'".');var e=scheme.encode(data,key,true);return pki.rsa.encrypt(e,key,true)};key.verify=function(digest,signature,scheme){if(typeof scheme==="string")scheme=scheme.toUpperCase();else if(scheme===undefined)scheme="RSASSA-PKCS1-V1_5";if(scheme==="RSASSA-PKCS1-V1_5")scheme={verify:function(digest,d){d=_decodePkcs1_v1_5(d,key,true);var obj=asn1.fromDer(d);return digest===obj.value[1].value}};else if(scheme==="NONE"||
scheme==="NULL"||scheme===null)scheme={verify:function(digest,d){d=_decodePkcs1_v1_5(d,key,true);return digest===d}};var d=pki.rsa.decrypt(signature,key,true,false);return scheme.verify(digest,d,key.n.bitLength())};return key};pki.setRsaPrivateKey=pki.rsa.setPrivateKey=function(n,e,d,p,q,dP,dQ,qInv){var key={rsa:true,n:n,e:e,d:d,p:p,q:q,dP:dP,dQ:dQ,qInv:qInv};key.decrypt=function(data,scheme,schemeOptions){if(typeof scheme==="string")scheme=scheme.toUpperCase();else if(scheme===undefined)scheme="RSAES-PKCS1-V1_5";
var d=pki.rsa.decrypt(data,key,false,false);if(scheme==="RSAES-PKCS1-V1_5")scheme={decode:_decodePkcs1_v1_5};else if(scheme==="RSA-OAEP"||scheme==="RSAES-OAEP")scheme={decode:function(d,key){return forge.pkcs1.decode_rsa_oaep(key,d,schemeOptions)}};else if(["RAW","NONE","NULL",null].indexOf(scheme)!==-1)scheme={decode:function(d){return d}};else throw new Error('Unsupported encryption scheme: "'+scheme+'".');return scheme.decode(d,key,false)};key.sign=function(md,scheme){var bt=false;if(typeof scheme===
"string")scheme=scheme.toUpperCase();if(scheme===undefined||scheme==="RSASSA-PKCS1-V1_5"){scheme={encode:emsaPkcs1v15encode};bt=1}else if(scheme==="NONE"||scheme==="NULL"||scheme===null){scheme={encode:function(){return md}};bt=1}var d=scheme.encode(md,key.n.bitLength());return pki.rsa.encrypt(d,key,bt)};return key};pki.wrapRsaPrivateKey=function(rsaKey,randomNum){if(!randomNum)return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,
asn1.integerToDer(0).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(forge.pki.oids.rsaEncryption).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.NULL,false,"")]),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,asn1.toDer(rsaKey).getBytes())]);else return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,asn1.integerToDer(0).getBytes()),
asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(forge.pki.oids.rsaEncryption).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.NULL,false,"")]),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,asn1.toDer(rsaKey).getBytes()),asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(forge.pki.oids.randomNum).getBytes()),
asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SET,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.BITSTRING,false,String.fromCharCode(0)+randomNum)])])])])};pki.rsa.privateKeyFromAsn1=function(obj,randomNum){var capture={};var errors=[];capture={};errors=[];if(!asn1.validate(obj,rsaPrivateKeyValidator,capture,errors)){var err=new Error("Cannot read private key. "+"ASN.1 object does not contain an RSAPrivateKey.");err.errors=errors;throw err;}var n,e,d,p,q,dP,dQ,qInv;n=forge.util.createBuffer(capture.privateKeyModulus).toHex();
e=forge.util.createBuffer(capture.privateKeyPublicExponent).toHex();d=forge.util.createBuffer(capture.privateKeyPrivateExponent).toHex();p=forge.util.createBuffer(capture.privateKeyPrime1).toHex();q=forge.util.createBuffer(capture.privateKeyPrime2).toHex();dP=forge.util.createBuffer(capture.privateKeyExponent1).toHex();dQ=forge.util.createBuffer(capture.privateKeyExponent2).toHex();qInv=forge.util.createBuffer(capture.privateKeyCoefficient).toHex();var key=pki.setRsaPrivateKey(new BigInteger(n,16),
new BigInteger(e,16),new BigInteger(d,16),new BigInteger(p,16),new BigInteger(q,16),new BigInteger(dP,16),new BigInteger(dQ,16),new BigInteger(qInv,16));return{key:key,randomNum:randomNum}};pki.privateKeyToAsn1=pki.privateKeyToRSAPrivateKey=function(key){return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,asn1.integerToDer(0).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,_bnToBytes(key.n)),asn1.create(asn1.Class.UNIVERSAL,
asn1.Type.INTEGER,false,_bnToBytes(key.e)),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,_bnToBytes(key.d)),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,_bnToBytes(key.p)),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,_bnToBytes(key.q)),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,_bnToBytes(key.dP)),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,_bnToBytes(key.dQ)),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,_bnToBytes(key.qInv))])};
pki.rsa.publicKeyFromAsn1=function(obj){var capture={};var errors=[];if(!asn1.validate(obj,rsaPublicKeyValidator,capture,errors)){var error=new Error("Cannot read public key. "+"ASN.1 object does not contain an RSAPublicKey.");error.errors=errors;throw error;}var n=forge.util.createBuffer(capture.publicKeyModulus).toHex();var e=forge.util.createBuffer(capture.publicKeyExponent).toHex();return forge.pki.setRsaPublicKey(new BigInteger(n,16),new BigInteger(e,16),forge.util.bytesToHex(asn1.toDer(obj).getBytes()))};
pki.rsa.publicKeyToAsn1=pki.rsa.publicKeyToSubjectPublicKeyInfo=function(key){return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(pki.oids.rsaEncryption).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.NULL,false,"")]),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.BITSTRING,false,[pki.publicKeyToRSAPublicKey(key)])])};pki.publicKeyToRSAPublicKey=function(key){return asn1.create(asn1.Class.UNIVERSAL,
asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,_bnToBytes(key.n)),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,_bnToBytes(key.e))])};function _encodePkcs1_v1_5(m,key,bt){var eb=forge.util.createBuffer();var k=Math.ceil(key.n.bitLength()/8);if(m.length>k-11){var error=new Error("Message is too long for PKCS#1 v1.5 padding.");error.length=m.length;error.max=k-11;throw error;}eb.putByte(0);eb.putByte(bt);var padNum=k-3-m.length;var padByte;if(bt===0||bt===
1){padByte=bt===0?0:255;for(var i=0;i<padNum;++i)eb.putByte(padByte)}else while(padNum>0){var numZeros=0;var padBytes=forge.random.getBytes(padNum);for(var i=0;i<padNum;++i){padByte=padBytes.charCodeAt(i);if(padByte===0)++numZeros;else eb.putByte(padByte)}padNum=numZeros}eb.putByte(0);eb.putBytes(m);return eb}function _decodePkcs1_v1_5(em,key,pub,ml){var k=Math.ceil(key.n.bitLength()/8);var eb=forge.util.createBuffer(em);var first=eb.getByte();var bt=eb.getByte();if(first!==0||pub&&bt!==0&&bt!==1||
!pub&&bt!=2||pub&&bt===0&&typeof ml==="undefined")throw new Error("Encryption block is invalid.");var padNum=0;if(bt===0){padNum=k-3-ml;for(var i=0;i<padNum;++i)if(eb.getByte()!==0)throw new Error("Encryption block is invalid.");}else if(bt===1){padNum=0;while(eb.length()>1){if(eb.getByte()!==255){--eb.read;break}++padNum}}else if(bt===2){padNum=0;while(eb.length()>1){if(eb.getByte()===0){--eb.read;break}++padNum}}var zero=eb.getByte();if(zero!==0||padNum!==k-3-eb.length())throw new Error("Encryption block is invalid.");
return eb.getBytes()}function _generateKeyPair(state,options,callback){if(typeof options==="function"){callback=options;options={}}options=options||{};var opts={algorithm:{name:options.algorithm||"PRIMEINC",options:{workers:options.workers||2,workLoad:options.workLoad||100,workerScript:options.workerScript}}};if("prng"in options)opts.prng=options.prng;generate();function generate(){getPrime(state.pBits,function(err,num){if(err)return callback(err);state.p=num;if(state.q!==null)return finish(err,state.q);
getPrime(state.qBits,finish)})}function getPrime(bits,callback){forge.prime.generateProbablePrime(bits,opts,callback)}function finish(err,num){if(err)return callback(err);state.q=num;if(state.p.compareTo(state.q)<0){var tmp=state.p;state.p=state.q;state.q=tmp}if(state.p.subtract(BigInteger.ONE).gcd(state.e).compareTo(BigInteger.ONE)!==0){state.p=null;generate();return}if(state.q.subtract(BigInteger.ONE).gcd(state.e).compareTo(BigInteger.ONE)!==0){state.q=null;getPrime(state.qBits,finish);return}state.p1=
state.p.subtract(BigInteger.ONE);state.q1=state.q.subtract(BigInteger.ONE);state.phi=state.p1.multiply(state.q1);if(state.phi.gcd(state.e).compareTo(BigInteger.ONE)!==0){state.p=state.q=null;generate();return}state.n=state.p.multiply(state.q);if(state.n.bitLength()!==state.bits){state.q=null;getPrime(state.qBits,finish);return}var d=state.e.modInverse(state.phi);state.keys={privateKey:pki.rsa.setPrivateKey(state.n,state.e,d,state.p,state.q,d.mod(state.p1),d.mod(state.q1),state.q.modInverse(state.p)),
publicKey:pki.rsa.setPublicKey(state.n,state.e)};callback(null,state.keys)}}function _bnToBytes(b){var hex=b.toString(16);if(hex[0]>="8")hex="00"+hex;return forge.util.hexToBytes(hex)}function _getMillerRabinTests(bits){if(bits<=100)return 27;if(bits<=150)return 18;if(bits<=200)return 15;if(bits<=250)return 12;if(bits<=300)return 9;if(bits<=350)return 8;if(bits<=400)return 7;if(bits<=500)return 6;if(bits<=600)return 5;if(bits<=800)return 4;if(bits<=1250)return 3;return 2}}var name="rsa";if(typeof define!==
"function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,module)}}else{if(typeof forge==="undefined")forge={};return initModule(forge)}var deps;var defineFunc=function(require,module){module.exports=function(forge){var mods=deps.map(function(dep){return require(dep)}).concat(initModule);forge=forge||{};forge.defined=forge.defined||{};if(forge.defined[name])return forge[name];forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);
return forge[name]}};var tmpDefine=define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):ids.slice(2);if(nodeJS){delete define;return tmpDefine.apply(null,Array.prototype.slice.call(arguments,0))}define=tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,0))};define(["require","module","./asn1","./jsbn","./oids","./pkcs1","./prime","./random","./util"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,0))})})();(function(){function initModule(forge){if(typeof BigInteger==="undefined")var BigInteger=forge.jsbn.BigInteger;var asn1=forge.asn1;forge.pki.oids["1.2.410.200004.1.1"]="kcdsa";forge.pki.oids["kcdsa"]="1.2.410.200004.1.1";forge.pki.oids["1.2.410.200004.1.2"]="has160";forge.pki.oids["has160"]="1.2.410.200004.1.2";forge.pki.oids["1.2.410.200004.1.8"]="kcdsaWithHAS160";forge.pki.oids["kcdsaWithHAS160"]="1.2.410.200004.1.8";forge.pki.oids["1.2.410.200004.1.9"]="kcdsaWithSHA1";forge.pki.oids["kcdsaWithSHA1"]=
"1.2.410.200004.1.9";forge.pki.oids["1.2.410.200004.1.21"]="kcdsa1";forge.pki.oids["kcdsa1"]="1.2.410.200004.1.21";forge.pki.oids["1.2.410.200004.1.22"]="kcdsa1WithHAS160";forge.pki.oids["kcdsa1WithHAS160"]="1.2.410.200004.1.22";forge.pki.oids["1.2.410.200004.1.23"]="kcdsa1WithSHA1";forge.pki.oids["kcdsa1WithSHA1"]="1.2.410.200004.1.23";forge.pki.oids["1.2.410.200004.1.38"]="kcdsa1WithSHA256";forge.pki.oids["kcdsa1WithSHA256"]="1.2.410.200004.1.38";forge.pki=forge.pki||{};forge.pki.kcdsa=forge.kcdsa=
forge.kcdsa||{};var pki=forge.pki;var privateKeyValidator={name:"PrivateKeyInfo",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"PrivateKeyInfo.version",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"privateKeyVersion"},{name:"PrivateKeyInfo.privateKeyAlgorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,
capture:"privateKeyOid"},{name:"AlgorithmIdentifier.parameters",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,captureAsn1:"parameters",optional:true}]},{name:"PrivateKeyInfo",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OCTETSTRING,constructed:false,capture:"privateKey"},{name:"PrivateKeyInfo.attributes",tagClass:asn1.Class.CONTEXT_SPECIFIC,type:0,constructed:true,captureAsn1:"attributes",optional:true}]};var kcdsaParametersValidator={name:"KCDSAParameters",tagClass:asn1.Class.UNIVERSAL,
type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"KCDSAParameters.p",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"p"},{name:"KCDSAParameters.q",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"q"},{name:"KCDSAParameters.g",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"g"},{name:"KCDSAParameters.j",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"j",optional:true},
{name:"KCDSAParameters.validationParams",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,optional:true,value:[{name:"ValidationParams.seed",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OCTETSTRING,constructed:false,capture:"seed"},{name:"ValidationParams.count",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"count"}]}]};var kcdsaPrivateKeyValidator={name:"KCDSAPrivateKey",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,
capture:"x"};var kcdsaPublicKeyValidator={name:"KCDSAPublicKey",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"y"};var publicKeyValidator={name:"SubjectPublicKeyInfo",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,captureAsn1:"subjectPublicKeyInfo",value:[{name:"SubjectPublicKeyInfo.AlgorithmIdentifier",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:asn1.Class.UNIVERSAL,
type:asn1.Type.OID,constructed:false,capture:"publicKeyOid"},{name:"AlgorithmIdentifier.parameters",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,captureAsn1:"parameters",optional:true}]},{name:"SubjectPublicKeyInfo.subjectPublicKey",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.BITSTRING,constructed:false,capture:"publicKey"}]};pki.setKcdsaPublicKey=pki.kcdsa.setPublicKey=function(p,q,g,j,seed,count,y,obj){var key={p:p,q:q,g:g,j:j,seed:seed,count:count,y:y,obj:obj,bit:0,kcdsa:true};
var bitTmp=y.bitLength();if(bitTmp<=0)key.bit=0;else if(bitTmp<=1024)key.bit=1024;else if(bitTmp<=2048)key.bit=2048;else if(bitTmp<=3072)key.bit=3072;else if(bitTmp<=4096)key.bit=4096;else key.bit=bitTmp;key.verify=function(md,content,r,s){var r_big=new forge.jsbn.BigInteger(forge.util.createBuffer(r).toHex(),16);var s_big=new forge.jsbn.BigInteger(forge.util.createBuffer(s).toHex(),16);if(!(r_big.compareTo(BigInteger.ZERO)>0&&s_big.compareTo(BigInteger.ZERO)>0&&key.q.compareTo(s_big)>0))return false;
var l;switch(forge.pki.oids[md]){case forge.pki.oids.md5:case forge.pki.oids.sha1:case forge.pki.oids.sha256:case forge.pki.oids.has160:l=64*8;break;case forge.pki.oids.sha384:case forge.pki.oids.sha512:l=128*8;break;default:throw new Error("unknown message digest algorithm: "+md);}var z=key.y.mod(forge.jsbn.BigInteger.ONE.shiftLeft(l));var z_buffer=forge.util.createBuffer();z_buffer.putBytes(forge.util.hexToBytes(z.toString(16)));var z_bytes=z_buffer.getBytes();var h_md=forge.md[md].create();h_md.start();
h_md.update(z_bytes);h_md.update(content);var h=h_md.digest().getBytes();var h_big=new forge.jsbn.BigInteger(forge.util.createBuffer(h).toHex(),16);var e_big=r_big.xor(h_big).mod(key.q);var tmp1=key.y.modPow(s_big,key.p);var tmp2=key.g.modPow(e_big,key.p);var w=tmp1.multiply(tmp2).mod(key.p);var w_buffer=forge.util.createBuffer();w_buffer.putBytes(forge.util.hexToBytes(w.toString(16)));var w_bytes=w_buffer.getBytes();var w_md=forge.md[md].create();w_md.start();w_md.update(w_bytes);var w_hash=w_md.digest().getBytes();
var w_big=new forge.jsbn.BigInteger(forge.util.createBuffer(w_hash).toHex(),16);return w_big.compareTo(r_big)==0};return key};pki.setKcdsaPrivateKey=pki.kcdsa.setPrivateKey=function(p,q,g,j,seed,count,x){var key={kcdsa:true,p:p,q:q,g:g,j:j,seed:seed,count:count,x:x};key.sign=function(md,content,publicKey){var k;do k=new forge.jsbn.BigInteger(forge.util.bytesToHex(forge.random.getBytes(key.q.bitLength()/8)),16);while(k.compareTo(forge.jsbn.BigInteger.ZERO)<=0||k.compareTo(key.q)>=0);var w=key.g.modPow(k,
key.p);var w_buffer=forge.util.createBuffer();w_buffer.putBytes(forge.util.hexToBytes(w.toString(16)));var w_bytes=w_buffer.getBytes();var r_md=forge.md[md].create();r_md.start().update(w_bytes);var r=r_md.digest().getBytes();var l;switch(forge.pki.oids[md]){case forge.pki.oids.md5:case forge.pki.oids.sha1:case forge.pki.oids.sha256:case forge.pki.oids.has160:l=64*8;break;case forge.pki.oids.sha384:case forge.pki.oids.sha512:l=128*8;break;default:throw new Error("unknown message digest algorithm: "+
md);}var z=publicKey.mod(forge.jsbn.BigInteger.ONE.shiftLeft(l));var z_buffer=forge.util.createBuffer();z_buffer.putBytes(forge.util.hexToBytes(z.toString(16)));var z_bytes=z_buffer.getBytes();var h_md=forge.md[md].create();h_md.start();h_md.update(z_bytes);h_md.update(content);var h=h_md.digest().getBytes();var r_big=new forge.jsbn.BigInteger(forge.util.createBuffer(r).toHex(),16);var h_big=new forge.jsbn.BigInteger(forge.util.createBuffer(h).toHex(),16);var e=r_big.xor(h_big).mod(key.q);var s=key.x.multiply(k.subtract(e)).mod(key.q);
return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.BITSTRING,false,String.fromCharCode(0)+r),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,_bnToBytes(s))])};return key};pki.wrapKcdsaPrivateKey=function(rsaKey,params,randomNum){if(!randomNum)return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,asn1.integerToDer(0).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,
true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(forge.pki.oids.kcdsa1).getBytes()),params]),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,asn1.toDer(rsaKey).getBytes())]);else return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,asn1.integerToDer(0).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(forge.pki.oids.kcdsa1).getBytes()),
params]),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,asn1.toDer(rsaKey).getBytes()),asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(forge.pki.oids.randomNum).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SET,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.BITSTRING,false,String.fromCharCode(0)+randomNum)])])])])};pki.parametersToAsn1=function(key){if(key.j&&
key.seed&&key.count)return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,_bnToBytes(key.p)),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,_bnToBytes(key.q)),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,_bnToBytes(key.g)),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,_bnToBytes(key.j)),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,
false,_bnToBytes(key.seed)),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,forge.util.hexToBytes(key.count))])]);else return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,_bnToBytes(key.p)),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,_bnToBytes(key.q)),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,_bnToBytes(key.g))])};pki.kcdsa.privateKeyFromAsn1=function(obj,params,randomNum){var capture={};var errors=
[];if(!asn1.validate(params,kcdsaParametersValidator,capture,errors)){var err=new Error("Cannot read private key. "+"ASN.1 object does not contain an KCDSAParameters.");err.errors=errors;throw err;}var p,q,g,j,seed,count;p=forge.util.createBuffer(capture.p).toHex();q=forge.util.createBuffer(capture.q).toHex();g=forge.util.createBuffer(capture.g).toHex();if(capture.j)j=forge.util.createBuffer(capture.j).toHex();if(capture.seed)seed=forge.util.createBuffer(capture.seed).toHex();if(capture.count)count=
forge.util.createBuffer(capture.count).toHex();capture={};errors=[];if(!asn1.validate(obj,kcdsaPrivateKeyValidator,capture,errors)){var err=new Error("Cannot read private key. "+"ASN.1 object does not contain an KCDSAPrivateKey.");err.errors=errors;throw err;}var x=forge.util.createBuffer(capture.x).toHex();var key=pki.setKcdsaPrivateKey(new BigInteger(p,16),new BigInteger(q,16),new BigInteger(g,16),new BigInteger(j,16),new BigInteger(seed,16),count,new BigInteger(x,16));return{key:key,randomNum:randomNum}};
pki.privateKeyToKCDSAPrivateKey=function(key){return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,_bnToBytes(key.x))};pki.kcdsa.publicKeyFromAsn1=function(obj,params){var capture={};var errors=[];if(!asn1.validate(params,kcdsaParametersValidator,capture,errors)){var err=new Error("Cannot read private key. "+"ASN.1 object does not contain an KCDSAParameters.");err.errors=errors;throw err;}var p,q,g,j,seed,count;p=forge.util.createBuffer(capture.p).toHex();q=forge.util.createBuffer(capture.q).toHex();
g=forge.util.createBuffer(capture.g).toHex();if(capture.j)j=forge.util.createBuffer(capture.j).toHex();if(capture.seed)seed=forge.util.createBuffer(capture.seed).toHex();if(capture.count)count=forge.util.createBuffer(capture.count).toHex();capture={};errors=[];if(!asn1.validate(obj,kcdsaPublicKeyValidator,capture,errors)){var error=new Error("Cannot read public key. "+"ASN.1 object does not contain an KCDSA PublicKey.");error.errors=errors;throw error;}var y=forge.util.createBuffer(capture.y).toHex();
return pki.setKcdsaPublicKey(new BigInteger(p,16),new BigInteger(q,16),new BigInteger(g,16),new BigInteger(j,16),new BigInteger(seed,16),count,new BigInteger(y,16),forge.util.bytesToHex(asn1.toDer(obj).getBytes()))};pki.kcdsa.keyParameterFromAsn1=function(params){var capture={};var errors=[];if(!asn1.validate(params,kcdsaParametersValidator,capture,errors)){var err=new Error("Cannot read private key. "+"ASN.1 object does not contain an KCDSAParameters.");err.errors=errors;throw err;}var p,q,g,j,seed,
count;p=forge.util.createBuffer(capture.p).toHex();q=forge.util.createBuffer(capture.q).toHex();g=forge.util.createBuffer(capture.g).toHex();if(capture.j)j=forge.util.createBuffer(capture.j).toHex();if(capture.seed)seed=forge.util.createBuffer(capture.seed).toHex();if(capture.count)count=forge.util.createBuffer(capture.count).toHex();var ojbParam={p:new BigInteger(p,16),q:new BigInteger(q,16),g:new BigInteger(g,16),j:new BigInteger(j,16),seed:new BigInteger(seed,16),count:count};return ojbParam};
pki.kcdsa.generateKeyPair=function(params){var c=new forge.random.createInstance;var x=new forge.jsbn.BigInteger;var d=10;do x.fromNumber(params.q.bitLength(),c);while(x.compareTo(forge.jsbn.BigInteger.ZERO)<=0||x.compareTo(params.q)>=0);var pubkey=params.g.modPow(x.modInverse(params.q),params.p);var hpubkey=pubkey.toString(16);var y=new BigInteger(hpubkey,16);var blockLength=params.p.bitLength()+7>>>3;var keys={privateKey:pki.kcdsa.setPrivateKey(params.p,params.q,params.g,params.j,params.seed,params.count,
x),publicKey:pki.kcdsa.setPublicKey(params.p,params.q,params.g,params.j,params.seed,params.count,y)};return keys};pki.kcdsa.generateParameters=function(PbitLength,QbitLength,hashAlgorithm,seed,outputType){outputType=outputType||"hex";function seed_prng(hs,seedString,bitLength){var outLength=Math.ceil((bitLength+7&4294967288)/8);var cnt=0;var f=false;var tempPrng="";while(!f){hs.start();hs.update(seedString);hs.update([cnt&255]);tempPrng+=hs.digest().getBytes();if(tempPrng.length>=outLength)f=true;
cnt++}return tempPrng.slice(0,outLength)}QbitLength=QbitLength||160;if(PbitLength<1024||PbitLength>4096||PbitLength%8)throw new Error("INVALID_BITLENGTH");if(QbitLength<160||QbitLength>256||QbitLength%32)throw new Error("INVALID_BITLENGTH");if(PbitLength>=2048&&QbitLength<224)throw new Error("INVALID_BITLENGTH");hashAlgorithm=hashAlgorithm||"sha-256";if(PbitLength>=2048&&hashAlgorithm=="has-160")throw new Error("UNFIT_HASH");var numOne=1;var flag=false;var bignumTwo=new BigInteger("2",16);var loopCount=
0;var hashmd;var seedCount=96-PbitLength/32;if(hashAlgorithm=="sha-1")hashmd=forge.md.sha1.create();else if(hashAlgorithm=="sha-256")hashmd=forge.md.sha256.create();else throw new Error("NOTSUPPORT_hashAlgorithm_parameter");while(!flag){if(loopCount==0||loopCount>=seedCount){if(seed)seed=seed_prng(hashmd,seed,PbitLength);else seed=seed_prng(hashmd,Date.now().toString(),PbitLength);var bigNumPrng=forge.random;bigNumPrng.collect(seed);loopCount=0;console.log(forge.util.createBuffer(seed).toHex())}var j=
BigInteger.probablePrime(PbitLength-QbitLength,bigNumPrng,numOne);var q;do q=BigInteger.probablePrime(QbitLength,bigNumPrng,numOne);while(!q.isProbablePrime(numOne));var p=q.multiply(j).multiply(bignumTwo).add(BigInteger.ONE);if(p.testBit(PbitLength-1)&&p.isProbablePrime(numOne)){flag=true;break}loopCount++}var y=j.multiply(bignumTwo);do{var h=BigInteger.random(PbitLength,bigNumPrng);if(h.compareTo(p.subtract(BigInteger.ONE))>=0||h.compareTo(BigInteger.ONE)<=0)continue;var g=h.modPow(y,p)}while(!g||
g.compareTo(BigInteger.ONE)<=0);switch(outputType){case "object":return{p:p,q:q,g:g};case "hex":default:return{p:p.toString(16),q:q.toString(16),g:g.toString(16)}}};pki.kcdsa.publicKeyToAsn1=pki.kcdsa.publicKeyToSubjectPublicKeyInfo=function(key){return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(forge.pki.oids.kcdsa1).getBytes()),pki.parametersToAsn1(key)]),asn1.create(asn1.Class.UNIVERSAL,
asn1.Type.BITSTRING,false,[pki.publicKeyToKCDSAPublicKey(key)])])};pki.publicKeyToKCDSAPublicKey=function(key){return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,_bnToBytes(key.y))};function _bnToBytes(b){var hex=b.toString(16);if(hex[0]>="8")hex="00"+hex;return forge.util.hexToBytes(hex)}}var name="kcdsa";if(typeof define!=="function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,module)}}else{if(typeof forge==="undefined")forge=
{};return initModule(forge)}var deps;var defineFunc=function(require,module){module.exports=function(forge){var mods=deps.map(function(dep){return require(dep)}).concat(initModule);forge=forge||{};forge.defined=forge.defined||{};if(forge.defined[name])return forge[name];forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);return forge[name]}};var tmpDefine=define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):ids.slice(2);if(nodeJS){delete define;return tmpDefine.apply(null,
Array.prototype.slice.call(arguments,0))}define=tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,0))};define(["require","module","./asn1","./md","./jsbn","./oids","./pkcs1","./prime","./random","./util"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,0))})})();(function(){function initModule(forge){var asn1=forge.asn1;var pki=forge.pki=forge.pki||{};var oids=pki.oids;var _shortNames={};_shortNames["CN"]=oids["commonName"];_shortNames["commonName"]="CN";_shortNames["C"]=oids["countryName"];_shortNames["countryName"]="C";_shortNames["L"]=oids["localityName"];_shortNames["localityName"]="L";_shortNames["ST"]=oids["stateOrProvinceName"];_shortNames["stateOrProvinceName"]="ST";_shortNames["O"]=oids["organizationName"];_shortNames["organizationName"]="O";_shortNames["OU"]=
oids["organizationalUnitName"];_shortNames["organizationalUnitName"]="OU";_shortNames["E"]=oids["emailAddress"];_shortNames["emailAddress"]="E";var publicKeyValidator=forge.pki.rsa.publicKeyValidator;var x509CertificateValidator={name:"Certificate",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"Certificate.TBSCertificate",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,captureAsn1:"tbsCertificate",value:[{name:"Certificate.TBSCertificate.version",
tagClass:asn1.Class.CONTEXT_SPECIFIC,type:0,constructed:true,optional:true,value:[{name:"Certificate.TBSCertificate.version.integer",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"certVersion"}]},{name:"Certificate.TBSCertificate.serialNumber",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"certSerialNumber"},{name:"Certificate.TBSCertificate.signature",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"Certificate.TBSCertificate.signature.algorithm",
tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,capture:"certinfoSignatureOid"},{name:"Certificate.TBSCertificate.signature.parameters",tagClass:asn1.Class.UNIVERSAL,optional:true,captureAsn1:"certinfoSignatureParams"}]},{name:"Certificate.TBSCertificate.issuer",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,captureAsn1:"certIssuer"},{name:"Certificate.TBSCertificate.validity",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"Certificate.TBSCertificate.validity.notBefore (utc)",
tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.UTCTIME,constructed:false,optional:true,capture:"certValidity1UTCTime"},{name:"Certificate.TBSCertificate.validity.notBefore (generalized)",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.GENERALIZEDTIME,constructed:false,optional:true,capture:"certValidity2GeneralizedTime"},{name:"Certificate.TBSCertificate.validity.notAfter (utc)",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.UTCTIME,constructed:false,optional:true,capture:"certValidity3UTCTime"},{name:"Certificate.TBSCertificate.validity.notAfter (generalized)",
tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.GENERALIZEDTIME,constructed:false,optional:true,capture:"certValidity4GeneralizedTime"}]},{name:"Certificate.TBSCertificate.subject",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,captureAsn1:"certSubject"},publicKeyValidator,{name:"Certificate.TBSCertificate.issuerUniqueID",tagClass:asn1.Class.CONTEXT_SPECIFIC,type:1,constructed:true,optional:true,value:[{name:"Certificate.TBSCertificate.issuerUniqueID.id",tagClass:asn1.Class.UNIVERSAL,
type:asn1.Type.BITSTRING,constructed:false,capture:"certIssuerUniqueId"}]},{name:"Certificate.TBSCertificate.subjectUniqueID",tagClass:asn1.Class.CONTEXT_SPECIFIC,type:2,constructed:true,optional:true,value:[{name:"Certificate.TBSCertificate.subjectUniqueID.id",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.BITSTRING,constructed:false,capture:"certSubjectUniqueId"}]},{name:"Certificate.TBSCertificate.extensions",tagClass:asn1.Class.CONTEXT_SPECIFIC,type:3,constructed:true,captureAsn1:"certExtensions",
optional:true}]},{name:"Certificate.signatureAlgorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"Certificate.signatureAlgorithm.algorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,capture:"certSignatureOid"},{name:"Certificate.TBSCertificate.signature.parameters",tagClass:asn1.Class.UNIVERSAL,optional:true,captureAsn1:"certSignatureParams"}]},{name:"Certificate.signatureValue",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.BITSTRING,
constructed:false,capture:"certSignature"}]};var rsassaPssParameterValidator={name:"rsapss",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"rsapss.hashAlgorithm",tagClass:asn1.Class.CONTEXT_SPECIFIC,type:0,constructed:true,value:[{name:"rsapss.hashAlgorithm.AlgorithmIdentifier",tagClass:asn1.Class.UNIVERSAL,type:asn1.Class.SEQUENCE,constructed:true,optional:true,value:[{name:"rsapss.hashAlgorithm.AlgorithmIdentifier.algorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,
constructed:false,capture:"hashOid"}]}]},{name:"rsapss.maskGenAlgorithm",tagClass:asn1.Class.CONTEXT_SPECIFIC,type:1,constructed:true,value:[{name:"rsapss.maskGenAlgorithm.AlgorithmIdentifier",tagClass:asn1.Class.UNIVERSAL,type:asn1.Class.SEQUENCE,constructed:true,optional:true,value:[{name:"rsapss.maskGenAlgorithm.AlgorithmIdentifier.algorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,capture:"maskGenOid"},{name:"rsapss.maskGenAlgorithm.AlgorithmIdentifier.params",tagClass:asn1.Class.UNIVERSAL,
type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"rsapss.maskGenAlgorithm.AlgorithmIdentifier.params.algorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,capture:"maskGenHashOid"}]}]}]},{name:"rsapss.saltLength",tagClass:asn1.Class.CONTEXT_SPECIFIC,type:2,optional:true,value:[{name:"rsapss.saltLength.saltLength",tagClass:asn1.Class.UNIVERSAL,type:asn1.Class.INTEGER,constructed:false,capture:"saltLength"}]},{name:"rsapss.trailerField",tagClass:asn1.Class.CONTEXT_SPECIFIC,
type:3,optional:true,value:[{name:"rsapss.trailer.trailer",tagClass:asn1.Class.UNIVERSAL,type:asn1.Class.INTEGER,constructed:false,capture:"trailer"}]}]};var certificationRequestInfoValidator={name:"CertificationRequestInfo",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,captureAsn1:"certificationRequestInfo",value:[{name:"CertificationRequestInfo.integer",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"certificationRequestInfoVersion"},{name:"CertificationRequestInfo.subject",
tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,captureAsn1:"certificationRequestInfoSubject"},publicKeyValidator,{name:"CertificationRequestInfo.attributes",tagClass:asn1.Class.CONTEXT_SPECIFIC,type:0,constructed:true,optional:true,capture:"certificationRequestInfoAttributes",value:[{name:"CertificationRequestInfo.attributes",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"CertificationRequestInfo.attributes.type",tagClass:asn1.Class.UNIVERSAL,
type:asn1.Type.OID,constructed:false},{name:"CertificationRequestInfo.attributes.value",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SET,constructed:true}]}]}]};var certificationRequestValidator={name:"CertificationRequest",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,captureAsn1:"csr",value:[certificationRequestInfoValidator,{name:"CertificationRequest.signatureAlgorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"CertificationRequest.signatureAlgorithm.algorithm",
tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,capture:"csrSignatureOid"},{name:"CertificationRequest.signatureAlgorithm.parameters",tagClass:asn1.Class.UNIVERSAL,optional:true,captureAsn1:"csrSignatureParams"}]},{name:"CertificationRequest.signature",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.BITSTRING,constructed:false,capture:"csrSignature"}]};pki.RDNAttributesAsArray=function(rdn,md){var rval=[];var set,attr,obj;for(var si=0;si<rdn.value.length;++si){set=rdn.value[si];for(var i=
0;i<set.value.length;++i){obj={};attr=set.value[i];obj.type=asn1.derToOid(attr.value[0].value);obj.value=attr.value[1].value;obj.valueTagClass=attr.value[1].type;if(obj.type in oids){obj.name=oids[obj.type];if(obj.name in _shortNames)obj.shortName=_shortNames[obj.name]}if(md){md.update(obj.type);md.update(obj.value)}rval.push(obj)}}return rval};pki.CRIAttributesAsArray=function(attributes){var rval=[];for(var si=0;si<attributes.length;++si){var seq=attributes[si];var type=asn1.derToOid(seq.value[0].value);
var values=seq.value[1].value;for(var vi=0;vi<values.length;++vi){var obj={};obj.type=type;obj.value=values[vi].value;obj.valueTagClass=values[vi].type;if(obj.type in oids){obj.name=oids[obj.type];if(obj.name in _shortNames)obj.shortName=_shortNames[obj.name]}if(obj.type===oids.extensionRequest){obj.extensions=[];for(var ei=0;ei<obj.value.length;++ei)obj.extensions.push(pki.certificateExtensionFromAsn1(obj.value[ei]))}rval.push(obj)}}return rval};function _getAttribute(obj,options){if(typeof options===
"string")options={shortName:options};var rval=null;var attr;for(var i=0;rval===null&&i<obj.attributes.length;++i){attr=obj.attributes[i];if(options.type&&options.type===attr.type)rval=attr;else if(options.name&&options.name===attr.name)rval=attr;else if(options.shortName&&options.shortName===attr.shortName)rval=attr}return rval}var _readSignatureParameters=function(oid,obj,fillDefaults){var params={};if(oid!==oids["RSASSA-PSS"])return params;if(fillDefaults)params={hash:{algorithmOid:oids["sha1"]},
mgf:{algorithmOid:oids["mgf1"],hash:{algorithmOid:oids["sha1"]}},saltLength:20};var capture={};var errors=[];if(!asn1.validate(obj,rsassaPssParameterValidator,capture,errors)){var error=new Error("Cannot read RSASSA-PSS parameter block.");error.errors=errors;throw error;}if(capture.hashOid!==undefined){params.hash=params.hash||{};params.hash.algorithmOid=asn1.derToOid(capture.hashOid)}if(capture.maskGenOid!==undefined){params.mgf=params.mgf||{};params.mgf.algorithmOid=asn1.derToOid(capture.maskGenOid);
params.mgf.hash=params.mgf.hash||{};params.mgf.hash.algorithmOid=asn1.derToOid(capture.maskGenHashOid)}if(capture.saltLength!==undefined)params.saltLength=capture.saltLength.charCodeAt(0);return params};pki.certificateFromPem=function(pem,computeHash,strict){var msg=forge.pem.decode(pem)[0];if(msg.type!=="CERTIFICATE"&&msg.type!=="X509 CERTIFICATE"&&msg.type!=="TRUSTED CERTIFICATE"){var error=new Error("Could not convert certificate from PEM; PEM header type "+'is not "CERTIFICATE", "X509 CERTIFICATE", or "TRUSTED CERTIFICATE".');
error.headerType=msg.type;throw error;}if(msg.procType&&msg.procType.type==="ENCRYPTED")throw new Error("Could not convert certificate from PEM; PEM is encrypted.");var obj=asn1.fromDer(msg.body,strict);return pki.certificateFromAsn1(obj,computeHash)};pki.certificateToPem=function(cert,maxline){var msg={type:"CERTIFICATE",body:asn1.toDer(pki.certificateToAsn1(cert)).getBytes()};return forge.pem.encode(msg,{maxline:maxline})};pki.publicKeyFromPem=function(pem){var msg=forge.pem.decode(pem)[0];if(msg.type!==
"PUBLIC KEY"&&msg.type!=="RSA PUBLIC KEY"){var error=new Error("Could not convert public key from PEM; PEM header "+'type is not "PUBLIC KEY" or "RSA PUBLIC KEY".');error.headerType=msg.type;throw error;}if(msg.procType&&msg.procType.type==="ENCRYPTED")throw new Error("Could not convert public key from PEM; PEM is encrypted.");var obj=asn1.fromDer(msg.body);return pki.publicKeyFromAsn1(obj)};pki.publicKeyToPem=function(key,maxline){var msg={type:"PUBLIC KEY",body:asn1.toDer(sofo.pki.publicKeyToAsn1(key)).getBytes()};
return forge.pem.encode(msg,{maxline:maxline})};pki.publicKeyToRSAPublicKeyPem=function(key,maxline){var msg={type:"RSA PUBLIC KEY",body:asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes()};return forge.pem.encode(msg,{maxline:maxline})};pki.getPublicKeyFingerprint=function(key,options){options=options||{};var md=options.md||forge.md.sha1.create();var type=options.type||"RSAPublicKey";var bytes;switch(type){case "RSAPublicKey":bytes=asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes();break;
case "SubjectPublicKeyInfo":bytes=asn1.toDer(sofo.pki.publicKeyToAsn1(key)).getBytes();break;default:throw new Error('Unknown fingerprint type "'+options.type+'".');}md.start();md.update(bytes);var digest=md.digest();if(options.encoding==="hex"){var hex=digest.toHex();if(options.delimiter)return hex.match(/.{2}/g).join(options.delimiter);return hex}else if(options.encoding==="binary")return digest.getBytes();else if(options.encoding)throw new Error('Unknown encoding "'+options.encoding+'".');return digest};
pki.certificationRequestFromPem=function(pem,computeHash,strict){var msg=forge.pem.decode(pem)[0];if(msg.type!=="CERTIFICATE REQUEST"){var error=new Error("Could not convert certification request from PEM; "+'PEM header type is not "CERTIFICATE REQUEST".');error.headerType=msg.type;throw error;}if(msg.procType&&msg.procType.type==="ENCRYPTED")throw new Error("Could not convert certification request from PEM; "+"PEM is encrypted.");var obj=asn1.fromDer(msg.body,strict);return pki.certificationRequestFromAsn1(obj,
computeHash)};pki.certificationRequestToPem=function(csr,maxline){var msg={type:"CERTIFICATE REQUEST",body:asn1.toDer(pki.certificationRequestToAsn1(csr)).getBytes()};return forge.pem.encode(msg,{maxline:maxline})};pki.createCertificate=function(){var cert={};cert.version=2;cert.serialNumber="00";cert.signatureOid=null;cert.signature=null;cert.siginfo={};cert.siginfo.algorithmOid=null;cert.validity={};cert.validity.notBefore=new Date;cert.validity.notAfter=new Date;cert.issuer={};cert.issuer.getField=
function(sn){return _getAttribute(cert.issuer,sn)};cert.issuer.addField=function(attr){_fillMissingFields([attr]);cert.issuer.attributes.push(attr)};cert.issuer.attributes=[];cert.issuer.hash=null;cert.subject={};cert.subject.getField=function(sn){return _getAttribute(cert.subject,sn)};cert.subject.addField=function(attr){_fillMissingFields([attr]);cert.subject.attributes.push(attr)};cert.subject.attributes=[];cert.subject.hash=null;cert.extensions=[];cert.publicKey=null;cert.md=null;cert.setSubject=
function(attrs,uniqueId){_fillMissingFields(attrs);cert.subject.attributes=attrs;delete cert.subject.uniqueId;if(uniqueId)cert.subject.uniqueId=uniqueId;cert.subject.hash=null};cert.setIssuer=function(attrs,uniqueId){_fillMissingFields(attrs);cert.issuer.attributes=attrs;delete cert.issuer.uniqueId;if(uniqueId)cert.issuer.uniqueId=uniqueId;cert.issuer.hash=null};cert.setExtensions=function(exts){for(var i=0;i<exts.length;++i)_fillMissingExtensionFields(exts[i],{cert:cert});cert.extensions=exts};cert.getExtension=
function(options){if(typeof options==="string")options={name:options};var rval=null;var ext;for(var i=0;rval===null&&i<cert.extensions.length;++i){ext=cert.extensions[i];if(options.id&&ext.id===options.id)rval=ext;else if(options.name&&ext.name===options.name)rval=ext}return rval};cert.sign=function(key,md){cert.md=md||forge.md.sha1.create();var algorithmOid=oids[cert.md.algorithm+"WithRSAEncryption"];if(!algorithmOid){var error=new Error("Could not compute certificate digest. "+"Unknown message digest algorithm OID.");
error.algorithm=cert.md.algorithm;throw error;}cert.signatureOid=cert.siginfo.algorithmOid=algorithmOid;cert.tbsCertificate=pki.getTBSCertificate(cert);var bytes=asn1.toDer(cert.tbsCertificate);cert.md.update(bytes.getBytes());cert.signature=key.sign(cert.md)};cert.verify=function(child){var rval=false;if(!cert.issued(child)){var issuer=child.issuer;var subject=cert.subject;var error=new Error("The parent certificate did not issue the given child "+"certificate; the child certificate's issuer does not match the "+
"parent's subject.");error.expectedIssuer=issuer.attributes;error.actualIssuer=subject.attributes;throw error;}var md=child.md;if(md===null){if(child.signatureOid in oids){var oid=oids[child.signatureOid];switch(oid){case "sha1WithRSAEncryption":md=forge.md.sha1.create();break;case "md5WithRSAEncryption":md=forge.md.md5.create();break;case "sha256WithRSAEncryption":md=forge.md.sha256.create();break;case "sha512WithRSAEncryption":md=forge.md.sha512.create();break;case "RSASSA-PSS":md=forge.md.sha256.create();
break}}if(md===null){var error=new Error("Could not compute certificate digest. "+"Unknown signature OID.");error.signatureOid=child.signatureOid;throw error;}var tbsCertificate=child.tbsCertificate||pki.getTBSCertificate(child);var bytes=asn1.toDer(tbsCertificate);md.update(bytes.getBytes())}if(md!==null){var scheme;switch(child.signatureOid){case oids.sha1WithRSAEncryption:scheme=undefined;break;case oids["RSASSA-PSS"]:var hash,mgf;hash=oids[child.signatureParameters.mgf.hash.algorithmOid];if(hash===
undefined||forge.md[hash]===undefined){var error=new Error("Unsupported MGF hash function.");error.oid=child.signatureParameters.mgf.hash.algorithmOid;error.name=hash;throw error;}mgf=oids[child.signatureParameters.mgf.algorithmOid];if(mgf===undefined||forge.mgf[mgf]===undefined){var error=new Error("Unsupported MGF function.");error.oid=child.signatureParameters.mgf.algorithmOid;error.name=mgf;throw error;}mgf=forge.mgf[mgf].create(forge.md[hash].create());hash=oids[child.signatureParameters.hash.algorithmOid];
if(hash===undefined||forge.md[hash]===undefined)throw{message:"Unsupported RSASSA-PSS hash function.",oid:child.signatureParameters.hash.algorithmOid,name:hash};scheme=forge.pss.create(forge.md[hash].create(),mgf,child.signatureParameters.saltLength);break}rval=cert.publicKey.verify(md.digest().getBytes(),child.signature,scheme)}return rval};cert.isIssuer=function(parent){var rval=false;var i=cert.issuer;var s=parent.subject;if(i.hash&&s.hash)rval=i.hash===s.hash;else if(i.attributes.length===s.attributes.length){rval=
true;var iattr,sattr;for(var n=0;rval&&n<i.attributes.length;++n){iattr=i.attributes[n];sattr=s.attributes[n];if(iattr.type!==sattr.type||iattr.value!==sattr.value)rval=false}}return rval};cert.issued=function(child){return child.isIssuer(cert)};cert.generateSubjectKeyIdentifier=function(){return pki.getPublicKeyFingerprint(cert.publicKey,{type:"RSAPublicKey"})};cert.verifySubjectKeyIdentifier=function(){var oid=oids["subjectKeyIdentifier"];for(var i=0;i<cert.extensions.length;++i){var ext=cert.extensions[i];
if(ext.id===oid){var ski=cert.generateSubjectKeyIdentifier().getBytes();return forge.util.hexToBytes(ext.subjectKeyIdentifier)===ski}}return false};return cert};pki.certificateFromAsn1=function(obj,computeHash){var capture={};var errors=[];if(!asn1.validate(obj,x509CertificateValidator,capture,errors)){var error=new Error("Cannot read X.509 certificate. "+"ASN.1 object is not an X509v3 Certificate.");error.errors=errors;throw error;}if(typeof capture.certSignature!=="string"){var certSignature="\x00";
for(var i=0;i<capture.certSignature.length;++i)certSignature+=asn1.toDer(capture.certSignature[i]).getBytes();capture.certSignature=certSignature}var publicKeyOid=asn1.derToOid(capture.publicKeyOid);if(publicKeyOid!==pki.oids["rsaEncryption"]&&publicKeyOid!==pki.oids["kcdsa1"])throw new Error("Cannot read public key. OID is invalid.");var cert=pki.createCertificate();cert.version=capture.certVersion?capture.certVersion.charCodeAt(0):0;var serial=forge.util.createBuffer(capture.certSerialNumber);cert.serialNumber=
serial.toHex();cert.signatureOid=forge.asn1.derToOid(capture.certSignatureOid);cert.signatureParameters=_readSignatureParameters(cert.signatureOid,capture.certSignatureParams,true);cert.siginfo.algorithmOid=forge.asn1.derToOid(capture.certinfoSignatureOid);cert.siginfo.parameters=_readSignatureParameters(cert.siginfo.algorithmOid,capture.certinfoSignatureParams,false);var signature=forge.util.createBuffer(capture.certSignature);++signature.read;cert.signature=signature.getBytes();var validity=[];
if(capture.certValidity1UTCTime!==undefined)validity.push(asn1.utcTimeToDate(capture.certValidity1UTCTime));if(capture.certValidity2GeneralizedTime!==undefined)validity.push(asn1.generalizedTimeToDate(capture.certValidity2GeneralizedTime));if(capture.certValidity3UTCTime!==undefined)validity.push(asn1.utcTimeToDate(capture.certValidity3UTCTime));if(capture.certValidity4GeneralizedTime!==undefined)validity.push(asn1.generalizedTimeToDate(capture.certValidity4GeneralizedTime));if(validity.length>2)throw new Error("Cannot read notBefore/notAfter validity times; more "+
"than two times were provided in the certificate.");if(validity.length<2)throw new Error("Cannot read notBefore/notAfter validity times; they "+"were not provided as either UTCTime or GeneralizedTime.");cert.validity.notBefore=validity[0];cert.validity.notAfter=validity[1];cert.tbsCertificate=capture.tbsCertificate;if(computeHash){cert.md=null;if(cert.signatureOid in oids){var oid=oids[cert.signatureOid];switch(oid){case "sha1WithRSAEncryption":cert.md=forge.md.sha1.create();break;case "md5WithRSAEncryption":cert.md=
forge.md.md5.create();break;case "sha256WithRSAEncryption":cert.md=forge.md.sha256.create();break;case "sha512WithRSAEncryption":cert.md=forge.md.sha512.create();break;case "RSASSA-PSS":cert.md=forge.md.sha256.create();break}}if(cert.md===null){var error=new Error("Could not compute certificate digest. "+"Unknown signature OID.");error.signatureOid=cert.signatureOid;throw error;}var bytes=asn1.toDer(cert.tbsCertificate);cert.md.update(bytes.getBytes())}var imd=forge.md.sha1.create();cert.issuer.getField=
function(sn){return _getAttribute(cert.issuer,sn)};cert.issuer.addField=function(attr){_fillMissingFields([attr]);cert.issuer.attributes.push(attr)};cert.issuer.attributes=pki.RDNAttributesAsArray(capture.certIssuer,imd);if(capture.certIssuerUniqueId)cert.issuer.uniqueId=capture.certIssuerUniqueId;cert.issuer.hash=imd.digest().toHex();var smd=forge.md.sha1.create();cert.subject.getField=function(sn){return _getAttribute(cert.subject,sn)};cert.subject.addField=function(attr){_fillMissingFields([attr]);
cert.subject.attributes.push(attr)};cert.subject.attributes=pki.RDNAttributesAsArray(capture.certSubject,smd);if(capture.certSubjectUniqueId)cert.subject.uniqueId=capture.certSubjectUniqueId;cert.subject.hash=smd.digest().toHex();if(capture.certExtensions)cert.extensions=pki.certificateExtensionsFromAsn1(capture.certExtensions);else cert.extensions=[];cert.publicKey=sofo.pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);cert.publicKeyOid=publicKeyOid;return cert};pki.certificateExtensionsFromAsn1=
function(exts){var rval=[];for(var i=0;i<exts.value.length;++i){var extseq=exts.value[i];for(var ei=0;ei<extseq.value.length;++ei)rval.push(pki.certificateExtensionFromAsn1(extseq.value[ei]))}return rval};pki.certificateExtensionFromAsn1=function(ext){var e={};e.id=asn1.derToOid(ext.value[0].value);e.critical=false;if(ext.value[1].type===asn1.Type.BOOLEAN){e.critical=ext.value[1].value.charCodeAt(0)!==0;e.value=ext.value[2].value}else e.value=ext.value[1].value;if(e.id in oids){e.name=oids[e.id];
if(e.name==="keyUsage"){var ev=asn1.fromDer(e.value);var b2=0;var b3=0;if(ev.value.length>1){b2=ev.value.charCodeAt(1);b3=ev.value.length>2?ev.value.charCodeAt(2):0}e.digitalSignature=(b2&128)===128;e.nonRepudiation=(b2&64)===64;e.keyEncipherment=(b2&32)===32;e.dataEncipherment=(b2&16)===16;e.keyAgreement=(b2&8)===8;e.keyCertSign=(b2&4)===4;e.cRLSign=(b2&2)===2;e.encipherOnly=(b2&1)===1;e.decipherOnly=(b3&128)===128}else if(e.name==="basicConstraints"){var ev=asn1.fromDer(e.value);if(ev.value.length>
0&&ev.value[0].type===asn1.Type.BOOLEAN)e.cA=ev.value[0].value.charCodeAt(0)!==0;else e.cA=false;var value=null;if(ev.value.length>0&&ev.value[0].type===asn1.Type.INTEGER)value=ev.value[0].value;else if(ev.value.length>1)value=ev.value[1].value;if(value!==null)e.pathLenConstraint=asn1.derToInteger(value)}else if(e.name==="extKeyUsage"){var ev=asn1.fromDer(e.value);for(var vi=0;vi<ev.value.length;++vi){var oid=asn1.derToOid(ev.value[vi].value);if(oid in oids)e[oids[oid]]=true;else e[oid]=true}}else if(e.name===
"nsCertType"){var ev=asn1.fromDer(e.value);var b2=0;if(ev.value.length>1)b2=ev.value.charCodeAt(1);e.client=(b2&128)===128;e.server=(b2&64)===64;e.email=(b2&32)===32;e.objsign=(b2&16)===16;e.reserved=(b2&8)===8;e.sslCA=(b2&4)===4;e.emailCA=(b2&2)===2;e.objCA=(b2&1)===1}else if(e.name==="subjectAltName"||e.name==="issuerAltName"){e.altNames=[];var gn;var ev=asn1.fromDer(e.value);for(var n=0;n<ev.value.length;++n){gn=ev.value[n];var altName={type:gn.type,value:gn.value};e.altNames.push(altName);switch(gn.type){case 1:case 2:case 6:break;
case 7:altName.ip=forge.util.bytesToIP(gn.value);break;case 8:altName.oid=asn1.derToOid(gn.value);break;default:}}}else if(e.name==="subjectKeyIdentifier"){var ev=asn1.fromDer(e.value);e.subjectKeyIdentifier=forge.util.bytesToHex(ev.value)}}return e};pki.certificationRequestFromAsn1=function(obj,computeHash){var capture={};var errors=[];if(!asn1.validate(obj,certificationRequestValidator,capture,errors)){var error=new Error("Cannot read PKCS#10 certificate request. "+"ASN.1 object is not a PKCS#10 CertificationRequest.");
error.errors=errors;throw error;}if(typeof capture.csrSignature!=="string"){var csrSignature="\x00";for(var i=0;i<capture.csrSignature.length;++i)csrSignature+=asn1.toDer(capture.csrSignature[i]).getBytes();capture.csrSignature=csrSignature}var oid=asn1.derToOid(capture.publicKeyOid);if(oid!==pki.oids.rsaEncryption)throw new Error("Cannot read public key. OID is not RSA.");var csr=pki.createCertificationRequest();csr.version=capture.csrVersion?capture.csrVersion.charCodeAt(0):0;csr.signatureOid=forge.asn1.derToOid(capture.csrSignatureOid);
csr.signatureParameters=_readSignatureParameters(csr.signatureOid,capture.csrSignatureParams,true);csr.siginfo.algorithmOid=forge.asn1.derToOid(capture.csrSignatureOid);csr.siginfo.parameters=_readSignatureParameters(csr.siginfo.algorithmOid,capture.csrSignatureParams,false);var signature=forge.util.createBuffer(capture.csrSignature);++signature.read;csr.signature=signature.getBytes();csr.certificationRequestInfo=capture.certificationRequestInfo;if(computeHash){csr.md=null;if(csr.signatureOid in oids){var oid=
oids[csr.signatureOid];switch(oid){case "sha1WithRSAEncryption":csr.md=forge.md.sha1.create();break;case "md5WithRSAEncryption":csr.md=forge.md.md5.create();break;case "sha256WithRSAEncryption":csr.md=forge.md.sha256.create();break;case "sha512WithRSAEncryption":csr.md=forge.md.sha512.create();break;case "RSASSA-PSS":csr.md=forge.md.sha256.create();break}}if(csr.md===null){var error=new Error("Could not compute certification request digest. "+"Unknown signature OID.");error.signatureOid=csr.signatureOid;
throw error;}var bytes=asn1.toDer(csr.certificationRequestInfo);csr.md.update(bytes.getBytes())}var smd=forge.md.sha1.create();csr.subject.getField=function(sn){return _getAttribute(csr.subject,sn)};csr.subject.addField=function(attr){_fillMissingFields([attr]);csr.subject.attributes.push(attr)};csr.subject.attributes=pki.RDNAttributesAsArray(capture.certificationRequestInfoSubject,smd);csr.subject.hash=smd.digest().toHex();csr.publicKey=pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);csr.getAttribute=
function(sn){return _getAttribute(csr,sn)};csr.addAttribute=function(attr){_fillMissingFields([attr]);csr.attributes.push(attr)};csr.attributes=pki.CRIAttributesAsArray(capture.certificationRequestInfoAttributes||[]);return csr};pki.createCertificationRequest=function(){var csr={};csr.version=0;csr.signatureOid=null;csr.signature=null;csr.siginfo={};csr.siginfo.algorithmOid=null;csr.subject={};csr.subject.getField=function(sn){return _getAttribute(csr.subject,sn)};csr.subject.addField=function(attr){_fillMissingFields([attr]);
csr.subject.attributes.push(attr)};csr.subject.attributes=[];csr.subject.hash=null;csr.publicKey=null;csr.attributes=[];csr.getAttribute=function(sn){return _getAttribute(csr,sn)};csr.addAttribute=function(attr){_fillMissingFields([attr]);csr.attributes.push(attr)};csr.md=null;csr.setSubject=function(attrs){_fillMissingFields(attrs);csr.subject.attributes=attrs;csr.subject.hash=null};csr.setAttributes=function(attrs){_fillMissingFields(attrs);csr.attributes=attrs};csr.sign=function(key,md){csr.md=
md||forge.md.sha1.create();var algorithmOid=oids[csr.md.algorithm+"WithRSAEncryption"];if(!algorithmOid){var error=new Error("Could not compute certification request digest. "+"Unknown message digest algorithm OID.");error.algorithm=csr.md.algorithm;throw error;}csr.signatureOid=csr.siginfo.algorithmOid=algorithmOid;csr.certificationRequestInfo=pki.getCertificationRequestInfo(csr);var bytes=asn1.toDer(csr.certificationRequestInfo);csr.md.update(bytes.getBytes());csr.signature=key.sign(csr.md)};csr.verify=
function(){var rval=false;var md=csr.md;if(md===null){if(csr.signatureOid in oids){var oid=oids[csr.signatureOid];switch(oid){case "sha1WithRSAEncryption":md=forge.md.sha1.create();break;case "md5WithRSAEncryption":md=forge.md.md5.create();break;case "sha256WithRSAEncryption":md=forge.md.sha256.create();break;case "sha512WithRSAEncryption":md=forge.md.sha512.create();break;case "RSASSA-PSS":md=forge.md.sha256.create();break}}if(md===null){var error=new Error("Could not compute certification request digest. "+
"Unknown signature OID.");error.signatureOid=csr.signatureOid;throw error;}var cri=csr.certificationRequestInfo||pki.getCertificationRequestInfo(csr);var bytes=asn1.toDer(cri);md.update(bytes.getBytes())}if(md!==null){var scheme;switch(csr.signatureOid){case oids.sha1WithRSAEncryption:break;case oids["RSASSA-PSS"]:var hash,mgf;hash=oids[csr.signatureParameters.mgf.hash.algorithmOid];if(hash===undefined||forge.md[hash]===undefined){var error=new Error("Unsupported MGF hash function.");error.oid=csr.signatureParameters.mgf.hash.algorithmOid;
error.name=hash;throw error;}mgf=oids[csr.signatureParameters.mgf.algorithmOid];if(mgf===undefined||forge.mgf[mgf]===undefined){var error=new Error("Unsupported MGF function.");error.oid=csr.signatureParameters.mgf.algorithmOid;error.name=mgf;throw error;}mgf=forge.mgf[mgf].create(forge.md[hash].create());hash=oids[csr.signatureParameters.hash.algorithmOid];if(hash===undefined||forge.md[hash]===undefined){var error=new Error("Unsupported RSASSA-PSS hash function.");error.oid=csr.signatureParameters.hash.algorithmOid;
error.name=hash;throw error;}scheme=forge.pss.create(forge.md[hash].create(),mgf,csr.signatureParameters.saltLength);break}rval=csr.publicKey.verify(md.digest().getBytes(),csr.signature,scheme)}return rval};return csr};function _dnToAsn1(obj){var rval=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[]);var attr,set;var attrs=obj.attributes;for(var i=0;i<attrs.length;++i){attr=attrs[i];var value=attr.value;var valueTagClass=asn1.Type.PRINTABLESTRING;if("valueTagClass"in attr){valueTagClass=
attr.valueTagClass;if(valueTagClass===asn1.Type.UTF8)value=forge.util.encodeUtf8(value)}set=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SET,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(attr.type).getBytes()),asn1.create(asn1.Class.UNIVERSAL,valueTagClass,false,value)])]);rval.value.push(set)}return rval}function _getAttributesAsJson(attrs){var rval={};for(var i=0;i<attrs.length;++i){var attr=attrs[i];if(attr.shortName&&
(attr.valueTagClass===asn1.Type.UTF8||attr.valueTagClass===asn1.Type.PRINTABLESTRING||attr.valueTagClass===asn1.Type.IA5STRING)){var value=attr.value;if(attr.valueTagClass===asn1.Type.UTF8)value=forge.util.encodeUtf8(attr.value);if(!(attr.shortName in rval))rval[attr.shortName]=value;else if(forge.util.isArray(rval[attr.shortName]))rval[attr.shortName].push(value);else rval[attr.shortName]=[rval[attr.shortName],value]}}return rval}function _fillMissingFields(attrs){var attr;for(var i=0;i<attrs.length;++i){attr=
attrs[i];if(typeof attr.name==="undefined")if(attr.type&&attr.type in pki.oids)attr.name=pki.oids[attr.type];else if(attr.shortName&&attr.shortName in _shortNames)attr.name=pki.oids[_shortNames[attr.shortName]];if(typeof attr.type==="undefined")if(attr.name&&attr.name in pki.oids)attr.type=pki.oids[attr.name];else{var error=new Error("Attribute type not specified.");error.attribute=attr;throw error;}if(typeof attr.shortName==="undefined")if(attr.name&&attr.name in _shortNames)attr.shortName=_shortNames[attr.name];
if(attr.type===oids.extensionRequest){attr.valueConstructed=true;attr.valueTagClass=asn1.Type.SEQUENCE;if(!attr.value&&attr.extensions){attr.value=[];for(var ei=0;ei<attr.extensions.length;++ei)attr.value.push(pki.certificateExtensionToAsn1(_fillMissingExtensionFields(attr.extensions[ei])))}}if(typeof attr.value==="undefined"){var error=new Error("Attribute value not specified.");error.attribute=attr;throw error;}}}function _fillMissingExtensionFields(e,options){options=options||{};if(typeof e.name===
"undefined")if(e.id&&e.id in pki.oids)e.name=pki.oids[e.id];if(typeof e.id==="undefined")if(e.name&&e.name in pki.oids)e.id=pki.oids[e.name];else{var error=new Error("Extension ID not specified.");error.extension=e;throw error;}if(typeof e.value!=="undefined")return e;if(e.name==="keyUsage"){var unused=0;var b2=0;var b3=0;if(e.digitalSignature){b2|=128;unused=7}if(e.nonRepudiation){b2|=64;unused=6}if(e.keyEncipherment){b2|=32;unused=5}if(e.dataEncipherment){b2|=16;unused=4}if(e.keyAgreement){b2|=
8;unused=3}if(e.keyCertSign){b2|=4;unused=2}if(e.cRLSign){b2|=2;unused=1}if(e.encipherOnly){b2|=1;unused=0}if(e.decipherOnly){b3|=128;unused=7}var value=String.fromCharCode(unused);if(b3!==0)value+=String.fromCharCode(b2)+String.fromCharCode(b3);else if(b2!==0)value+=String.fromCharCode(b2);e.value=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.BITSTRING,false,value)}else if(e.name==="basicConstraints"){e.value=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[]);if(e.cA)e.value.value.push(asn1.create(asn1.Class.UNIVERSAL,
asn1.Type.BOOLEAN,false,String.fromCharCode(255)));if("pathLenConstraint"in e)e.value.value.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,asn1.integerToDer(e.pathLenConstraint).getBytes()))}else if(e.name==="extKeyUsage"){e.value=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[]);var seq=e.value.value;for(var key in e){if(e[key]!==true)continue;if(key in oids)seq.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(oids[key]).getBytes()));else if(key.indexOf(".")!==
-1)seq.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(key).getBytes()))}}else if(e.name==="nsCertType"){var unused=0;var b2=0;if(e.client){b2|=128;unused=7}if(e.server){b2|=64;unused=6}if(e.email){b2|=32;unused=5}if(e.objsign){b2|=16;unused=4}if(e.reserved){b2|=8;unused=3}if(e.sslCA){b2|=4;unused=2}if(e.emailCA){b2|=2;unused=1}if(e.objCA){b2|=1;unused=0}var value=String.fromCharCode(unused);if(b2!==0)value+=String.fromCharCode(b2);e.value=asn1.create(asn1.Class.UNIVERSAL,
asn1.Type.BITSTRING,false,value)}else if(e.name==="subjectAltName"||e.name==="issuerAltName"){e.value=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[]);var altName;for(var n=0;n<e.altNames.length;++n){altName=e.altNames[n];var value=altName.value;if(altName.type===7&&altName.ip){value=forge.util.bytesFromIP(altName.ip);if(value===null){var error=new Error('Extension "ip" value is not a valid IPv4 or IPv6 address.');error.extension=e;throw error;}}else if(altName.type===8)if(altName.oid)value=
asn1.oidToDer(asn1.oidToDer(altName.oid));else value=asn1.oidToDer(value);e.value.value.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,altName.type,false,value))}}else if(e.name==="subjectKeyIdentifier"&&options.cert){var ski=options.cert.generateSubjectKeyIdentifier();e.subjectKeyIdentifier=ski.toHex();e.value=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,ski.getBytes())}else if(e.name==="authorityKeyIdentifier"&&options.cert){e.value=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,
true,[]);var seq=e.value.value;if(e.keyIdentifier){var keyIdentifier=e.keyIdentifier===true?options.cert.generateSubjectKeyIdentifier().getBytes():e.keyIdentifier;seq.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,false,keyIdentifier))}if(e.authorityCertIssuer){var authorityCertIssuer=[asn1.create(asn1.Class.CONTEXT_SPECIFIC,4,true,[_dnToAsn1(e.authorityCertIssuer===true?options.cert.issuer:e.authorityCertIssuer)])];seq.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,1,true,authorityCertIssuer))}if(e.serialNumber){var serialNumber=
forge.util.hexToBytes(e.serialNumber===true?options.cert.serialNumber:e.serialNumber);seq.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,2,false,serialNumber))}}if(typeof e.value==="undefined"){var error=new Error("Extension value not specified.");error.extension=e;throw error;}return e}function _signatureParametersToAsn1(oid,params){switch(oid){case oids["RSASSA-PSS"]:var parts=[];if(params.hash.algorithmOid!==undefined)parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[asn1.create(asn1.Class.UNIVERSAL,
asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(params.hash.algorithmOid).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.NULL,false,"")])]));if(params.mgf.algorithmOid!==undefined)parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,1,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(params.mgf.algorithmOid).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,
true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(params.mgf.hash.algorithmOid).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.NULL,false,"")])])]));if(params.saltLength!==undefined)parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,2,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,asn1.integerToDer(params.saltLength).getBytes())]));return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,parts);default:return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.NULL,
false,"")}}function _CRIAttributesToAsn1(csr){var rval=asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[]);if(csr.attributes.length===0)return rval;var attrs=csr.attributes;for(var i=0;i<attrs.length;++i){var attr=attrs[i];var value=attr.value;var valueTagClass=asn1.Type.UTF8;if("valueTagClass"in attr)valueTagClass=attr.valueTagClass;if(valueTagClass===asn1.Type.UTF8)value=forge.util.encodeUtf8(value);var valueConstructed=false;if("valueConstructed"in attr)valueConstructed=attr.valueConstructed;var seq=
asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(attr.type).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SET,true,[asn1.create(asn1.Class.UNIVERSAL,valueTagClass,valueConstructed,value)])]);rval.value.push(seq)}return rval}pki.getTBSCertificate=function(cert){var tbs=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,
false,asn1.integerToDer(cert.version).getBytes())]),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,forge.util.hexToBytes(cert.serialNumber)),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(cert.siginfo.algorithmOid).getBytes()),_signatureParametersToAsn1(cert.siginfo.algorithmOid,cert.siginfo.parameters)]),_dnToAsn1(cert.issuer),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,
asn1.Type.UTCTIME,false,asn1.dateToUtcTime(cert.validity.notBefore)),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.UTCTIME,false,asn1.dateToUtcTime(cert.validity.notAfter))]),_dnToAsn1(cert.subject),sofo.pki.publicKeyToAsn1(cert.publicKey)]);if(cert.issuer.uniqueId)tbs.value.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,1,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.BITSTRING,false,String.fromCharCode(0)+cert.issuer.uniqueId)]));if(cert.subject.uniqueId)tbs.value.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,
2,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.BITSTRING,false,String.fromCharCode(0)+cert.subject.uniqueId)]));if(cert.extensions.length>0)tbs.value.push(pki.certificateExtensionsToAsn1(cert.extensions));return tbs};pki.getCertificationRequestInfo=function(csr){var cri=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,asn1.integerToDer(csr.version).getBytes()),_dnToAsn1(csr.subject),sofo.pki.publicKeyToAsn1(csr.publicKey),_CRIAttributesToAsn1(csr)]);
return cri};pki.distinguishedNameToAsn1=function(dn){return _dnToAsn1(dn)};pki.certificateToAsn1=function(cert){var tbsCertificate=cert.tbsCertificate||pki.getTBSCertificate(cert);return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[tbsCertificate,asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(cert.signatureOid).getBytes()),_signatureParametersToAsn1(cert.signatureOid,cert.signatureParameters)]),asn1.create(asn1.Class.UNIVERSAL,
asn1.Type.BITSTRING,false,String.fromCharCode(0)+cert.signature)])};pki.certificateExtensionsToAsn1=function(exts){var rval=asn1.create(asn1.Class.CONTEXT_SPECIFIC,3,true,[]);var seq=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[]);rval.value.push(seq);for(var i=0;i<exts.length;++i)seq.value.push(pki.certificateExtensionToAsn1(exts[i]));return rval};pki.certificateExtensionToAsn1=function(ext){var extseq=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[]);extseq.value.push(asn1.create(asn1.Class.UNIVERSAL,
asn1.Type.OID,false,asn1.oidToDer(ext.id).getBytes()));if(ext.critical)extseq.value.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.BOOLEAN,false,String.fromCharCode(255)));var value=ext.value;if(typeof ext.value!=="string")value=asn1.toDer(value).getBytes();extseq.value.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,value));return extseq};pki.certificationRequestToAsn1=function(csr){var cri=csr.certificationRequestInfo||pki.getCertificationRequestInfo(csr);return asn1.create(asn1.Class.UNIVERSAL,
asn1.Type.SEQUENCE,true,[cri,asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(csr.signatureOid).getBytes()),_signatureParametersToAsn1(csr.signatureOid,csr.signatureParameters)]),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.BITSTRING,false,String.fromCharCode(0)+csr.signature)])};pki.createCaStore=function(certs){var caStore={certs:{}};caStore.getIssuer=function(cert){var rval=getBySubject(cert.issuer);return rval};caStore.addCertificate=
function(cert){if(typeof cert==="string")cert=forge.pki.certificateFromPem(cert);if(!cert.subject.hash){var md=forge.md.sha1.create();cert.subject.attributes=pki.RDNAttributesAsArray(_dnToAsn1(cert.subject),md);cert.subject.hash=md.digest().toHex()}if(cert.subject.hash in caStore.certs){var tmp=caStore.certs[cert.subject.hash];if(!forge.util.isArray(tmp))tmp=[tmp];tmp.push(cert)}else caStore.certs[cert.subject.hash]=cert};caStore.hasCertificate=function(cert){var match=getBySubject(cert.subject);
if(!match)return false;if(!forge.util.isArray(match))match=[match];var der1=asn1.toDer(pki.certificateToAsn1(cert)).getBytes();for(var i=0;i<match.length;++i){var der2=asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();if(der1===der2)return true}return false};function getBySubject(subject){if(!subject.hash){var md=forge.md.sha1.create();subject.attributes=pki.RDNAttributesAsArray(_dnToAsn1(subject),md);subject.hash=md.digest().toHex()}return caStore.certs[subject.hash]||null}if(certs)for(var i=
0;i<certs.length;++i){var cert=certs[i];caStore.addCertificate(cert)}return caStore};pki.certificateError={bad_certificate:"forge.pki.BadCertificate",unsupported_certificate:"forge.pki.UnsupportedCertificate",certificate_revoked:"forge.pki.CertificateRevoked",certificate_expired:"forge.pki.CertificateExpired",certificate_unknown:"forge.pki.CertificateUnknown",unknown_ca:"forge.pki.UnknownCertificateAuthority"};pki.verifyCertificateChain=function(caStore,chain,verify){chain=chain.slice(0);var certs=
chain.slice(0);var now=new Date;var first=true;var error=null;var depth=0;do{var cert=chain.shift();var parent=null;var selfSigned=false;if(now<cert.validity.notBefore||now>cert.validity.notAfter)error={message:"Certificate is not valid yet or has expired.",error:pki.certificateError.certificate_expired,notBefore:cert.validity.notBefore,notAfter:cert.validity.notAfter,now:now};if(error===null){parent=chain[0]||caStore.getIssuer(cert);if(parent===null)if(cert.isIssuer(cert)){selfSigned=true;parent=
cert}if(parent){var parents=parent;if(!forge.util.isArray(parents))parents=[parents];var verified=false;while(!verified&&parents.length>0){parent=parents.shift();try{verified=parent.verify(cert)}catch(ex){}}if(!verified)error={message:"Certificate signature is invalid.",error:pki.certificateError.bad_certificate}}if(error===null&&(!parent||selfSigned)&&!caStore.hasCertificate(cert))error={message:"Certificate is not trusted.",error:pki.certificateError.unknown_ca}}if(error===null&&parent&&!cert.isIssuer(parent))error=
{message:"Certificate issuer is invalid.",error:pki.certificateError.bad_certificate};if(error===null){var se={keyUsage:true,basicConstraints:true};for(var i=0;error===null&&i<cert.extensions.length;++i){var ext=cert.extensions[i];if(ext.critical&&!(ext.name in se))error={message:"Certificate has an unsupported critical extension.",error:pki.certificateError.unsupported_certificate}}}if(error===null&&(!first||chain.length===0&&(!parent||selfSigned))){var bcExt=cert.getExtension("basicConstraints");
var keyUsageExt=cert.getExtension("keyUsage");if(keyUsageExt!==null)if(!keyUsageExt.keyCertSign||bcExt===null)error={message:"Certificate keyUsage or basicConstraints conflict "+"or indicate that the certificate is not a CA. "+"If the certificate is the only one in the chain or "+"isn't the first then the certificate must be a "+"valid CA.",error:pki.certificateError.bad_certificate};if(error===null&&bcExt!==null&&!bcExt.cA)error={message:"Certificate basicConstraints indicates the certificate "+
"is not a CA.",error:pki.certificateError.bad_certificate};if(error===null&&keyUsageExt!==null&&"pathLenConstraint"in bcExt){var pathLen=depth-1;if(pathLen>bcExt.pathLenConstraint)error={message:"Certificate basicConstraints pathLenConstraint violated.",error:pki.certificateError.bad_certificate}}}var vfd=error===null?true:error.error;var ret=verify?verify(vfd,depth,certs):vfd;if(ret===true)error=null;else{if(vfd===true)error={message:"The application rejected the certificate.",error:pki.certificateError.bad_certificate};
if(ret||ret===0)if(typeof ret==="object"&&!forge.util.isArray(ret)){if(ret.message)error.message=ret.message;if(ret.error)error.error=ret.error}else if(typeof ret==="string")error.error=ret;throw error;}first=false;++depth}while(chain.length>0);return true}}var name="x509";if(typeof define!=="function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,module)}}else{if(typeof forge==="undefined")forge={};return initModule(forge)}var deps;var defineFunc=
function(require,module){module.exports=function(forge){var mods=deps.map(function(dep){return require(dep)}).concat(initModule);forge=forge||{};forge.defined=forge.defined||{};if(forge.defined[name])return forge[name];forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);return forge.pki}};var tmpDefine=define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):ids.slice(2);if(nodeJS){delete define;return tmpDefine.apply(null,Array.prototype.slice.call(arguments,
0))}define=tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,0))};define(["require","module","./aes","./asn1","./des","./md","./mgf","./oids","./pem","./pss","./rsa","./kcdsa","./util"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,0))})})();(function(){function initModule(forge){var asn1=forge.asn1;var p7=forge.pkcs7=forge.pkcs7||{};p7.messageFromPem=function(pem){var msg=forge.pem.decode(pem)[0];if(msg.type!=="PKCS7"){var error=new Error("Could not convert PKCS#7 message from PEM; PEM "+'header type is not "PKCS#7".');error.headerType=msg.type;throw error;}if(msg.procType&&msg.procType.type==="ENCRYPTED")throw new Error("Could not convert PKCS#7 message from PEM; PEM is encrypted.");var obj=asn1.fromDer(msg.body);return p7.messageFromAsn1(obj)};
p7.messageToPem=function(msg,maxline){var pemObj={type:"PKCS7",body:asn1.toDer(msg.toAsn1()).getBytes()};return forge.pem.encode(pemObj,{maxline:maxline})};p7.messageFromAsn1=function(obj){var capture={};var errors=[];if(!asn1.validate(obj,p7.asn1.contentInfoValidator,capture,errors)){var error=new Error("Cannot read PKCS#7 message. "+"ASN.1 object is not an PKCS#7 ContentInfo.");error.errors=errors;throw error;}var contentType=asn1.derToOid(capture.contentType);var msg;switch(contentType){case forge.pki.oids.envelopedData:msg=
p7.createEnvelopedData();break;case forge.pki.oids.encryptedData:msg=p7.createEncryptedData();break;case forge.pki.oids.signedData:msg=p7.createSignedData();break;default:throw new Error("Cannot read PKCS#7 message. ContentType with OID "+contentType+" is not (yet) supported.");}msg.fromAsn1(capture.content.value[0]);return msg};p7.createSignedData=function(){var msg=null;msg={type:forge.pki.oids.signedData,version:1,certificates:[],crls:[],signers:[],digestAlgorithmIdentifiers:[],contentInfo:null,
signerInfos:[],fromAsn1:function(obj){_fromAsn1(msg,obj,p7.asn1.signedDataValidator);msg.certificates=[];msg.crls=[];msg.digestAlgorithmIdentifiers=[];msg.contentInfo=null;msg.signerInfos=[];var certs=msg.rawCapture.certificates.value;for(var i=0;i<certs.length;++i)msg.certificates.push(forge.pki.certificateFromAsn1(certs[i]))},toAsn1:function(){if(!msg.contentInfo)msg.sign();var certs=[];for(var i=0;i<msg.certificates.length;++i)certs.push(forge.pki.certificateToAsn1(msg.certificates[i]));var crls=
[];var signedData=asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,asn1.integerToDer(msg.version).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SET,true,msg.digestAlgorithmIdentifiers),msg.contentInfo])]);if(certs.length>0)signedData.value[0].value.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,certs));if(crls.length>0)signedData.value[0].value.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,
1,true,crls));signedData.value[0].value.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SET,true,msg.signerInfos));return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(msg.type).getBytes()),signedData])},addSigner:function(signer){var issuer=signer.issuer;var serialNumber=signer.serialNumber;if(signer.certificate){var cert=signer.certificate;if(typeof cert==="string")cert=forge.pki.certificateFromPem(cert);issuer=cert.issuer.attributes;
serialNumber=cert.serialNumber}var key=signer.key;if(!key)throw new Error("Could not add PKCS#7 signer; no private key specified.");if(typeof key==="string")key=forge.pki.privateKeyFromPem(key);var digestAlgorithm=signer.digestAlgorithm||forge.pki.oids.sha1;switch(digestAlgorithm){case forge.pki.oids.sha1:case forge.pki.oids.sha256:case forge.pki.oids.sha384:case forge.pki.oids.sha512:case forge.pki.oids.md5:break;default:throw new Error("Could not add PKCS#7 signer; unknown message digest algorithm: "+
digestAlgorithm);}var authenticatedAttributes=signer.authenticatedAttributes||[];if(authenticatedAttributes.length>0){var contentType=false;var messageDigest=false;for(var i=0;i<authenticatedAttributes.length;++i){var attr=authenticatedAttributes[i];if(!contentType&&attr.type===forge.pki.oids.contentType){contentType=true;if(messageDigest)break;continue}if(!messageDigest&&attr.type===forge.pki.oids.messageDigest){messageDigest=true;if(contentType)break;continue}}if(!contentType||!messageDigest)throw new Error("Invalid signer.authenticatedAttributes. If "+
"signer.authenticatedAttributes is specified, then it must "+"contain at least two attributes, PKCS #9 content-type and "+"PKCS #9 message-digest.");}msg.signers.push({key:key,version:1,issuer:issuer,serialNumber:serialNumber,digestAlgorithm:digestAlgorithm,signatureAlgorithm:forge.pki.oids.rsaEncryption,signature:null,authenticatedAttributes:authenticatedAttributes,unauthenticatedAttributes:[]})},sign:function(){if(typeof msg.content!=="object"||msg.contentInfo===null){msg.contentInfo=asn1.create(asn1.Class.UNIVERSAL,
asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(forge.pki.oids.data).getBytes())]);if("content"in msg){var content;if(msg.content instanceof forge.util.ByteBuffer)content=msg.content.bytes();else if(typeof msg.content==="string")content=forge.util.encodeUtf8(msg.content);msg.contentInfo.value.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,content)]))}}if(msg.signers.length===0)return;var mds=
addDigestAlgorithmIds();addSignerInfos(mds)},verify:function(){throw new Error("PKCS#7 signature verification not yet implemented.");},addCertificate:function(cert){if(typeof cert==="string")cert=forge.pki.certificateFromPem(cert);msg.certificates.push(cert)},addCertificateRevokationList:function(crl){throw new Error("PKCS#7 CRL support not yet implemented.");}};return msg;function addDigestAlgorithmIds(){var mds={};for(var i=0;i<msg.signers.length;++i){var signer=msg.signers[i];var oid=signer.digestAlgorithm;
if(!(oid in mds))mds[oid]=forge.md[forge.pki.oids[oid]].create();if(signer.authenticatedAttributes.length===0)signer.md=mds[oid];else signer.md=forge.md[forge.pki.oids[oid]].create()}msg.digestAlgorithmIdentifiers=[];for(var oid in mds)msg.digestAlgorithmIdentifiers.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(oid).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.NULL,false,"")]));return mds}function addSignerInfos(mds){if(msg.contentInfo.value.length<
2)throw new Error("Could not sign PKCS#7 message; there is no content to sign.");var contentType=asn1.derToOid(msg.contentInfo.value[0].value);var content=msg.contentInfo.value[1];content=content.value[0];var bytes=asn1.toDer(content);bytes.getByte();asn1.getBerValueLength(bytes);bytes=bytes.getBytes();for(var oid in mds)mds[oid].start().update(bytes);var signingTime=new Date;for(var i=0;i<msg.signers.length;++i){var signer=msg.signers[i];if(signer.authenticatedAttributes.length===0){if(contentType!==
forge.pki.oids.data)throw new Error("Invalid signer; authenticatedAttributes must be present "+"when the ContentInfo content type is not PKCS#7 Data.");}else{signer.authenticatedAttributesAsn1=asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[]);var attrsAsn1=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SET,true,[]);for(var ai=0;ai<signer.authenticatedAttributes.length;++ai){var attr=signer.authenticatedAttributes[ai];if(attr.type===forge.pki.oids.messageDigest)attr.value=mds[signer.digestAlgorithm].digest();
else if(attr.type===forge.pki.oids.signingTime)if(!attr.value)attr.value=signingTime;attrsAsn1.value.push(_attributeToAsn1(attr));signer.authenticatedAttributesAsn1.value.push(_attributeToAsn1(attr))}bytes=asn1.toDer(attrsAsn1).getBytes();signer.md.start().update(bytes)}signer.signature=signer.key.sign(signer.md,"RSASSA-PKCS1-V1_5")}msg.signerInfos=_signersToAsn1(msg.signers)}};p7.createEncryptedData=function(){var msg=null;msg={type:forge.pki.oids.encryptedData,version:0,encryptedContent:{algorithm:forge.pki.oids["aes256-CBC"]},
fromAsn1:function(obj){_fromAsn1(msg,obj,p7.asn1.encryptedDataValidator)},decrypt:function(key){if(key!==undefined)msg.encryptedContent.key=key;_decryptContent(msg)}};return msg};p7.createEnvelopedData=function(){var msg=null;msg={type:forge.pki.oids.envelopedData,version:0,recipients:[],encryptedContent:{algorithm:forge.pki.oids["aes256-CBC"]},fromAsn1:function(obj){var capture=_fromAsn1(msg,obj,p7.asn1.envelopedDataValidator);msg.recipients=_recipientsFromAsn1(capture.recipientInfos.value)},toAsn1:function(){return asn1.create(asn1.Class.UNIVERSAL,
asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(msg.type).getBytes()),asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,asn1.integerToDer(msg.version).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SET,true,_recipientsToAsn1(msg.recipients)),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,_encryptedContentToAsn1(msg.encryptedContent))])])])},
findRecipient:function(cert){var sAttr=cert.issuer.attributes;for(var i=0;i<msg.recipients.length;++i){var r=msg.recipients[i];var rAttr=r.issuer;if(r.serialNumber!==cert.serialNumber)continue;if(rAttr.length!==sAttr.length)continue;var match=true;for(var j=0;j<sAttr.length;++j)if(rAttr[j].type!==sAttr[j].type||rAttr[j].value!==sAttr[j].value){match=false;break}if(match)return r}return null},decrypt:function(recipient,privKey){if(msg.encryptedContent.key===undefined&&recipient!==undefined&&privKey!==
undefined)switch(recipient.encryptedContent.algorithm){case forge.pki.oids.rsaEncryption:case forge.pki.oids.desCBC:var key=privKey.decrypt(recipient.encryptedContent.content);msg.encryptedContent.key=forge.util.createBuffer(key);break;default:throw new Error("Unsupported asymmetric cipher, "+"OID "+recipient.encryptedContent.algorithm);}_decryptContent(msg)},addRecipient:function(cert){msg.recipients.push({version:0,issuer:cert.issuer.attributes,serialNumber:cert.serialNumber,encryptedContent:{algorithm:forge.pki.oids.rsaEncryption,
key:cert.publicKey}})},encrypt:function(key,cipher){if(msg.encryptedContent.content===undefined){cipher=cipher||msg.encryptedContent.algorithm;key=key||msg.encryptedContent.key;var keyLen,ivLen,ciphFn;switch(cipher){case forge.pki.oids["aes128-CBC"]:keyLen=16;ivLen=16;ciphFn=forge.aes.createEncryptionCipher;break;case forge.pki.oids["aes192-CBC"]:keyLen=24;ivLen=16;ciphFn=forge.aes.createEncryptionCipher;break;case forge.pki.oids["aes256-CBC"]:keyLen=32;ivLen=16;ciphFn=forge.aes.createEncryptionCipher;
break;case forge.pki.oids["des-EDE3-CBC"]:keyLen=24;ivLen=8;ciphFn=forge.des.createEncryptionCipher;break;default:throw new Error("Unsupported symmetric cipher, OID "+cipher);}if(key===undefined)key=forge.util.createBuffer(forge.random.getBytes(keyLen));else if(key.length()!=keyLen)throw new Error("Symmetric key has wrong length; "+"got "+key.length()+" bytes, expected "+keyLen+".");msg.encryptedContent.algorithm=cipher;msg.encryptedContent.key=key;msg.encryptedContent.parameter=forge.util.createBuffer(forge.random.getBytes(ivLen));
var ciph=ciphFn(key);ciph.start(msg.encryptedContent.parameter.copy());ciph.update(msg.content);if(!ciph.finish())throw new Error("Symmetric encryption failed.");msg.encryptedContent.content=ciph.output}for(var i=0;i<msg.recipients.length;++i){var recipient=msg.recipients[i];if(recipient.encryptedContent.content!==undefined)continue;switch(recipient.encryptedContent.algorithm){case forge.pki.oids.rsaEncryption:recipient.encryptedContent.content=recipient.encryptedContent.key.encrypt(msg.encryptedContent.key.data);
break;default:throw new Error("Unsupported asymmetric cipher, OID "+recipient.encryptedContent.algorithm);}}}};return msg};function _recipientFromAsn1(obj){var capture={};var errors=[];if(!asn1.validate(obj,p7.asn1.recipientInfoValidator,capture,errors)){var error=new Error("Cannot read PKCS#7 RecipientInfo. "+"ASN.1 object is not an PKCS#7 RecipientInfo.");error.errors=errors;throw error;}return{version:capture.version.charCodeAt(0),issuer:forge.pki.RDNAttributesAsArray(capture.issuer),serialNumber:forge.util.createBuffer(capture.serial).toHex(),
encryptedContent:{algorithm:asn1.derToOid(capture.encAlgorithm),parameter:capture.encParameter.value,content:capture.encKey}}}function _recipientToAsn1(obj){return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,asn1.integerToDer(obj.version).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[forge.pki.distinguishedNameToAsn1({attributes:obj.issuer}),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,forge.util.hexToBytes(obj.serialNumber))]),
asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(obj.encryptedContent.algorithm).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.NULL,false,"")]),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,obj.encryptedContent.content)])}function _recipientsFromAsn1(infos){var ret=[];for(var i=0;i<infos.length;++i)ret.push(_recipientFromAsn1(infos[i]));return ret}function _recipientsToAsn1(recipients){var ret=[];for(var i=
0;i<recipients.length;++i)ret.push(_recipientToAsn1(recipients[i]));return ret}function _signerFromAsn1(obj){var capture={};var errors=[];if(!asn1.validate(obj,p7.asn1.signerInfoValidator,capture,errors)){var error=new Error("Cannot read PKCS#7 SignerInfo. "+"ASN.1 object is not an PKCS#7 SignerInfo.");error.errors=errors;throw error;}var rval={version:capture.version.charCodeAt(0),issuer:forge.pki.RDNAttributesAsArray(capture.issuer),serialNumber:forge.util.createBuffer(capture.serial).toHex(),digestAlgorithm:asn1.derToOid(capture.digestAlgorithm),
signatureAlgorithm:asn1.derToOid(capture.signatureAlgorithm),signature:capture.signature,authenticatedAttributes:[],unauthenticatedAttributes:[]};var authenticatedAttributes=capture.authenticatedAttributes||[];var unauthenticatedAttributes=capture.unauthenticatedAttributes||[];return rval}function _signerToAsn1(obj){var rval=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,asn1.integerToDer(obj.version).getBytes()),asn1.create(asn1.Class.UNIVERSAL,
asn1.Type.SEQUENCE,true,[forge.pki.distinguishedNameToAsn1({attributes:obj.issuer}),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,forge.util.hexToBytes(obj.serialNumber))]),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(obj.digestAlgorithm).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.NULL,false,"")])]);if(obj.authenticatedAttributesAsn1)rval.value.push(obj.authenticatedAttributesAsn1);rval.value.push(asn1.create(asn1.Class.UNIVERSAL,
asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(obj.signatureAlgorithm).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.NULL,false,"")]));rval.value.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,obj.signature));if(obj.unauthenticatedAttributes.length>0){var attrsAsn1=asn1.create(asn1.Class.CONTEXT_SPECIFIC,1,true,[]);for(var i=0;i<obj.unauthenticatedAttributes.length;++i){var attr=obj.unauthenticatedAttributes[i];attrsAsn1.values.push(_attributeToAsn1(attr))}rval.value.push(attrsAsn1)}return rval}
function _signersFromAsn1(signerInfoAsn1s){var ret=[];for(var i=0;i<signerInfoAsn1s.length;++i)ret.push(_signerFromAsn1(signerInfoAsn1s[i]));return ret}function _signersToAsn1(signers){var ret=[];for(var i=0;i<signers.length;++i)ret.push(_signerToAsn1(signers[i]));return ret}function _attributeToAsn1(attr){var value;if(attr.type===forge.pki.oids.contentType)value=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(attr.value).getBytes());else if(attr.type===forge.pki.oids.messageDigest)value=
asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,attr.value.bytes());else if(attr.type===forge.pki.oids.signingTime){var jan_1_1950=new Date("Jan 1, 1950 00:00:00Z");var jan_1_2050=new Date("Jan 1, 2050 00:00:00Z");var date=attr.value;if(typeof date==="string"){var timestamp=Date.parse(date);if(!isNaN(timestamp))date=new Date(timestamp);else if(date.length===13)date=asn1.utcTimeToDate(date);else date=asn1.generalizedTimeToDate(date)}if(date>=jan_1_1950&&date<jan_1_2050)value=asn1.create(asn1.Class.UNIVERSAL,
asn1.Type.UTCTIME,false,asn1.dateToUtcTime(date));else value=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.GENERALIZEDTIME,false,asn1.dateToGeneralizedTime(date))}return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(attr.type).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SET,true,[value])])}function _encryptedContentToAsn1(ec){return[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(forge.pki.oids.data).getBytes()),
asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(ec.algorithm).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,ec.parameter.getBytes())]),asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,ec.content.getBytes())])]}function _fromAsn1(msg,obj,validator){var capture={};var errors=[];if(!asn1.validate(obj,validator,capture,errors)){var error=new Error("Cannot read PKCS#7 message. "+
"ASN.1 object is not a supported PKCS#7 message.");error.errors=error;throw error;}var contentType=asn1.derToOid(capture.contentType);if(contentType!==forge.pki.oids.data)throw new Error("Unsupported PKCS#7 message. "+"Only wrapped ContentType Data supported.");if(capture.encryptedContent){var content="";if(forge.util.isArray(capture.encryptedContent))for(var i=0;i<capture.encryptedContent.length;++i){if(capture.encryptedContent[i].type!==asn1.Type.OCTETSTRING)throw new Error("Malformed PKCS#7 message, expecting encrypted "+
"content constructed of only OCTET STRING objects.");content+=capture.encryptedContent[i].value}else content=capture.encryptedContent;msg.encryptedContent={algorithm:asn1.derToOid(capture.encAlgorithm),parameter:forge.util.createBuffer(capture.encParameter.value),content:forge.util.createBuffer(content)}}if(capture.content){var content="";if(forge.util.isArray(capture.content))for(var i=0;i<capture.content.length;++i){if(capture.content[i].type!==asn1.Type.OCTETSTRING)throw new Error("Malformed PKCS#7 message, expecting "+
"content constructed of only OCTET STRING objects.");content+=capture.content[i].value}else content=capture.content;msg.content=forge.util.createBuffer(content)}msg.version=capture.version.charCodeAt(0);msg.rawCapture=capture;return capture}function _decryptContent(msg){if(msg.encryptedContent.key===undefined)throw new Error("Symmetric key not available.");if(msg.content===undefined){var ciph;switch(msg.encryptedContent.algorithm){case forge.pki.oids["aes128-CBC"]:case forge.pki.oids["aes192-CBC"]:case forge.pki.oids["aes256-CBC"]:ciph=
forge.aes.createDecryptionCipher(msg.encryptedContent.key);break;case forge.pki.oids["desCBC"]:case forge.pki.oids["des-EDE3-CBC"]:ciph=forge.des.createDecryptionCipher(msg.encryptedContent.key);break;default:throw new Error("Unsupported symmetric cipher, OID "+msg.encryptedContent.algorithm);}ciph.start(msg.encryptedContent.parameter);ciph.update(msg.encryptedContent.content);if(!ciph.finish())throw new Error("Symmetric decryption failed.");msg.content=ciph.output}}}var name="pkcs7";if(typeof define!==
"function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,module)}}else{if(typeof forge==="undefined")forge={};return initModule(forge)}var deps;var defineFunc=function(require,module){module.exports=function(forge){var mods=deps.map(function(dep){return require(dep)}).concat(initModule);forge=forge||{};forge.defined=forge.defined||{};if(forge.defined[name])return forge[name];forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);
return forge[name]}};var tmpDefine=define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):ids.slice(2);if(nodeJS){delete define;return tmpDefine.apply(null,Array.prototype.slice.call(arguments,0))}define=tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,0))};define(["require","module","./aes","./asn1","./des","./oids","./pem","./pkcs7asn1","./random","./util","./x509"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,0))})})();(function(){function initModule(forge){var asn1=forge.asn1;var p7v=forge.pkcs7asn1=forge.pkcs7asn1||{};forge.pkcs7=forge.pkcs7||{};forge.pkcs7.asn1=p7v;var contentInfoValidator={name:"ContentInfo",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"ContentInfo.ContentType",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,capture:"contentType"},{name:"ContentInfo.content",tagClass:asn1.Class.CONTEXT_SPECIFIC,type:0,constructed:true,optional:true,captureAsn1:"content"}]};
p7v.contentInfoValidator=contentInfoValidator;var encryptedContentInfoValidator={name:"EncryptedContentInfo",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"EncryptedContentInfo.contentType",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,capture:"contentType"},{name:"EncryptedContentInfo.contentEncryptionAlgorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"EncryptedContentInfo.contentEncryptionAlgorithm.algorithm",
tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,capture:"encAlgorithm"},{name:"EncryptedContentInfo.contentEncryptionAlgorithm.parameter",tagClass:asn1.Class.UNIVERSAL,captureAsn1:"encParameter"}]},{name:"EncryptedContentInfo.encryptedContent",tagClass:asn1.Class.CONTEXT_SPECIFIC,type:0,capture:"encryptedContent",captureAsn1:"encryptedContentAsn1"}]};p7v.envelopedDataValidator={name:"EnvelopedData",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"EnvelopedData.Version",
tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"version"},{name:"EnvelopedData.RecipientInfos",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SET,constructed:true,captureAsn1:"recipientInfos"}].concat(encryptedContentInfoValidator)};p7v.encryptedDataValidator={name:"EncryptedData",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"EncryptedData.Version",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"version"}].concat(encryptedContentInfoValidator)};
var signerValidator={name:"SignerInfo",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"SignerInfo.version",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false},{name:"SignerInfo.issuerAndSerialNumber",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"SignerInfo.issuerAndSerialNumber.issuer",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,captureAsn1:"issuer"},{name:"SignerInfo.issuerAndSerialNumber.serialNumber",
tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"serial"}]},{name:"SignerInfo.digestAlgorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"SignerInfo.digestAlgorithm.algorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,capture:"digestAlgorithm"},{name:"SignerInfo.digestAlgorithm.parameter",tagClass:asn1.Class.UNIVERSAL,constructed:false,captureAsn1:"digestParameter",optional:true}]},{name:"SignerInfo.authenticatedAttributes",
tagClass:asn1.Class.CONTEXT_SPECIFIC,type:0,constructed:true,optional:true,capture:"authenticatedAttributes"},{name:"SignerInfo.digestEncryptionAlgorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,capture:"signatureAlgorithm"},{name:"SignerInfo.encryptedDigest",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OCTETSTRING,constructed:false,capture:"signature"},{name:"SignerInfo.unauthenticatedAttributes",tagClass:asn1.Class.CONTEXT_SPECIFIC,type:1,constructed:true,optional:true,
capture:"unauthenticatedAttributes"}]};p7v.signedDataValidator={name:"SignedData",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"SignedData.Version",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"version"},{name:"SignedData.DigestAlgorithms",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SET,constructed:true,captureAsn1:"digestAlgorithms"},contentInfoValidator,{name:"SignedData.Certificates",tagClass:asn1.Class.CONTEXT_SPECIFIC,
type:0,optional:true,captureAsn1:"certificates"},{name:"SignedData.CertificateRevocationLists",tagClass:asn1.Class.CONTEXT_SPECIFIC,type:1,optional:true,captureAsn1:"crls"},{name:"SignedData.SignerInfos",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SET,capture:"signerInfos",optional:true,value:[signerValidator]}]};p7v.recipientInfoValidator={name:"RecipientInfo",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"RecipientInfo.version",tagClass:asn1.Class.UNIVERSAL,
type:asn1.Type.INTEGER,constructed:false,capture:"version"},{name:"RecipientInfo.issuerAndSerial",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"RecipientInfo.issuerAndSerial.issuer",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,captureAsn1:"issuer"},{name:"RecipientInfo.issuerAndSerial.serialNumber",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"serial"}]},{name:"RecipientInfo.keyEncryptionAlgorithm",
tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"RecipientInfo.keyEncryptionAlgorithm.algorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,capture:"encAlgorithm"},{name:"RecipientInfo.keyEncryptionAlgorithm.parameter",tagClass:asn1.Class.UNIVERSAL,constructed:false,captureAsn1:"encParameter"}]},{name:"RecipientInfo.encryptedKey",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OCTETSTRING,constructed:false,capture:"encKey"}]}}var name="pkcs7asn1";
if(typeof define!=="function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,module)}}else{if(typeof forge==="undefined")forge={};return initModule(forge)}var deps;var defineFunc=function(require,module){module.exports=function(forge){var mods=deps.map(function(dep){return require(dep)}).concat(initModule);forge=forge||{};forge.defined=forge.defined||{};if(forge.defined[name])return forge[name];forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);
return forge[name]}};var tmpDefine=define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):ids.slice(2);if(nodeJS){delete define;return tmpDefine.apply(null,Array.prototype.slice.call(arguments,0))}define=tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,0))};define(["require","module","./asn1","./util"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,0))})})();(function(){function initModule(forge){var asn1=forge.asn1;var pki=forge.pki;var p12=forge.pkcs12=forge.pkcs12||{};var contentInfoValidator={name:"ContentInfo",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"ContentInfo.contentType",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,capture:"contentType"},{name:"ContentInfo.content",tagClass:asn1.Class.CONTEXT_SPECIFIC,constructed:true,captureAsn1:"content"}]};var pfxValidator={name:"PFX",tagClass:asn1.Class.UNIVERSAL,
type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"PFX.version",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"version"},contentInfoValidator,{name:"PFX.macData",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,optional:true,captureAsn1:"mac",value:[{name:"PFX.macData.mac",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"PFX.macData.mac.digestAlgorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,
constructed:true,value:[{name:"PFX.macData.mac.digestAlgorithm.algorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,capture:"macAlgorithm"},{name:"PFX.macData.mac.digestAlgorithm.parameters",tagClass:asn1.Class.UNIVERSAL,captureAsn1:"macAlgorithmParameters"}]},{name:"PFX.macData.mac.digest",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OCTETSTRING,constructed:false,capture:"macDigest"}]},{name:"PFX.macData.macSalt",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OCTETSTRING,constructed:false,
capture:"macSalt"},{name:"PFX.macData.iterations",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,optional:true,capture:"macIterations"}]}]};var safeBagValidator={name:"SafeBag",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"SafeBag.bagId",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,capture:"bagId"},{name:"SafeBag.bagValue",tagClass:asn1.Class.CONTEXT_SPECIFIC,constructed:true,captureAsn1:"bagValue"},{name:"SafeBag.bagAttributes",
tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SET,constructed:true,optional:true,capture:"bagAttributes"}]};var attributeValidator={name:"Attribute",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"Attribute.attrId",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,capture:"oid"},{name:"Attribute.attrValues",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SET,constructed:true,capture:"values"}]};var certBagValidator={name:"CertBag",tagClass:asn1.Class.UNIVERSAL,
type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"CertBag.certId",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,capture:"certId"},{name:"CertBag.certValue",tagClass:asn1.Class.CONTEXT_SPECIFIC,constructed:true,value:[{name:"CertBag.certValue[0]",tagClass:asn1.Class.UNIVERSAL,type:asn1.Class.OCTETSTRING,constructed:false,capture:"cert"}]}]};function _getBagsByAttribute(safeContents,attrName,attrValue,bagType){var result=[];for(var i=0;i<safeContents.length;i++)for(var j=0;j<
safeContents[i].safeBags.length;j++){var bag=safeContents[i].safeBags[j];if(bagType!==undefined&&bag.type!==bagType)continue;if(attrName===null){result.push(bag);continue}if(bag.attributes[attrName]!==undefined&&bag.attributes[attrName].indexOf(attrValue)>=0)result.push(bag)}return result}p12.pkcs12FromAsn1=function(obj,strict,password){if(typeof strict==="string"){password=strict;strict=true}else if(strict===undefined)strict=true;var capture={};var errors=[];if(!asn1.validate(obj,pfxValidator,capture,
errors)){var error=new Error("Cannot read PKCS#12 PFX. "+"ASN.1 object is not an PKCS#12 PFX.");error.errors=error;throw error;}var pfx={version:capture.version.charCodeAt(0),safeContents:[],getBags:function(filter){var rval={};var localKeyId;if("localKeyId"in filter)localKeyId=filter.localKeyId;else if("localKeyIdHex"in filter)localKeyId=forge.util.hexToBytes(filter.localKeyIdHex);if(localKeyId===undefined&&!("friendlyName"in filter)&&"bagType"in filter)rval[filter.bagType]=_getBagsByAttribute(pfx.safeContents,
null,null,filter.bagType);if(localKeyId!==undefined)rval.localKeyId=_getBagsByAttribute(pfx.safeContents,"localKeyId",localKeyId,filter.bagType);if("friendlyName"in filter)rval.friendlyName=_getBagsByAttribute(pfx.safeContents,"friendlyName",filter.friendlyName,filter.bagType);return rval},getBagsByFriendlyName:function(friendlyName,bagType){return _getBagsByAttribute(pfx.safeContents,"friendlyName",friendlyName,bagType)},getBagsByLocalKeyId:function(localKeyId,bagType){return _getBagsByAttribute(pfx.safeContents,
"localKeyId",localKeyId,bagType)}};if(capture.version.charCodeAt(0)!==3){var error=new Error("PKCS#12 PFX of version other than 3 not supported.");error.version=capture.version.charCodeAt(0);throw error;}if(asn1.derToOid(capture.contentType)!==pki.oids.data){var error=new Error("Only PKCS#12 PFX in password integrity mode supported.");error.oid=asn1.derToOid(capture.contentType);throw error;}var data=capture.content.value[0];if(data.tagClass!==asn1.Class.UNIVERSAL||data.type!==asn1.Type.OCTETSTRING)throw new Error("PKCS#12 authSafe content data is not an OCTET STRING.");
data=_decodePkcs7Data(data);if(capture.mac){var md=null;var macKeyBytes=0;var macAlgorithm=asn1.derToOid(capture.macAlgorithm);switch(macAlgorithm){case pki.oids.sha1:md=forge.md.sha1.create();macKeyBytes=20;break;case pki.oids.sha256:md=forge.md.sha256.create();macKeyBytes=32;break;case pki.oids.sha384:md=forge.md.sha384.create();macKeyBytes=48;break;case pki.oids.sha512:md=forge.md.sha512.create();macKeyBytes=64;break;case pki.oids.md5:md=forge.md.md5.create();macKeyBytes=16;break}if(md===null)throw new Error("PKCS#12 uses unsupported MAC algorithm: "+
macAlgorithm);var macSalt=new forge.util.ByteBuffer(capture.macSalt);var macIterations="macIterations"in capture?parseInt(forge.util.bytesToHex(capture.macIterations),16):1;var macKey=p12.generateKey(password,macSalt,3,macIterations,macKeyBytes,md);var mac=forge.hmac.create();mac.start(md,macKey);mac.update(data.value);var macValue=mac.getMac();if(macValue.getBytes()!==capture.macDigest)throw new Error("PKCS#12 MAC could not be verified. Invalid password?");}_decodeAuthenticatedSafe(pfx,data.value,
strict,password);return pfx};function _decodePkcs7Data(data){if(data.composed||data.constructed){var value=forge.util.createBuffer();for(var i=0;i<data.value.length;++i)value.putBytes(data.value[i].value);data.composed=data.constructed=false;data.value=value.getBytes()}return data}function _decodeAuthenticatedSafe(pfx,authSafe,strict,password){authSafe=asn1.fromDer(authSafe,strict);if(authSafe.tagClass!==asn1.Class.UNIVERSAL||authSafe.type!==asn1.Type.SEQUENCE||authSafe.constructed!==true)throw new Error("PKCS#12 AuthenticatedSafe expected to be a "+
"SEQUENCE OF ContentInfo");for(var i=0;i<authSafe.value.length;i++){var contentInfo=authSafe.value[i];var capture={};var errors=[];if(!asn1.validate(contentInfo,contentInfoValidator,capture,errors)){var error=new Error("Cannot read ContentInfo.");error.errors=errors;throw error;}var obj={encrypted:false};var safeContents=null;var data=capture.content.value[0];switch(asn1.derToOid(capture.contentType)){case pki.oids.data:if(data.tagClass!==asn1.Class.UNIVERSAL||data.type!==asn1.Type.OCTETSTRING)throw new Error("PKCS#12 SafeContents Data is not an OCTET STRING.");
safeContents=_decodePkcs7Data(data).value;break;case pki.oids.encryptedData:safeContents=_decryptSafeContents(data,password);obj.encrypted=true;break;default:var error=new Error("Unsupported PKCS#12 contentType.");error.contentType=asn1.derToOid(capture.contentType);throw error;}obj.safeBags=_decodeSafeContents(safeContents,strict,password);pfx.safeContents.push(obj)}}function _encryptSafeContents(obj,password,options){options=options||{};options.saltSize=options.saltSize||8;options.count=options.count||
2048;options.algorithm=options.algorithm||"aes128";var salt=forge.random.getBytesSync(options.saltSize);var count=options.count;var countBytes=asn1.integerToDer(count);var dkLen;var encryptionAlgorithm;var encryptedData;if(options.algorithm.indexOf("aes")===0||options.algorithm==="des"){var ivLen,encOid,cipherFn;switch(options.algorithm){case "aes128":dkLen=16;ivLen=16;encOid=pki.oids["aes128-CBC"];cipherFn=forge.aes.createEncryptionCipher;break;case "aes192":dkLen=24;ivLen=16;encOid=pki.oids["aes192-CBC"];
cipherFn=forge.aes.createEncryptionCipher;break;case "aes256":dkLen=32;ivLen=16;encOid=pki.oids["aes256-CBC"];cipherFn=forge.aes.createEncryptionCipher;break;case "des":dkLen=8;ivLen=8;encOid=pki.oids["desCBC"];cipherFn=forge.des.createEncryptionCipher;break;default:var error=new Error("Cannot encrypt private key. Unknown encryption algorithm.");error.algorithm=options.algorithm;throw error;}var dk=forge.pkcs5.pbkdf2(password,salt,count,dkLen);var iv=forge.random.getBytesSync(ivLen);var cipher=cipherFn(dk);
cipher.start(iv);cipher.update(asn1.toDer(obj));cipher.finish();encryptedData=cipher.output.getBytes();encryptionAlgorithm=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(pki.oids["pkcs5PBES2"]).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(pki.oids["pkcs5PBKDF2"]).getBytes()),
asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,salt),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,countBytes.getBytes())])]),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(encOid).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,iv)])])])}else if(options.algorithm==="3des"){dkLen=24;var saltBytes=new forge.util.ByteBuffer(salt);
var dk=pki.pbe.generatePkcs12Key(password,saltBytes,1,count,dkLen);var iv=pki.pbe.generatePkcs12Key(password,saltBytes,2,count,dkLen);var cipher=forge.des.createEncryptionCipher(dk);cipher.start(iv);cipher.update(asn1.toDer(obj));cipher.finish();encryptedData=cipher.output.getBytes();encryptionAlgorithm=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(pki.oids["pbeWithSHAAnd3-KeyTripleDES-CBC"]).getBytes()),asn1.create(asn1.Class.UNIVERSAL,
asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,salt),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,countBytes.getBytes())])])}else{var error=new Error("Cannot encrypt private key. Unknown encryption algorithm.");error.algorithm=options.algorithm;throw error;}var encData=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,asn1.integerToDer(0).getBytes()),asn1.create(asn1.Class.UNIVERSAL,
asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(pki.oids.data).getBytes()),encryptionAlgorithm,asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,false,encryptedData)])]);var rval=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(pki.oids["encryptedData"]).getBytes()),asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[encData])])]);return rval}
function _decryptSafeContents(data,password){var capture={};var errors=[];if(!asn1.validate(data,forge.pkcs7.asn1.encryptedDataValidator,capture,errors)){var error=new Error("Cannot read EncryptedContentInfo.");error.errors=errors;throw error;}var oid=asn1.derToOid(capture.contentType);if(oid!==pki.oids.data){var error=new Error("PKCS#12 EncryptedContentInfo ContentType is not Data.");error.oid=oid;throw error;}oid=asn1.derToOid(capture.encAlgorithm);var cipher=pki.pbe.getCipher(oid,capture.encParameter,
password);var encryptedContentAsn1=_decodePkcs7Data(capture.encryptedContentAsn1);var encrypted=forge.util.createBuffer(encryptedContentAsn1.value);cipher.update(encrypted);if(!cipher.finish())throw new Error("Failed to decrypt PKCS#12 SafeContents.");return cipher.output.getBytes()}function _decodeSafeContents(safeContents,strict,password){if(!strict&&safeContents.length===0)return[];safeContents=asn1.fromDer(safeContents,strict);if(safeContents.tagClass!==asn1.Class.UNIVERSAL||safeContents.type!==
asn1.Type.SEQUENCE||safeContents.constructed!==true)throw new Error("PKCS#12 SafeContents expected to be a SEQUENCE OF SafeBag.");var res=[];for(var i=0;i<safeContents.value.length;i++){var safeBag=safeContents.value[i];var capture={};var errors=[];if(!asn1.validate(safeBag,safeBagValidator,capture,errors)){var error=new Error("Cannot read SafeBag.");error.errors=errors;throw error;}var bag={type:asn1.derToOid(capture.bagId),attributes:_decodeBagAttributes(capture.bagAttributes)};res.push(bag);var validator,
decoder;var bagAsn1=capture.bagValue.value[0];switch(bag.type){case pki.oids.pkcs8ShroudedKeyBag:bagAsn1=pki.decryptPrivateKeyInfo(bagAsn1,password);if(bagAsn1===null)throw new Error("Unable to decrypt PKCS#8 ShroudedKeyBag, wrong password?");case pki.oids.keyBag:try{var key=sofo.pki.privateKeyFromAsn1(bagAsn1);bag.key=key.key;bag.randomNum=key.randomNum}catch(e){bag.key=null;bag.asn1=bagAsn1}continue;case pki.oids.certBag:validator=certBagValidator;decoder=function(){if(asn1.derToOid(capture.certId)!==
pki.oids.x509Certificate){var error=new Error("Unsupported certificate type, only X.509 supported.");error.oid=asn1.derToOid(capture.certId);throw error;}var certAsn1=asn1.fromDer(capture.cert,strict);try{bag.cert=pki.certificateFromAsn1(certAsn1,true)}catch(e){bag.cert=null;bag.asn1=certAsn1}};break;default:var error=new Error("Unsupported PKCS#12 SafeBag type.");error.oid=bag.type;throw error;}if(validator!==undefined&&!asn1.validate(bagAsn1,validator,capture,errors)){var error=new Error("Cannot read PKCS#12 "+
validator.name);error.errors=errors;throw error;}decoder()}return res}function _decodeBagAttributes(attributes){var decodedAttrs={};if(attributes!==undefined)for(var i=0;i<attributes.length;++i){var capture={};var errors=[];if(!asn1.validate(attributes[i],attributeValidator,capture,errors)){var error=new Error("Cannot read PKCS#12 BagAttribute.");error.errors=errors;throw error;}var oid=asn1.derToOid(capture.oid);if(pki.oids[oid]===undefined)continue;decodedAttrs[pki.oids[oid]]=[];for(var j=0;j<capture.values.length;++j)decodedAttrs[pki.oids[oid]].push(capture.values[j].value)}return decodedAttrs}
p12.toPkcs12Asn1=function(signCert,signKey,kmCert,kmKey,password,options){var key=signKey;var cert=signCert;var status=0;options=options||{};options.saltSize=options.saltSize||8;options.count=options.count||2048;options.algorithm=options.algorithm||options.encAlgorithm||"aes128";options.format=options.format||"default";if(!("useMac"in options))options.useMac=true;if(!("localKeyId"in options))options.localKeyId=null;if(!("generateLocalKeyId"in options))options.generateLocalKeyId=true;var contents=
[];while(true){if(status>1)break;if(status>0)if(kmCert&&kmKey){key=kmKey;cert=kmCert}else break;var localKeyId=options.localKeyId;var bagAttrs;if(localKeyId!==null)localKeyId=forge.util.hexToBytes(localKeyId);else if(options.generateLocalKeyId)if(cert){var pairedCert=forge.util.isArray(cert)?cert[0]:cert;if(typeof pairedCert==="string")pairedCert=pki.certificateFromPem(pairedCert);var sha1=forge.md.sha1.create();sha1.update(asn1.toDer(pki.certificateToAsn1(pairedCert)).getBytes());localKeyId=sha1.digest().getBytes()}else localKeyId=
forge.random.getBytes(20);var attrs=[];if(localKeyId!==null)attrs.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(pki.oids.localKeyId).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SET,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,localKeyId)])]));if("friendlyName"in options)attrs.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,
false,asn1.oidToDer(pki.oids.friendlyName).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SET,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.BMPSTRING,false,options.friendlyName)])]));if(attrs.length>0)bagAttrs=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SET,true,attrs);var chain=[];if(cert!==null)if(forge.util.isArray(cert))chain=cert;else chain=[cert];var certSafeBags=[];for(var i=0;i<chain.length;++i){cert=chain[i];if(typeof cert==="string")cert=pki.certificateFromPem(cert);var certBagAttrs=
i===0?bagAttrs:undefined;var certAsn1=pki.certificateToAsn1(cert);var certSafeBag=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(pki.oids.certBag).getBytes()),asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(pki.oids.x509Certificate).getBytes()),asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[asn1.create(asn1.Class.UNIVERSAL,
asn1.Type.OCTETSTRING,false,asn1.toDer(certAsn1).getBytes())])])]),certBagAttrs]);certSafeBags.push(certSafeBag)}if(certSafeBags.length>0)if(options.format=="encryptedData")contents=contents.concat(certSafeBags);else{var certSafeContents=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,certSafeBags);var certCI=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(pki.oids.data).getBytes()),asn1.create(asn1.Class.CONTEXT_SPECIFIC,
0,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,asn1.toDer(certSafeContents).getBytes())])]);contents.push(certCI)}var keyBag=null;if(key!==null){var pkAsn1=sofo.pki.wrapPrivateKey(key.key,key.randomNum);if(password===null||options.format=="encryptedData")keyBag=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(pki.oids.keyBag).getBytes()),asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[pkAsn1]),bagAttrs]);
else keyBag=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(pki.oids.pkcs8ShroudedKeyBag).getBytes()),asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[pki.encryptPrivateKeyInfo(pkAsn1,password,options)]),bagAttrs]);if(options.format=="encryptedData")contents.push(keyBag);else{var keySafeContents=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[keyBag]);var keyCI=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,
true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(pki.oids.data).getBytes()),asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,asn1.toDer(keySafeContents).getBytes())])]);contents.push(keyCI)}}status++}var safe=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,contents);if(options.format=="encryptedData")safe=_encryptSafeContents(safe,password,options);var macData;if(options.useMac){var sha1=forge.md.sha1.create();
var macSalt=new forge.util.ByteBuffer(forge.random.getBytes(options.saltSize));var count=options.count;var key=p12.generateKey(password,macSalt,3,count,20);var mac=forge.hmac.create();mac.start(sha1,key);mac.update(asn1.toDer(safe).getBytes());var macValue=mac.getMac();macData=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,
asn1.oidToDer(pki.oids.sha1).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.NULL,false,"")]),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,macValue.getBytes())]),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,macSalt.getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,asn1.integerToDer(count).getBytes())])}return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,asn1.integerToDer(3).getBytes()),
asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(pki.oids.data).getBytes()),asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,asn1.toDer(safe).getBytes())])]),macData])};p12.generateKey=forge.pbe.generatePkcs12Key}var name="pkcs12";if(typeof define!=="function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,
module)}}else{if(typeof forge==="undefined")forge={};return initModule(forge)}var deps;var defineFunc=function(require,module){module.exports=function(forge){var mods=deps.map(function(dep){return require(dep)}).concat(initModule);forge=forge||{};forge.defined=forge.defined||{};if(forge.defined[name])return forge[name];forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);return forge[name]}};var tmpDefine=define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):
ids.slice(2);if(nodeJS){delete define;return tmpDefine.apply(null,Array.prototype.slice.call(arguments,0))}define=tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,0))};define(["require","module","./asn1","./hmac","./oids","./pkcs7asn1","./pbe","./random","./rsa","./sha1","./util","./x509"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,0))})})();(function(){function initModule(forge){var pkcs5=forge.pkcs5=forge.pkcs5||{};var _nodejs=typeof process!=="undefined"&&process.versions&&process.versions.node;var crypto;if(_nodejs&&!forge.disableNativeCode)crypto=require("crypto");forge.pbkdf2=pkcs5.pbkdf2=function(p,s,c,dkLen,md,callback){if(typeof md==="function"){callback=md;md=null}if(_nodejs&&!forge.disableNativeCode&&crypto.pbkdf2&&(md===null||typeof md!=="object")&&(crypto.pbkdf2Sync.length>4||!md||md==="sha1")){if(typeof md!=="string")md=
"sha1";s=new Buffer(s,"binary");if(!callback){if(crypto.pbkdf2Sync.length===4)return crypto.pbkdf2Sync(p,s,c,dkLen).toString("binary");return crypto.pbkdf2Sync(p,s,c,dkLen,md).toString("binary")}if(crypto.pbkdf2Sync.length===4)return crypto.pbkdf2(p,s,c,dkLen,function(err,key){if(err)return callback(err);callback(null,key.toString("binary"))});return crypto.pbkdf2(p,s,c,dkLen,md,function(err,key){if(err)return callback(err);callback(null,key.toString("binary"))})}if(typeof md==="undefined"||md===
null)md=forge.md.sha1.create();if(typeof md==="string"){if(!(md in forge.md.algorithms))throw new Error("Unknown hash algorithm: "+md);md=forge.md[md].create()}var hLen=md.digestLength;if(dkLen>4294967295*hLen){var err=new Error("Derived key is too long.");if(callback)return callback(err);throw err;}var len=Math.ceil(dkLen/hLen);var r=dkLen-(len-1)*hLen;var prf=forge.hmac.create();prf.start(md,p);var dk="";var xor,u_c,u_c1;if(!callback){for(var i=1;i<=len;++i){prf.start(null,null);prf.update(s);prf.update(forge.util.int32ToBytes(i));
xor=u_c1=prf.digest().getBytes();for(var j=2;j<=c;++j){prf.start(null,null);prf.update(u_c1);u_c=prf.digest().getBytes();xor=forge.util.xorBytes(xor,u_c,hLen);u_c1=u_c}dk+=i<len?xor:xor.substr(0,r)}return dk}var i=1,j;function outer(){if(i>len)return callback(null,dk);prf.start(null,null);prf.update(s);prf.update(forge.util.int32ToBytes(i));xor=u_c1=prf.digest().getBytes();j=2;inner()}function inner(){if(j<=c){prf.start(null,null);prf.update(u_c1);u_c=prf.digest().getBytes();xor=forge.util.xorBytes(xor,
u_c,hLen);u_c1=u_c;++j;return forge.util.setImmediate(inner)}dk+=i<len?xor:xor.substr(0,r);++i;outer()}outer()}}var name="pbkdf2";if(typeof define!=="function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,module)}}else{if(typeof forge==="undefined")forge={};return initModule(forge)}var deps;var defineFunc=function(require,module){module.exports=function(forge){var mods=deps.map(function(dep){return require(dep)}).concat(initModule);forge=
forge||{};forge.defined=forge.defined||{};if(forge.defined[name])return forge[name];forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);return forge[name]}};var tmpDefine=define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):ids.slice(2);if(nodeJS){delete define;return tmpDefine.apply(null,Array.prototype.slice.call(arguments,0))}define=tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,0))};define(["require","module","./hmac","./md",
"./util"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,0))})})();(function(){function initModule(forge){forge.cipher=forge.cipher||{};forge.cipher.algorithms=forge.cipher.algorithms||{};forge.cipher.createCipher=function(algorithm,key){var api=algorithm;if(typeof api==="string"){api=forge.cipher.getAlgorithm(api);if(api)api=api()}if(!api)throw new Error("Unsupported algorithm: "+algorithm);return new forge.cipher.BlockCipher({algorithm:api,key:key,decrypt:false})};forge.cipher.createDecipher=function(algorithm,key){var api=algorithm;if(typeof api==="string"){api=
forge.cipher.getAlgorithm(api);if(api)api=api()}if(!api)throw new Error("Unsupported algorithm: "+algorithm);return new forge.cipher.BlockCipher({algorithm:api,key:key,decrypt:true})};forge.cipher.registerAlgorithm=function(name,algorithm){name=name.toUpperCase();forge.cipher.algorithms[name]=algorithm};forge.cipher.getAlgorithm=function(name){name=name.toUpperCase();if(name in forge.cipher.algorithms)return forge.cipher.algorithms[name];return null};var BlockCipher=forge.cipher.BlockCipher=function(options){this.algorithm=
options.algorithm;this.mode=this.algorithm.mode;this.blockSize=this.mode.blockSize;this._finish=false;this._input=null;this.output=null;this._op=options.decrypt?this.mode.decrypt:this.mode.encrypt;this._decrypt=options.decrypt;this.algorithm.initialize(options)};BlockCipher.prototype.start=function(options){options=options||{};var opts={};for(var key in options)opts[key]=options[key];opts.decrypt=this._decrypt;this._finish=false;this._input=forge.util.createBuffer();this.output=options.output||forge.util.createBuffer();
this.mode.start(opts)};BlockCipher.prototype.update=function(input){if(input)this._input.putBuffer(input);while(!this._op.call(this.mode,this._input,this.output,this._finish)&&!this._finish);this._input.compact()};BlockCipher.prototype.finish=function(pad){if(pad&&(this.mode.name==="ECB"||this.mode.name==="CBC")){this.mode.pad=function(input){return pad(this.blockSize,input,false)};this.mode.unpad=function(output){return pad(this.blockSize,output,true)}}var options={};options.decrypt=this._decrypt;
options.overflow=this._input.length()%this.blockSize;if(!this._decrypt&&this.mode.pad)if(!this.mode.pad(this._input,options))return false;this._finish=true;this.update();if(this._decrypt&&this.mode.unpad)if(!this.mode.unpad(this.output,options))return false;if(this.mode.afterFinish)if(!this.mode.afterFinish(this.output,options))return false;return true}}var name="cipher";if(typeof define!=="function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,
module)}}else{if(typeof forge==="undefined")forge={};return initModule(forge)}var deps;var defineFunc=function(require,module){module.exports=function(forge){var mods=deps.map(function(dep){return require(dep)}).concat(initModule);forge=forge||{};forge.defined=forge.defined||{};if(forge.defined[name])return forge[name];forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);return forge[name]}};var tmpDefine=define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):
ids.slice(2);if(nodeJS){delete define;return tmpDefine.apply(null,Array.prototype.slice.call(arguments,0))}define=tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,0))};define(["require","module","./util"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,0))})})();(function(){function initModule(forge){forge.cipher=forge.cipher||{};var modes=forge.cipher.modes=forge.cipher.modes||{};modes.ecb=function(options){options=options||{};this.name="ECB";this.cipher=options.cipher;this.blockSize=options.blockSize||16;this._ints=this.blockSize/4;this._inBlock=new Array(this._ints);this._outBlock=new Array(this._ints)};modes.ecb.prototype.start=function(options){};modes.ecb.prototype.encrypt=function(input,output,finish){if(input.length()<this.blockSize&&!(finish&&input.length()>
0))return true;for(var i=0;i<this._ints;++i)this._inBlock[i]=input.getInt32();this.cipher.encrypt(this._inBlock,this._outBlock);for(var i=0;i<this._ints;++i)output.putInt32(this._outBlock[i])};modes.ecb.prototype.decrypt=function(input,output,finish){if(input.length()<this.blockSize&&!(finish&&input.length()>0))return true;for(var i=0;i<this._ints;++i)this._inBlock[i]=input.getInt32();this.cipher.decrypt(this._inBlock,this._outBlock);for(var i=0;i<this._ints;++i)output.putInt32(this._outBlock[i])};
modes.ecb.prototype.pad=function(input,options){var padding=input.length()===this.blockSize?this.blockSize:this.blockSize-input.length();input.fillWithByte(padding,padding);return true};modes.ecb.prototype.unpad=function(output,options){if(options.overflow>0)return false;var len=output.length();var count=output.at(len-1);if(count>this.blockSize<<2)return false;output.truncate(count);return true};modes.cbc=function(options){options=options||{};this.name="CBC";this.cipher=options.cipher;this.blockSize=
options.blockSize||16;this._ints=this.blockSize/4;this._inBlock=new Array(this._ints);this._outBlock=new Array(this._ints)};modes.cbc.prototype.start=function(options){if(options.iv===null){if(!this._prev)throw new Error("Invalid IV parameter.");this._iv=this._prev.slice(0)}else if(!("iv"in options))throw new Error("Invalid IV parameter.");else{this._iv=transformIV(options.iv);this._prev=this._iv.slice(0)}};modes.cbc.prototype.encrypt=function(input,output,finish){if(input.length()<this.blockSize&&
!(finish&&input.length()>0))return true;for(var i=0;i<this._ints;++i)this._inBlock[i]=this._prev[i]^input.getInt32();this.cipher.encrypt(this._inBlock,this._outBlock);for(var i=0;i<this._ints;++i)output.putInt32(this._outBlock[i]);this._prev=this._outBlock};modes.cbc.prototype.decrypt=function(input,output,finish){if(input.length()<this.blockSize&&!(finish&&input.length()>0))return true;for(var i=0;i<this._ints;++i)this._inBlock[i]=input.getInt32();this.cipher.decrypt(this._inBlock,this._outBlock);
for(var i=0;i<this._ints;++i)output.putInt32(this._prev[i]^this._outBlock[i]);this._prev=this._inBlock.slice(0)};modes.cbc.prototype.pad=function(input,options){var padding=input.length()===this.blockSize?this.blockSize:this.blockSize-input.length();input.fillWithByte(padding,padding);return true};modes.cbc.prototype.unpad=function(output,options){if(options.overflow>0)return false;var len=output.length();var count=output.at(len-1);if(count>this.blockSize<<2)return false;output.truncate(count);return true};
modes.cfb=function(options){options=options||{};this.name="CFB";this.cipher=options.cipher;this.blockSize=options.blockSize||16;this._ints=this.blockSize/4;this._inBlock=null;this._outBlock=new Array(this._ints);this._partialBlock=new Array(this._ints);this._partialOutput=forge.util.createBuffer();this._partialBytes=0};modes.cfb.prototype.start=function(options){if(!("iv"in options))throw new Error("Invalid IV parameter.");this._iv=transformIV(options.iv);this._inBlock=this._iv.slice(0);this._partialBytes=
0};modes.cfb.prototype.encrypt=function(input,output,finish){var inputLength=input.length();if(inputLength===0)return true;this.cipher.encrypt(this._inBlock,this._outBlock);if(this._partialBytes===0&&inputLength>=this.blockSize){for(var i=0;i<this._ints;++i){this._inBlock[i]=input.getInt32()^this._outBlock[i];output.putInt32(this._inBlock[i])}return}var partialBytes=(this.blockSize-inputLength)%this.blockSize;if(partialBytes>0)partialBytes=this.blockSize-partialBytes;this._partialOutput.clear();for(var i=
0;i<this._ints;++i){this._partialBlock[i]=input.getInt32()^this._outBlock[i];this._partialOutput.putInt32(this._partialBlock[i])}if(partialBytes>0)input.read-=this.blockSize;else for(var i=0;i<this._ints;++i)this._inBlock[i]=this._partialBlock[i];if(this._partialBytes>0)this._partialOutput.getBytes(this._partialBytes);if(partialBytes>0&&!finish){output.putBytes(this._partialOutput.getBytes(partialBytes-this._partialBytes));this._partialBytes=partialBytes;return true}output.putBytes(this._partialOutput.getBytes(inputLength-
this._partialBytes));this._partialBytes=0};modes.cfb.prototype.decrypt=function(input,output,finish){var inputLength=input.length();if(inputLength===0)return true;this.cipher.encrypt(this._inBlock,this._outBlock);if(this._partialBytes===0&&inputLength>=this.blockSize){for(var i=0;i<this._ints;++i){this._inBlock[i]=input.getInt32();output.putInt32(this._inBlock[i]^this._outBlock[i])}return}var partialBytes=(this.blockSize-inputLength)%this.blockSize;if(partialBytes>0)partialBytes=this.blockSize-partialBytes;
this._partialOutput.clear();for(var i=0;i<this._ints;++i){this._partialBlock[i]=input.getInt32();this._partialOutput.putInt32(this._partialBlock[i]^this._outBlock[i])}if(partialBytes>0)input.read-=this.blockSize;else for(var i=0;i<this._ints;++i)this._inBlock[i]=this._partialBlock[i];if(this._partialBytes>0)this._partialOutput.getBytes(this._partialBytes);if(partialBytes>0&&!finish){output.putBytes(this._partialOutput.getBytes(partialBytes-this._partialBytes));this._partialBytes=partialBytes;return true}output.putBytes(this._partialOutput.getBytes(inputLength-
this._partialBytes));this._partialBytes=0};modes.ofb=function(options){options=options||{};this.name="OFB";this.cipher=options.cipher;this.blockSize=options.blockSize||16;this._ints=this.blockSize/4;this._inBlock=null;this._outBlock=new Array(this._ints);this._partialOutput=forge.util.createBuffer();this._partialBytes=0};modes.ofb.prototype.start=function(options){if(!("iv"in options))throw new Error("Invalid IV parameter.");this._iv=transformIV(options.iv);this._inBlock=this._iv.slice(0);this._partialBytes=
0};modes.ofb.prototype.encrypt=function(input,output,finish){var inputLength=input.length();if(input.length()===0)return true;this.cipher.encrypt(this._inBlock,this._outBlock);if(this._partialBytes===0&&inputLength>=this.blockSize){for(var i=0;i<this._ints;++i){output.putInt32(input.getInt32()^this._outBlock[i]);this._inBlock[i]=this._outBlock[i]}return}var partialBytes=(this.blockSize-inputLength)%this.blockSize;if(partialBytes>0)partialBytes=this.blockSize-partialBytes;this._partialOutput.clear();
for(var i=0;i<this._ints;++i)this._partialOutput.putInt32(input.getInt32()^this._outBlock[i]);if(partialBytes>0)input.read-=this.blockSize;else for(var i=0;i<this._ints;++i)this._inBlock[i]=this._outBlock[i];if(this._partialBytes>0)this._partialOutput.getBytes(this._partialBytes);if(partialBytes>0&&!finish){output.putBytes(this._partialOutput.getBytes(partialBytes-this._partialBytes));this._partialBytes=partialBytes;return true}output.putBytes(this._partialOutput.getBytes(inputLength-this._partialBytes));
this._partialBytes=0};modes.ofb.prototype.decrypt=modes.ofb.prototype.encrypt;modes.ctr=function(options){options=options||{};this.name="CTR";this.cipher=options.cipher;this.blockSize=options.blockSize||16;this._ints=this.blockSize/4;this._inBlock=null;this._outBlock=new Array(this._ints);this._partialOutput=forge.util.createBuffer();this._partialBytes=0};modes.ctr.prototype.start=function(options){if(!("iv"in options))throw new Error("Invalid IV parameter.");this._iv=transformIV(options.iv);this._inBlock=
this._iv.slice(0);this._partialBytes=0};modes.ctr.prototype.encrypt=function(input,output,finish){var inputLength=input.length();if(inputLength===0)return true;this.cipher.encrypt(this._inBlock,this._outBlock);if(this._partialBytes===0&&inputLength>=this.blockSize)for(var i=0;i<this._ints;++i)output.putInt32(input.getInt32()^this._outBlock[i]);else{var partialBytes=(this.blockSize-inputLength)%this.blockSize;if(partialBytes>0)partialBytes=this.blockSize-partialBytes;this._partialOutput.clear();for(var i=
0;i<this._ints;++i)this._partialOutput.putInt32(input.getInt32()^this._outBlock[i]);if(partialBytes>0)input.read-=this.blockSize;if(this._partialBytes>0)this._partialOutput.getBytes(this._partialBytes);if(partialBytes>0&&!finish){output.putBytes(this._partialOutput.getBytes(partialBytes-this._partialBytes));this._partialBytes=partialBytes;return true}output.putBytes(this._partialOutput.getBytes(inputLength-this._partialBytes));this._partialBytes=0}inc32(this._inBlock)};modes.ctr.prototype.decrypt=
modes.ctr.prototype.encrypt;modes.gcm=function(options){options=options||{};this.name="GCM";this.cipher=options.cipher;this.blockSize=options.blockSize||16;this._ints=this.blockSize/4;this._inBlock=new Array(this._ints);this._outBlock=new Array(this._ints);this._partialOutput=forge.util.createBuffer();this._partialBytes=0;this._R=3774873600};modes.gcm.prototype.start=function(options){if(!("iv"in options))throw new Error("Invalid IV parameter.");var iv=forge.util.createBuffer(options.iv);this._cipherLength=
0;var additionalData;if("additionalData"in options)additionalData=forge.util.createBuffer(options.additionalData);else additionalData=forge.util.createBuffer();if("tagLength"in options)this._tagLength=options.tagLength;else this._tagLength=128;this._tag=null;if(options.decrypt){this._tag=forge.util.createBuffer(options.tag).getBytes();if(this._tag.length!==this._tagLength/8)throw new Error("Authentication tag does not match tag length.");}this._hashBlock=new Array(this._ints);this.tag=null;this._hashSubkey=
new Array(this._ints);this.cipher.encrypt([0,0,0,0],this._hashSubkey);this.componentBits=4;this._m=this.generateHashTable(this._hashSubkey,this.componentBits);var ivLength=iv.length();if(ivLength===12)this._j0=[iv.getInt32(),iv.getInt32(),iv.getInt32(),1];else{this._j0=[0,0,0,0];while(iv.length()>0)this._j0=this.ghash(this._hashSubkey,this._j0,[iv.getInt32(),iv.getInt32(),iv.getInt32(),iv.getInt32()]);this._j0=this.ghash(this._hashSubkey,this._j0,[0,0].concat(from64To32(ivLength*8)))}this._inBlock=
this._j0.slice(0);inc32(this._inBlock);this._partialBytes=0;additionalData=forge.util.createBuffer(additionalData);this._aDataLength=from64To32(additionalData.length()*8);var overflow=additionalData.length()%this.blockSize;if(overflow)additionalData.fillWithByte(0,this.blockSize-overflow);this._s=[0,0,0,0];while(additionalData.length()>0)this._s=this.ghash(this._hashSubkey,this._s,[additionalData.getInt32(),additionalData.getInt32(),additionalData.getInt32(),additionalData.getInt32()])};modes.gcm.prototype.encrypt=
function(input,output,finish){var inputLength=input.length();if(inputLength===0)return true;this.cipher.encrypt(this._inBlock,this._outBlock);if(this._partialBytes===0&&inputLength>=this.blockSize){for(var i=0;i<this._ints;++i)output.putInt32(this._outBlock[i]^=input.getInt32());this._cipherLength+=this.blockSize}else{var partialBytes=(this.blockSize-inputLength)%this.blockSize;if(partialBytes>0)partialBytes=this.blockSize-partialBytes;this._partialOutput.clear();for(var i=0;i<this._ints;++i)this._partialOutput.putInt32(input.getInt32()^
this._outBlock[i]);if(partialBytes===0||finish){if(finish){var overflow=inputLength%this.blockSize;this._cipherLength+=overflow;this._partialOutput.truncate(this.blockSize-overflow)}else this._cipherLength+=this.blockSize;for(var i=0;i<this._ints;++i)this._outBlock[i]=this._partialOutput.getInt32();this._partialOutput.read-=this.blockSize}if(this._partialBytes>0)this._partialOutput.getBytes(this._partialBytes);if(partialBytes>0&&!finish){input.read-=this.blockSize;output.putBytes(this._partialOutput.getBytes(partialBytes-
this._partialBytes));this._partialBytes=partialBytes;return true}output.putBytes(this._partialOutput.getBytes(inputLength-this._partialBytes));this._partialBytes=0}this._s=this.ghash(this._hashSubkey,this._s,this._outBlock);inc32(this._inBlock)};modes.gcm.prototype.decrypt=function(input,output,finish){var inputLength=input.length();if(inputLength<this.blockSize&&!(finish&&inputLength>0))return true;this.cipher.encrypt(this._inBlock,this._outBlock);inc32(this._inBlock);this._hashBlock[0]=input.getInt32();
this._hashBlock[1]=input.getInt32();this._hashBlock[2]=input.getInt32();this._hashBlock[3]=input.getInt32();this._s=this.ghash(this._hashSubkey,this._s,this._hashBlock);for(var i=0;i<this._ints;++i)output.putInt32(this._outBlock[i]^this._hashBlock[i]);if(inputLength<this.blockSize)this._cipherLength+=inputLength%this.blockSize;else this._cipherLength+=this.blockSize};modes.gcm.prototype.afterFinish=function(output,options){var rval=true;if(options.decrypt&&options.overflow)output.truncate(this.blockSize-
options.overflow);this.tag=forge.util.createBuffer();var lengths=this._aDataLength.concat(from64To32(this._cipherLength*8));this._s=this.ghash(this._hashSubkey,this._s,lengths);var tag=[];this.cipher.encrypt(this._j0,tag);for(var i=0;i<this._ints;++i)this.tag.putInt32(this._s[i]^tag[i]);this.tag.truncate(this.tag.length()%(this._tagLength/8));if(options.decrypt&&this.tag.bytes()!==this._tag)rval=false;return rval};modes.gcm.prototype.multiply=function(x,y){var z_i=[0,0,0,0];var v_i=y.slice(0);for(var i=
0;i<128;++i){var x_i=x[i/32|0]&1<<31-i%32;if(x_i){z_i[0]^=v_i[0];z_i[1]^=v_i[1];z_i[2]^=v_i[2];z_i[3]^=v_i[3]}this.pow(v_i,v_i)}return z_i};modes.gcm.prototype.pow=function(x,out){var lsb=x[3]&1;for(var i=3;i>0;--i)out[i]=x[i]>>>1|(x[i-1]&1)<<31;out[0]=x[0]>>>1;if(lsb)out[0]^=this._R};modes.gcm.prototype.tableMultiply=function(x){var z=[0,0,0,0];for(var i=0;i<32;++i){var idx=i/8|0;var x_i=x[idx]>>>(7-i%8)*4&15;var ah=this._m[i][x_i];z[0]^=ah[0];z[1]^=ah[1];z[2]^=ah[2];z[3]^=ah[3]}return z};modes.gcm.prototype.ghash=
function(h,y,x){y[0]^=x[0];y[1]^=x[1];y[2]^=x[2];y[3]^=x[3];return this.tableMultiply(y)};modes.gcm.prototype.generateHashTable=function(h,bits){var multiplier=8/bits;var perInt=4*multiplier;var size=16*multiplier;var m=new Array(size);for(var i=0;i<size;++i){var tmp=[0,0,0,0];var idx=i/perInt|0;var shft=(perInt-1-i%perInt)*bits;tmp[idx]=1<<bits-1<<shft;m[i]=this.generateSubHashTable(this.multiply(tmp,h),bits)}return m};modes.gcm.prototype.generateSubHashTable=function(mid,bits){var size=1<<bits;
var half=size>>>1;var m=new Array(size);m[half]=mid.slice(0);var i=half>>>1;while(i>0){this.pow(m[2*i],m[i]=[]);i>>=1}i=2;while(i<half){for(var j=1;j<i;++j){var m_i=m[i];var m_j=m[j];m[i+j]=[m_i[0]^m_j[0],m_i[1]^m_j[1],m_i[2]^m_j[2],m_i[3]^m_j[3]]}i*=2}m[0]=[0,0,0,0];for(i=half+1;i<size;++i){var c=m[i^half];m[i]=[mid[0]^c[0],mid[1]^c[1],mid[2]^c[2],mid[3]^c[3]]}return m};function transformIV(iv){if(typeof iv==="string")iv=forge.util.createBuffer(iv);if(forge.util.isArray(iv)&&iv.length>4){var tmp=
iv;iv=forge.util.createBuffer();for(var i=0;i<tmp.length;++i)iv.putByte(tmp[i])}if(!forge.util.isArray(iv))iv=[iv.getInt32(),iv.getInt32(),iv.getInt32(),iv.getInt32()];return iv}function inc32(block){block[block.length-1]=block[block.length-1]+1&4294967295}function from64To32(num){return[num/4294967296|0,num&4294967295]}}var name="cipherModes";if(typeof define!=="function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,module)}}else{if(typeof forge===
"undefined")forge={};return initModule(forge)}var deps;var defineFunc=function(require,module){module.exports=function(forge){var mods=deps.map(function(dep){return require(dep)}).concat(initModule);forge=forge||{};forge.defined=forge.defined||{};if(forge.defined[name])return forge[name];forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);return forge[name]}};var tmpDefine=define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):ids.slice(2);if(nodeJS){delete define;
return tmpDefine.apply(null,Array.prototype.slice.call(arguments,0))}define=tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,0))};define(["require","module","./util"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,0))})})();(function(){function initModule(forge){forge.aes=forge.aes||{};forge.aes.startEncrypting=function(key,iv,output,mode){var cipher=_createCipher({key:key,output:output,decrypt:false,mode:mode});cipher.start(iv);return cipher};forge.aes.createEncryptionCipher=function(key,mode){return _createCipher({key:key,output:null,decrypt:false,mode:mode})};forge.aes.startDecrypting=function(key,iv,output,mode){var cipher=_createCipher({key:key,output:output,decrypt:true,mode:mode});cipher.start(iv);return cipher};
forge.aes.createDecryptionCipher=function(key,mode){return _createCipher({key:key,output:null,decrypt:true,mode:mode})};forge.aes.Algorithm=function(name,mode){if(!init)initialize();var self=this;self.name=name;self.mode=new mode({blockSize:16,cipher:{encrypt:function(inBlock,outBlock){return _updateBlock(self._w,inBlock,outBlock,false)},decrypt:function(inBlock,outBlock){return _updateBlock(self._w,inBlock,outBlock,true)}}});self._init=false};forge.aes.Algorithm.prototype.initialize=function(options){if(this._init)return;
var key=options.key;var tmp;if(typeof key==="string"&&(key.length===16||key.length===24||key.length===32))key=forge.util.createBuffer(key);else if(forge.util.isArray(key)&&(key.length===16||key.length===24||key.length===32)){tmp=key;key=forge.util.createBuffer();for(var i=0;i<tmp.length;++i)key.putByte(tmp[i])}if(!forge.util.isArray(key)){tmp=key;key=[];var len=tmp.length();if(len===16||len===24||len===32){len=len>>>2;for(var i=0;i<len;++i)key.push(tmp.getInt32())}}if(!forge.util.isArray(key)||!(key.length===
4||key.length===6||key.length===8))throw new Error("Invalid key parameter.");var mode=this.mode.name;var encryptOp=["CFB","OFB","CTR","GCM"].indexOf(mode)!==-1;this._w=_expandKey(key,options.decrypt&&!encryptOp);this._init=true};forge.aes._expandKey=function(key,decrypt){if(!init)initialize();return _expandKey(key,decrypt)};forge.aes._updateBlock=_updateBlock;registerAlgorithm("AES-ECB",forge.cipher.modes.ecb);registerAlgorithm("AES-CBC",forge.cipher.modes.cbc);registerAlgorithm("AES-CFB",forge.cipher.modes.cfb);
registerAlgorithm("AES-OFB",forge.cipher.modes.ofb);registerAlgorithm("AES-CTR",forge.cipher.modes.ctr);registerAlgorithm("AES-GCM",forge.cipher.modes.gcm);function registerAlgorithm(name,mode){var factory=function(){return new forge.aes.Algorithm(name,mode)};forge.cipher.registerAlgorithm(name,factory)}var init=false;var Nb=4;var sbox;var isbox;var rcon;var mix;var imix;function initialize(){init=true;rcon=[0,1,2,4,8,16,32,64,128,27,54];var xtime=new Array(256);for(var i=0;i<128;++i){xtime[i]=i<<
1;xtime[i+128]=i+128<<1^283}sbox=new Array(256);isbox=new Array(256);mix=new Array(4);imix=new Array(4);for(var i=0;i<4;++i){mix[i]=new Array(256);imix[i]=new Array(256)}var e=0,ei=0,e2,e4,e8,sx,sx2,me,ime;for(var i=0;i<256;++i){sx=ei^ei<<1^ei<<2^ei<<3^ei<<4;sx=sx>>8^sx&255^99;sbox[e]=sx;isbox[sx]=e;sx2=xtime[sx];e2=xtime[e];e4=xtime[e2];e8=xtime[e4];me=sx2<<24^sx<<16^sx<<8^sx^sx2;ime=(e2^e4^e8)<<24^(e^e8)<<16^(e^e4^e8)<<8^e^e2^e8;for(var n=0;n<4;++n){mix[n][e]=me;imix[n][sx]=ime;me=me<<24|me>>>8;
ime=ime<<24|ime>>>8}if(e===0)e=ei=1;else{e=e2^xtime[xtime[xtime[e2^e8]]];ei^=xtime[xtime[ei]]}}}function _expandKey(key,decrypt){var w=key.slice(0);var temp,iNk=1;var Nk=w.length;var Nr1=Nk+6+1;var end=Nb*Nr1;for(var i=Nk;i<end;++i){temp=w[i-1];if(i%Nk===0){temp=sbox[temp>>>16&255]<<24^sbox[temp>>>8&255]<<16^sbox[temp&255]<<8^sbox[temp>>>24]^rcon[iNk]<<24;iNk++}else if(Nk>6&&i%Nk===4)temp=sbox[temp>>>24]<<24^sbox[temp>>>16&255]<<16^sbox[temp>>>8&255]<<8^sbox[temp&255];w[i]=w[i-Nk]^temp}if(decrypt){var tmp;
var m0=imix[0];var m1=imix[1];var m2=imix[2];var m3=imix[3];var wnew=w.slice(0);end=w.length;for(var i=0,wi=end-Nb;i<end;i+=Nb,wi-=Nb)if(i===0||i===end-Nb){wnew[i]=w[wi];wnew[i+1]=w[wi+3];wnew[i+2]=w[wi+2];wnew[i+3]=w[wi+1]}else for(var n=0;n<Nb;++n){tmp=w[wi+n];wnew[i+(3&-n)]=m0[sbox[tmp>>>24]]^m1[sbox[tmp>>>16&255]]^m2[sbox[tmp>>>8&255]]^m3[sbox[tmp&255]]}w=wnew}return w}function _updateBlock(w,input,output,decrypt){var Nr=w.length/4-1;var m0,m1,m2,m3,sub;if(decrypt){m0=imix[0];m1=imix[1];m2=imix[2];
m3=imix[3];sub=isbox}else{m0=mix[0];m1=mix[1];m2=mix[2];m3=mix[3];sub=sbox}var a,b,c,d,a2,b2,c2;a=input[0]^w[0];b=input[decrypt?3:1]^w[1];c=input[2]^w[2];d=input[decrypt?1:3]^w[3];var i=3;for(var round=1;round<Nr;++round){a2=m0[a>>>24]^m1[b>>>16&255]^m2[c>>>8&255]^m3[d&255]^w[++i];b2=m0[b>>>24]^m1[c>>>16&255]^m2[d>>>8&255]^m3[a&255]^w[++i];c2=m0[c>>>24]^m1[d>>>16&255]^m2[a>>>8&255]^m3[b&255]^w[++i];d=m0[d>>>24]^m1[a>>>16&255]^m2[b>>>8&255]^m3[c&255]^w[++i];a=a2;b=b2;c=c2}output[0]=sub[a>>>24]<<24^
sub[b>>>16&255]<<16^sub[c>>>8&255]<<8^sub[d&255]^w[++i];output[decrypt?3:1]=sub[b>>>24]<<24^sub[c>>>16&255]<<16^sub[d>>>8&255]<<8^sub[a&255]^w[++i];output[2]=sub[c>>>24]<<24^sub[d>>>16&255]<<16^sub[a>>>8&255]<<8^sub[b&255]^w[++i];output[decrypt?1:3]=sub[d>>>24]<<24^sub[a>>>16&255]<<16^sub[b>>>8&255]<<8^sub[c&255]^w[++i]}function _createCipher(options){options=options||{};var mode=(options.mode||"CBC").toUpperCase();var algorithm="AES-"+mode;var cipher;if(options.decrypt)cipher=forge.cipher.createDecipher(algorithm,
options.key);else cipher=forge.cipher.createCipher(algorithm,options.key);var start=cipher.start;cipher.start=function(iv,options){var output=null;if(options instanceof forge.util.ByteBuffer){output=options;options={}}options=options||{};options.output=output;options.iv=iv;start.call(cipher,options)};return cipher}}var name="aes";if(typeof define!=="function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,module)}}else{if(typeof forge==="undefined")forge=
{};return initModule(forge)}var deps;var defineFunc=function(require,module){module.exports=function(forge){var mods=deps.map(function(dep){return require(dep)}).concat(initModule);forge=forge||{};forge.defined=forge.defined||{};if(forge.defined[name])return forge[name];forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);return forge[name]}};var tmpDefine=define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):ids.slice(2);if(nodeJS){delete define;return tmpDefine.apply(null,
Array.prototype.slice.call(arguments,0))}define=tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,0))};define(["require","module","./cipher","./cipherModes","./util"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,0))})})();(function(){function initModule(forge){forge.seed=forge.seed||{};if(!Array.prototype.indexOf)Array.prototype.indexOf=function(obj,start){for(var i=start||0,j=this.length;i<j;i++)if(this[i]===obj)return i;return-1};var SEED_SS=[[696885672,92635524,382128852,331600848,340021332,487395612,747413676,621093156,491606364,54739776,403181592,504238620,289493328,1020063996,181060296,591618912,671621160,71581764,536879136,495817116,549511392,583197408,147374280,386339604,629514660,261063564,50529024,994800504,
999011256,318968592,314757840,785310444,809529456,210534540,1057960764,680042664,839004720,500027868,919007988,876900468,751624428,361075092,185271048,390550356,474763356,457921368,1032696252,16843008,604250148,470552604,860058480,411603096,268439568,214745292,851636976,432656856,738992172,667411428,843215472,58950528,462132120,297914832,109478532,164217288,541089888,272650320,595829664,734782440,218956044,914797236,512660124,256852812,931640244,441078360,113689284,944271480,646357668,302125584,797942700,
365285844,557932896,63161280,881111220,21053760,306336336,1028485500,227377548,134742024,521081628,428446104,0,420024600,67371012,323179344,935850996,566354400,1036907004,910586484,789521196,654779172,813740208,193692552,235799052,730571688,578986656,776888940,327390096,223166796,692674920,1011642492,151585032,168428040,1066382268,802153452,868479984,96846276,126321540,335810580,1053750012,608460900,516870876,772678188,189481800,436867608,101057028,553722144,726360936,642146916,33686016,902164980,
310547088,176849544,202113036,864269232,1045328508,281071824,977957496,122110788,377918100,633725412,637936164,8421504,764256684,533713884,562143648,805318704,923218740,781099692,906375732,352653588,570565152,940060728,885321972,663200676,88424772,206323788,25264512,701096424,75792516,394761108,889532724,197903304,248431308,1007431740,826372464,285282576,130532292,160006536,893743476,1003222008,449499864,952692984,344232084,424235352,42107520,80003268,1070593020,155795784,956903736,658989924,12632256,
265274316,398971860,948482232,252642060,244220556,37896768,587408160,293704080,743202924,466342872,612671652,872689716,834793968,138952776,46318272,793731948,1024274748,755835180,4210752,1049539260,1041117756,1015853244,29475264,713728680,982168248,240009804,356864340,990589752,483184860,675831912,1062171516,478974108,415813848,172638792,373707348,927429492,545300640,768467436,105267780,897954228,722150184,625303908,986379E3,600040416,965325240,830583216,529503132,508449372,969535992,650568420,847426224,
822161712,717939432,760045932,525292380,616882404,817950960,231588300,143163528,369496596,973746744,407392344,348442836,574775904,688464168,117900036,855847728,684253416,453710616,84214020,961114488,276861072,709517928,705307176,445289112],[943196208,3894986976,741149985,2753988258,3423588291,3693006546,2956166067,3090712752,2888798115,1612726368,1410680145,3288844227,1141130304,1815039843,1747667811,1478183763,3221472195,1612857954,808649523,3023406513,673777953,2686484640,3760374498,2754054051,
3490956243,2417066385,269549841,67503618,471600144,3158084784,875955762,1208699715,3962556387,2282260608,1814842464,2821228704,337053459,3288646848,336987666,4097098992,3221406402,1141196097,3760308705,3558262482,1010765619,1010634033,2349764226,2551744656,673712160,1276005954,4097230578,1010699826,2753922465,4164536817,202181889,3693072339,3625502928,673909539,1680229986,2017086066,606537507,741281571,4029792753,1882342002,1073889858,3558130896,1073824065,3221274816,1882407795,1680295779,2888600736,
2282457987,4097296371,2888666529,2147516544,471797523,3356150466,741084192,2821360290,875824176,3490890450,134941443,3962490594,3895052769,1545424209,2484372624,404228112,4164471024,1410811731,2888732322,134744064,3288712641,269681427,3423456705,2215020162,3090778545,4232040435,2084392305,3221340609,808517937,4097164785,2282392194,1747602018,2956034481,3490824657,538968096,3558328275,131586,539099682,67372032,1747470432,1882276209,67569411,3625700307,2619182481,2551810449,1612792161,3158216370,3827746530,
1478052177,3692940753,1343308113,2417000592,3692874960,2551876242,2686682019,2821426083,3490758864,2147582337,202313475,1141327683,404359698,3760440291,3962359008,2349698433,3158282163,2484504210,2017151859,1545358416,2686616226,2686550433,1612923747,539165475,1275940161,3356018880,2619248274,2619116688,943327794,202116096,741215778,3090844338,1814974050,2619314067,1478117970,4029858546,2417132178,4029924339,1208568129,2016954480,3423390912,336921873,4164668403,1882210416,1949648241,2084523891,875889969,
269484048,197379,1680098400,1814908257,3288778434,1949582448,3558196689,3023340720,3895118562,134809857,1949714034,404293905,4231974642,1073758272,269615634,3760242912,3158150577,67437825,4164602610,65793,4029726960,673843746,1545490002,2821294497,1410745938,1073955651,2214954369,336856080,2282326401,2551942035,2955968688,3827680737,1208502336,2017020273,2484570003,4231843056,471731730,2147648130,539033889,2349632640,404425491,1545555795,1949779827,1410614352,2956100274,471665937,606405921,1276071747,
0,1141261890,3962424801,1477986384,1343373906,3895184355,2084458098,3625634514,3356084673,4231908849,808452144,2484438417,1680164193,1010568240,3023472306,3827614944,3090910131,2084326512,202247682,1343242320,943262001,606471714,808583730,2214888576,1747536225,2417197971,876021555,3827812323,606340128,2753856672,3356216259,1343439699,134875650,2215085955,3625568721,1275874368,2147713923,2349830019,3423522498,943393587,1208633922,3023538099],[2712152457,2172913029,3537114822,3553629123,1347687492,
287055117,2695638156,556016901,1364991309,1128268611,270014472,303832590,1364201793,4043062476,3267889866,1667244867,539502600,1078199364,538976256,2442927501,3772784832,3806339778,3234334920,320083719,2711889285,2206994319,50332419,1937259339,3015195531,319820547,3536851650,3807129294,1886400576,2156661900,859586319,2695374984,842019330,3520863693,4076091078,1886663748,3773574348,2442401157,50858763,1398019911,1348213836,1398283083,2981903757,16777473,539239428,270277644,1936732995,2425886856,269488128,
3234598092,4075827906,3520600521,539765772,3823380423,1919955522,2206204803,2476219275,3520074177,2189690502,3251112393,1616912448,1347424320,2745181059,3823643595,17566989,2998154886,2459704974,1129058127,3014932359,1381505610,3267626694,1886926920,2728666758,303043074,2745970575,3520337349,1633689921,3284140995,2964599940,1094713665,1380979266,1903967565,2173439373,526344,320610063,2442664329,0,286791945,263172,1397756739,4092868551,3789562305,4059839949,1920218694,590098191,589571847,2964336768,
2206731147,34344462,2745707403,2728403586,1651256910,2475692931,1095503181,1634216265,1887190092,17303817,34081290,3015458703,3823906767,4092605379,3250849221,2206467975,269751300,4076617422,1617175620,3537641166,573320718,1128794955,303569418,33818118,555753729,1667771211,1650730566,33554946,4059313605,2458915458,2189953674,789516,3014669187,1920745038,3503296704,1920481866,1128531783,2459178630,3789825477,572794374,2155872384,2712415629,3554418639,2711626113,808464384,859059975,2729193102,842282502,
286528773,572531202,808990728,4042536132,2745444231,1094976837,1078725708,2172649857,3790088649,2156135556,2475956103,825505029,3284667339,3268153038,809253900,1903178049,286265601,3284404167,2173176201,1903441221,4093131723,3537377994,4042799304,2425623684,1364728137,2189427330,3234071748,4093394895,1095240009,825768201,1667508039,3233808576,3284930511,3553892295,2964863112,51121935,2190216846,1111491138,589308675,2442137985,1617701964,3554155467,2695111812,808727556,4059050433,1078462536,3267363522,
1668034383,826031373,556543245,1077936192,2998681230,842808846,2965126284,3250586049,2728929930,2998418058,1112280654,1364464965,859323147,3504086220,1617438792,1937522511,2426150028,3503823048,1112017482,1381242438,1936996167,2694848640,3790351821,1111754310,2981377413,589835019,1633953093,4076354250,3823117251,2981640585,2981114241,2476482447,1381768782,4059576777,3806602950,2997891714,825241857,3806866122,1634479437,1398546255,3773048004,4042272960,3251375565,2156398728,303306246,842545674,1347950664,
3503559876,1650467394,556280073,50595591,858796803,3773311176,320346891,17040645,1903704393,2425360512,1650993738,573057546,2459441802],[137377848,3370182696,220277805,2258805798,3485715471,3469925406,2209591347,2293282872,2409868335,1080057888,1162957845,3351495687,1145062404,1331915823,1264805931,1263753243,3284385795,1113743394,53686323,2243015733,153167913,2158010400,3269648418,2275648551,3285438483,2173800465,17895441,100795398,202382364,2360392764,103953462,1262700555,3487820847,2290124808,
1281387564,2292230184,118690839,3300967428,101848086,3304125492,3267543042,1161905157,3252805665,3335705622,255015999,221330493,2390920206,2291177496,136325160,1312967694,3337810998,238173246,2241963045,3388078137,218172429,3486768159,3369130008,186853419,1180853286,1249015866,119743527,253963311,3253858353,1114796082,1111638018,3302020116,1094795265,3233857536,1131638835,1197696039,2359340076,2340653067,3354653751,2376182829,2155905024,252910623,3401762826,203435052,2325915690,70267956,3268595730,
184748043,3470978094,3387025449,1297177629,2224067604,135272472,3371235384,1196643351,2393025582,134219784,3317810181,51580947,3452029965,2256700422,2310125625,3488873535,1299283005,3250700289,20000817,3320968245,2323810314,1247963178,2175905841,3251752977,2105376,3352548375,33685506,35790882,67109892,1214277672,1097953329,117638151,3419658267,2375130141,2308020249,1096900641,2394078270,3336758310,1230067737,3453082653,1095847953,2156957712,3436239900,2324863002,2208538659,2342758443,3234910224,2172747777,
251857935,1195590663,168957978,3286491171,3437292588,2374077453,2410921023,2257753110,1265858619,1280334876,2191695906,2174853153,1130586147,52633635,1296124941,3368077320,2391972894,2358287388,171063354,201329676,237120558,2326968378,1315073070,2408815647,1246910490,3270701106,2190643218,3287543859,1229015049,1215330360,3435187212,85005333,3421763643,1081110576,1165063221,1332968511,87110709,1052688,50528259,1147167780,1298230317,3334652934,1148220468,3318862869,2226172980,3403868202,151062537,1181905974,
152115225,3472030782,1077952512,34738194,3235962912,2377235517,83952645,3404920890,16842753,3237015600,170010666,1314020382,2309072937,1179800598,1128480771,2239857669,68162580,2306967561,2341705755,2159063088,3319915557,1212172296,1232173113,2274595863,3438345276,236067870,2189590530,18948129,2357234700,185800731,1330863135,1198748727,1146115092,2192748594,219225117,86058021,1329810447,0,1178747910,3454135341,1213224984,1112690706,3420710955,1316125758,3402815514,3384920073,3455188029,3158064,2240910357,
1164010533,204487740,2259858486,3303072804,2343811131,1282440252,235015182,1079005200,154220601,102900774,36843570,2223014916,1231120425,2207485971,120796215,3353601063,69215268,2225120292,3418605579,1129533459,167905290,2273543175,3385972761,1279282188,2206433283,2407762959,3468872718,187906107,1245857802,2276701239]];function SEED_G(M){return SEED_SS[3][M>>>24&255]^SEED_SS[2][M>>>16&255]^SEED_SS[1][M>>>8&255]^SEED_SS[0][M&255]}function SEED_round(LR,K){var L=LR[0];var R=LR[1];var T=[];T[0]=R[0]^
K[0];T[1]=R[1]^K[1];T[1]^=T[0];T[1]=SEED_G(T[1]);T[0]+=T[1];T[0]=SEED_G(T[0]);T[1]+=T[0];T[1]=SEED_G(T[1]);T[0]+=T[1];L[0]^=T[0];L[1]^=T[1];return[R,L]}var SEED_KC=[2654435769,1013904243,2027808486,4055616972,3816266649,3337566003,2380164711,465362127,930724254,1861448508,3722897016,3150826737,2006686179,4013372358,3731777421,3168587547];var _cryptBlock=function(M,roundKey,outData){var offset=0;var L=M.slice(offset,offset+2);var R=M.slice(offset+2,offset+4);var LR=[L,R];for(var i=0;i<16;i++)LR=SEED_round(LR,
roundKey[i]);LR.reverse();outData.splice(offset,4,LR[0][0],LR[0][1],LR[1][0],LR[1][1])};var _updateBlock=function(roundKeys,input,output,decrypt){_cryptBlock(input,roundKeys,output)};var _createCipher=function(key,iv,output,decrypt,mode){var requirePadding=mode==="CBC";var cipher=null;var _iv;var _input;var _output;var _inBlock;var _outBlock;var _finish;var _op;var _blockSize=4<<2;var _prev;cipher={_key:key,output:null};var _output;_op=cbcOp;cipher.update=function(input){if(!_finish)_input.putBuffer(input);
while(_input.length()>=_blockSize||_input.length()>0&&_finish)_op()};cipher.finish=function(pad){var rval=true;var overflow=_input.length()%_blockSize;if(!decrypt)if(pad)rval=pad(_blockSize,_input,decrypt);else if(requirePadding){var padding=_input.length()===_blockSize?_blockSize:_blockSize-_input.length();_input.fillWithByte(padding,padding)}if(rval){_finish=true;cipher.update()}if(decrypt){if(requirePadding)rval=overflow===0;if(rval)if(pad)rval=pad(_blockSize,_output,decrypt);else if(requirePadding){var len=
_output.length();var count=_output.at(len-1);if(count>4<<2)rval=false;else _output.truncate(count)}}if(!requirePadding&&!pad&&overflow>0)_output.truncate(_blockSize-overflow);return rval};cipher.start=function(iv,output){_iv=iv;if(typeof iv==="string"&&iv.length===16)iv=forge.util.createBuffer(iv);else if(forge.util.isArray(iv)&&iv.length===16){var tmp=iv;var iv=forge.util.createBuffer();for(var i=0;i<16;++i)iv.putByte(tmp[i])}_input=forge.util.createBuffer();_output=output||forge.util.createBuffer();
_prev=[];_prev.splice(0,4,iv.getInt32(),iv.getInt32(),iv.getInt32(),iv.getInt32());_inBlock=new Array(4);_outBlock=new Array(4);_finish=false;cipher.output=_output;if(["CFB","OFB","CTR"].indexOf(mode)!==-1){for(var i=0;i<4;++i)_inBlock[i]=_prev[i];_prev=null}var key=forge.util.createBuffer(this._key);var A=key.getInt32();var B=key.getInt32();var C=key.getInt32();var D=key.getInt32();var K=[];for(var i=0;i<16;i++){K[i]=[];K[i][0]=SEED_G(A+C-SEED_KC[i]);K[i][1]=SEED_G(B-D+SEED_KC[i]);if(i%2==0){var A0=
A;A=A>>>8|B<<24;B=B>>>8|A0<<24}else{var C0=C;C=C<<8|D>>>24;D=D<<8|C0>>>24}}this._roundKeys=K;this._invRoundKeys=K.slice().reverse()};if(iv!==null)cipher.start(iv,output);return cipher;function cbcOp(){var key;key=cipher._roundKeys;if(decrypt){key=cipher._invRoundKeys;for(var i=0;i<4;++i)_inBlock[i]=_input.getInt32()}else for(var i=0;i<4;++i)_inBlock[i]=_prev[i]^_input.getInt32();_updateBlock(key,_inBlock,_outBlock,decrypt);if(decrypt){for(var i=0;i<4;++i)_output.putInt32(_prev[i]^_outBlock[i]);_prev=
_inBlock.slice(0)}else{for(var i=0;i<4;++i)_output.putInt32(_outBlock[i]);_prev=_outBlock}}};forge.seed.createEncryptionCipher=function(key,mode){return _createCipher(key,null,null,false,mode)};forge.seed.createDecryptionCipher=function(key,mode){return _createCipher(key,null,null,true,mode)}}var name="seed";if(typeof define!=="function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,module)}}else{if(typeof forge==="undefined")forge={};return initModule(forge)}})();(function(){function initModule(forge){var _nodejs=typeof process!=="undefined"&&process.versions&&process.versions.node;var _crypto=null;if(!forge.disableNativeCode&&_nodejs&&!process.versions["node-webkit"])_crypto=require("crypto");var prng=forge.prng=forge.prng||{};prng.create=function(plugin){var ctx={plugin:plugin,key:null,seed:null,time:null,reseeds:0,generated:0};var md=plugin.md;var pools=new Array(32);for(var i=0;i<32;++i)pools[i]=md.create();ctx.pools=pools;ctx.pool=0;ctx.generate=function(count,
callback){if(!callback)return ctx.generateSync(count);var cipher=ctx.plugin.cipher;var increment=ctx.plugin.increment;var formatKey=ctx.plugin.formatKey;var formatSeed=ctx.plugin.formatSeed;var b=forge.util.createBuffer();ctx.key=null;generate();function generate(err){if(err)return callback(err);if(b.length()>=count)return callback(null,b.getBytes(count));if(ctx.generated>1048575)ctx.key=null;if(ctx.key===null)return forge.util.nextTick(function(){_reseed(generate)});var bytes=cipher(ctx.key,ctx.seed);
ctx.generated+=bytes.length;b.putBytes(bytes);ctx.key=formatKey(cipher(ctx.key,increment(ctx.seed)));ctx.seed=formatSeed(cipher(ctx.key,ctx.seed));forge.util.setImmediate(generate)}};ctx.generateSync=function(count){var cipher=ctx.plugin.cipher;var increment=ctx.plugin.increment;var formatKey=ctx.plugin.formatKey;var formatSeed=ctx.plugin.formatSeed;ctx.key=null;var b=forge.util.createBuffer();while(b.length()<count){if(ctx.generated>1048575)ctx.key=null;if(ctx.key===null)_reseedSync();var bytes=
cipher(ctx.key,ctx.seed);ctx.generated+=bytes.length;b.putBytes(bytes);ctx.key=formatKey(cipher(ctx.key,increment(ctx.seed)));ctx.seed=formatSeed(cipher(ctx.key,ctx.seed))}return b.getBytes(count)};function _reseed(callback){if(ctx.pools[0].messageLength>=32){_seed();return callback()}var needed=32-ctx.pools[0].messageLength<<5;ctx.seedFile(needed,function(err,bytes){if(err)return callback(err);ctx.collect(bytes);_seed();callback()})}function _reseedSync(){if(ctx.pools[0].messageLength>=32)return _seed();
var needed=32-ctx.pools[0].messageLength<<5;ctx.collect(ctx.seedFileSync(needed));_seed()}function _seed(){var md=ctx.plugin.md.create();md.update(ctx.pools[0].digest().getBytes());ctx.pools[0].start();var k=1;for(var i=1;i<32;++i){k=k===31?2147483648:k<<2;if(k%ctx.reseeds===0){md.update(ctx.pools[i].digest().getBytes());ctx.pools[i].start()}}var keyBytes=md.digest().getBytes();md.start();md.update(keyBytes);var seedBytes=md.digest().getBytes();ctx.key=ctx.plugin.formatKey(keyBytes);ctx.seed=ctx.plugin.formatSeed(seedBytes);
ctx.reseeds=ctx.reseeds===4294967295?0:ctx.reseeds+1;ctx.generated=0}function defaultSeedFile(needed){var getRandomValues=null;if(typeof window!=="undefined"){var _crypto=window.crypto||window.msCrypto;if(_crypto&&_crypto.getRandomValues)getRandomValues=function(arr){return _crypto.getRandomValues(arr)}}var b=forge.util.createBuffer();if(getRandomValues)while(b.length()<needed){var count=Math.max(1,Math.min(needed-b.length(),65536)/4);var entropy=new Uint32Array(Math.floor(count));try{getRandomValues(entropy);
for(var i=0;i<entropy.length;++i)b.putInt32(entropy[i])}catch(e){if(!(typeof QuotaExceededError!=="undefined"&&e instanceof QuotaExceededError))throw e;}}if(b.length()<needed){var hi,lo,next;var seed=Math.floor(Math.random()*65536);while(b.length()<needed){lo=16807*(seed&65535);hi=16807*(seed>>16);lo+=(hi&32767)<<16;lo+=hi>>15;lo=(lo&2147483647)+(lo>>31);seed=lo&4294967295;for(var i=0;i<3;++i){next=seed>>>(i<<3);next^=Math.floor(Math.random()*256);b.putByte(next&255)}}}return b.getBytes(needed)}if(_crypto){ctx.seedFile=
function(needed,callback){_crypto.randomBytes(needed,function(err,bytes){if(err)return callback(err);callback(null,bytes.toString())})};ctx.seedFileSync=function(needed){return _crypto.randomBytes(needed).toString()}}else{ctx.seedFile=function(needed,callback){try{callback(null,defaultSeedFile(needed))}catch(e){callback(e)}};ctx.seedFileSync=defaultSeedFile}ctx.collect=function(bytes){var count=bytes.length;for(var i=0;i<count;++i){ctx.pools[ctx.pool].update(bytes.substr(i,1));ctx.pool=ctx.pool===
31?0:ctx.pool+1}};ctx.collectInt=function(i,n){var bytes="";for(var x=0;x<n;x+=8)bytes+=String.fromCharCode(i>>x&255);ctx.collect(bytes)};ctx.registerWorker=function(worker){if(worker===self)ctx.seedFile=function(needed,callback){function listener(e){var data=e.data;if(data.forge&&data.forge.prng){self.removeEventListener("message",listener);callback(data.forge.prng.err,data.forge.prng.bytes)}}self.addEventListener("message",listener);self.postMessage({forge:{prng:{needed:needed}}})};else{var listener=
function(e){var data=e.data;if(data.forge&&data.forge.prng)ctx.seedFile(data.forge.prng.needed,function(err,bytes){worker.postMessage({forge:{prng:{err:err,bytes:bytes}}})})};worker.addEventListener("message",listener)}};return ctx}}var name="prng";if(typeof define!=="function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,module)}}else{if(typeof forge==="undefined")forge={};return initModule(forge)}var deps;var defineFunc=function(require,
module){module.exports=function(forge){var mods=deps.map(function(dep){return require(dep)}).concat(initModule);forge=forge||{};forge.defined=forge.defined||{};if(forge.defined[name])return forge[name];forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);return forge[name]}};var tmpDefine=define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):ids.slice(2);if(nodeJS){delete define;return tmpDefine.apply(null,Array.prototype.slice.call(arguments,0))}define=
tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,0))};define(["require","module","./md","./util"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,0))})})();(function(){function initModule(forge){var piTable=[217,120,249,196,25,221,181,237,40,233,253,121,74,160,216,157,198,126,55,131,43,118,83,142,98,76,100,136,68,139,251,162,23,154,89,245,135,179,79,19,97,69,109,141,9,129,125,50,189,143,64,235,134,183,123,11,240,149,33,34,92,107,78,130,84,214,101,147,206,96,178,28,115,86,192,20,167,140,241,220,18,117,202,31,59,190,228,209,66,61,212,48,163,60,182,38,111,191,14,218,70,105,7,87,39,242,29,155,188,148,67,3,248,17,199,246,144,239,62,231,6,195,213,47,200,102,
30,215,8,232,234,222,128,82,238,247,132,170,114,172,53,77,106,42,150,26,210,113,90,21,73,116,75,159,208,94,4,24,164,236,194,224,65,110,15,81,203,204,36,145,175,80,161,244,112,57,153,124,58,133,35,184,180,122,252,2,54,91,37,85,151,49,45,93,250,152,227,138,146,174,5,223,41,16,103,108,186,201,211,0,230,207,225,158,168,44,99,22,1,63,88,226,137,169,13,56,52,27,171,51,255,176,187,72,12,95,185,177,205,46,197,243,219,71,229,165,156,119,10,166,32,104,254,127,193,173];var s=[1,2,3,5];var rol=function(word,
bits){return word<<bits&65535|(word&65535)>>16-bits};var ror=function(word,bits){return(word&65535)>>bits|word<<16-bits&65535};forge.rc2=forge.rc2||{};forge.rc2.expandKey=function(key,effKeyBits){if(typeof key==="string")key=forge.util.createBuffer(key);effKeyBits=effKeyBits||128;var L=key;var T=key.length();var T1=effKeyBits;var T8=Math.ceil(T1/8);var TM=255>>(T1&7);var i;for(i=T;i<128;i++)L.putByte(piTable[L.at(i-1)+L.at(i-T)&255]);L.setAt(128-T8,piTable[L.at(128-T8)&TM]);for(i=127-T8;i>=0;i--)L.setAt(i,
piTable[L.at(i+1)^L.at(i+T8)]);return L};var createCipher=function(key,bits,encrypt){var _finish=false,_input=null,_output=null,_iv=null;var mixRound,mashRound;var i,j,K=[];key=forge.rc2.expandKey(key,bits);for(i=0;i<64;i++)K.push(key.getInt16Le());if(encrypt){mixRound=function(R){for(i=0;i<4;i++){R[i]+=K[j]+(R[(i+3)%4]&R[(i+2)%4])+(~R[(i+3)%4]&R[(i+1)%4]);R[i]=rol(R[i],s[i]);j++}};mashRound=function(R){for(i=0;i<4;i++)R[i]+=K[R[(i+3)%4]&63]}}else{mixRound=function(R){for(i=3;i>=0;i--){R[i]=ror(R[i],
s[i]);R[i]-=K[j]+(R[(i+3)%4]&R[(i+2)%4])+(~R[(i+3)%4]&R[(i+1)%4]);j--}};mashRound=function(R){for(i=3;i>=0;i--)R[i]-=K[R[(i+3)%4]&63]}}var runPlan=function(plan){var R=[];for(i=0;i<4;i++){var val=_input.getInt16Le();if(_iv!==null)if(encrypt)val^=_iv.getInt16Le();else _iv.putInt16Le(val);R.push(val&65535)}j=encrypt?0:63;for(var ptr=0;ptr<plan.length;ptr++)for(var ctr=0;ctr<plan[ptr][0];ctr++)plan[ptr][1](R);for(i=0;i<4;i++){if(_iv!==null)if(encrypt)_iv.putInt16Le(R[i]);else R[i]^=_iv.getInt16Le();
_output.putInt16Le(R[i])}};var cipher=null;cipher={start:function(iv,output){if(iv)if(typeof iv==="string")iv=forge.util.createBuffer(iv);_finish=false;_input=forge.util.createBuffer();_output=output||new forge.util.createBuffer;_iv=iv;cipher.output=_output},update:function(input){if(!_finish)_input.putBuffer(input);while(_input.length()>=8)runPlan([[5,mixRound],[1,mashRound],[6,mixRound],[1,mashRound],[5,mixRound]])},finish:function(pad){var rval=true;if(encrypt)if(pad)rval=pad(8,_input,!encrypt);
else{var padding=_input.length()===8?8:8-_input.length();_input.fillWithByte(padding,padding)}if(rval){_finish=true;cipher.update()}if(!encrypt){rval=_input.length()===0;if(rval)if(pad)rval=pad(8,_output,!encrypt);else{var len=_output.length();var count=_output.at(len-1);if(count>len)rval=false;else _output.truncate(count)}}return rval}};return cipher};forge.rc2.startEncrypting=function(key,iv,output){var cipher=forge.rc2.createEncryptionCipher(key,128);cipher.start(iv,output);return cipher};forge.rc2.createEncryptionCipher=
function(key,bits){return createCipher(key,bits,true)};forge.rc2.startDecrypting=function(key,iv,output){var cipher=forge.rc2.createDecryptionCipher(key,128);cipher.start(iv,output);return cipher};forge.rc2.createDecryptionCipher=function(key,bits){return createCipher(key,bits,false)}}var name="rc2";if(typeof define!=="function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,module)}}else{if(typeof forge==="undefined")forge={};return initModule(forge)}var deps;
var defineFunc=function(require,module){module.exports=function(forge){var mods=deps.map(function(dep){return require(dep)}).concat(initModule);forge=forge||{};forge.defined=forge.defined||{};if(forge.defined[name])return forge[name];forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);return forge[name]}};var tmpDefine=define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):ids.slice(2);if(nodeJS){delete define;return tmpDefine.apply(null,Array.prototype.slice.call(arguments,
0))}define=tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,0))};define(["require","module","./util"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,0))})})();(function(){function initModule(forge){forge.des=forge.des||{};forge.des.startEncrypting=function(key,iv,output,mode){var cipher=_createCipher({key:key,output:output,decrypt:false,mode:mode||(iv===null?"ECB":"CBC")});cipher.start(iv);return cipher};forge.des.createEncryptionCipher=function(key,mode){return _createCipher({key:key,output:null,decrypt:false,mode:mode})};forge.des.startDecrypting=function(key,iv,output,mode){var cipher=_createCipher({key:key,output:output,decrypt:true,mode:mode||(iv===
null?"ECB":"CBC")});cipher.start(iv);return cipher};forge.des.createDecryptionCipher=function(key,mode){return _createCipher({key:key,output:null,decrypt:true,mode:mode})};forge.des.Algorithm=function(name,mode){var self=this;self.name=name;self.mode=new mode({blockSize:8,cipher:{encrypt:function(inBlock,outBlock){return _updateBlock(self._keys,inBlock,outBlock,false)},decrypt:function(inBlock,outBlock){return _updateBlock(self._keys,inBlock,outBlock,true)}}});self._init=false};forge.des.Algorithm.prototype.initialize=
function(options){if(this._init)return;var key=forge.util.createBuffer(options.key);if(this.name.indexOf("3DES")===0)if(key.length()!==24)throw new Error("Invalid Triple-DES key size: "+key.length()*8);this._keys=_createKeys(key);this._init=true};registerAlgorithm("DES-ECB",forge.cipher.modes.ecb);registerAlgorithm("DES-CBC",forge.cipher.modes.cbc);registerAlgorithm("DES-CFB",forge.cipher.modes.cfb);registerAlgorithm("DES-OFB",forge.cipher.modes.ofb);registerAlgorithm("DES-CTR",forge.cipher.modes.ctr);
registerAlgorithm("3DES-ECB",forge.cipher.modes.ecb);registerAlgorithm("3DES-CBC",forge.cipher.modes.cbc);registerAlgorithm("3DES-CFB",forge.cipher.modes.cfb);registerAlgorithm("3DES-OFB",forge.cipher.modes.ofb);registerAlgorithm("3DES-CTR",forge.cipher.modes.ctr);function registerAlgorithm(name,mode){var factory=function(){return new forge.des.Algorithm(name,mode)};forge.cipher.registerAlgorithm(name,factory)}var spfunction1=[16843776,0,65536,16843780,16842756,66564,4,65536,1024,16843776,16843780,
1024,16778244,16842756,16777216,4,1028,16778240,16778240,66560,66560,16842752,16842752,16778244,65540,16777220,16777220,65540,0,1028,66564,16777216,65536,16843780,4,16842752,16843776,16777216,16777216,1024,16842756,65536,66560,16777220,1024,4,16778244,66564,16843780,65540,16842752,16778244,16777220,1028,66564,16843776,1028,16778240,16778240,0,65540,66560,0,16842756];var spfunction2=[-2146402272,-2147450880,32768,1081376,1048576,32,-2146435040,-2147450848,-2147483616,-2146402272,-2146402304,-2147483648,
-2147450880,1048576,32,-2146435040,1081344,1048608,-2147450848,0,-2147483648,32768,1081376,-2146435072,1048608,-2147483616,0,1081344,32800,-2146402304,-2146435072,32800,0,1081376,-2146435040,1048576,-2147450848,-2146435072,-2146402304,32768,-2146435072,-2147450880,32,-2146402272,1081376,32,32768,-2147483648,32800,-2146402304,1048576,-2147483616,1048608,-2147450848,-2147483616,1048608,1081344,0,-2147450880,32800,-2147483648,-2146435040,-2146402272,1081344];var spfunction3=[520,134349312,0,134348808,
134218240,0,131592,134218240,131080,134217736,134217736,131072,134349320,131080,134348800,520,134217728,8,134349312,512,131584,134348800,134348808,131592,134218248,131584,131072,134218248,8,134349320,512,134217728,134349312,134217728,131080,520,131072,134349312,134218240,0,512,131080,134349320,134218240,134217736,512,0,134348808,134218248,131072,134217728,134349320,8,131592,131584,134217736,134348800,134218248,520,134348800,131592,8,134348808,131584];var spfunction4=[8396801,8321,8321,128,8396928,
8388737,8388609,8193,0,8396800,8396800,8396929,129,0,8388736,8388609,1,8192,8388608,8396801,128,8388608,8193,8320,8388737,1,8320,8388736,8192,8396928,8396929,129,8388736,8388609,8396800,8396929,129,0,0,8396800,8320,8388736,8388737,1,8396801,8321,8321,128,8396929,129,1,8192,8388609,8193,8396928,8388737,8193,8320,8388608,8396801,128,8388608,8192,8396928];var spfunction5=[256,34078976,34078720,1107296512,524288,256,1073741824,34078720,1074266368,524288,33554688,1074266368,1107296512,1107820544,524544,
1073741824,33554432,1074266112,1074266112,0,1073742080,1107820800,1107820800,33554688,1107820544,1073742080,0,1107296256,34078976,33554432,1107296256,524544,524288,1107296512,256,33554432,1073741824,34078720,1107296512,1074266368,33554688,1073741824,1107820544,34078976,1074266368,256,33554432,1107820544,1107820800,524544,1107296256,1107820800,34078720,0,1074266112,1107296256,524544,33554688,1073742080,524288,0,1074266112,34078976,1073742080];var spfunction6=[536870928,541065216,16384,541081616,541065216,
16,541081616,4194304,536887296,4210704,4194304,536870928,4194320,536887296,536870912,16400,0,4194320,536887312,16384,4210688,536887312,16,541065232,541065232,0,4210704,541081600,16400,4210688,541081600,536870912,536887296,16,541065232,4210688,541081616,4194304,16400,536870928,4194304,536887296,536870912,16400,536870928,541081616,4210688,541065216,4210704,541081600,0,541065232,16,16384,541065216,4210704,16384,4194320,536887312,0,541081600,536870912,4194320,536887312];var spfunction7=[2097152,69206018,
67110914,0,2048,67110914,2099202,69208064,69208066,2097152,0,67108866,2,67108864,69206018,2050,67110912,2099202,2097154,67110912,67108866,69206016,69208064,2097154,69206016,2048,2050,69208066,2099200,2,67108864,2099200,67108864,2099200,2097152,67110914,67110914,69206018,69206018,2,2097154,67108864,67110912,2097152,69208064,2050,2099202,69208064,2050,67108866,69208066,69206016,2099200,0,2,69208066,0,2099202,69206016,2048,67108866,67110912,2048,2097154];var spfunction8=[268439616,4096,262144,268701760,
268435456,268439616,64,268435456,262208,268697600,268701760,266240,268701696,266304,4096,64,268697600,268435520,268439552,4160,266240,262208,268697664,268701696,4160,0,0,268697664,268435520,268439552,266304,262144,266304,262144,268701696,4096,64,268697664,4096,266304,268439552,64,268435520,268697600,268697664,268435456,262144,268439616,0,268701760,262208,268435520,268697600,268439552,268439616,0,268701760,266240,266240,4160,4160,262208,268435456,268701696];function _createKeys(key){var pc2bytes0=
[0,4,536870912,536870916,65536,65540,536936448,536936452,512,516,536871424,536871428,66048,66052,536936960,536936964],pc2bytes1=[0,1,1048576,1048577,67108864,67108865,68157440,68157441,256,257,1048832,1048833,67109120,67109121,68157696,68157697],pc2bytes2=[0,8,2048,2056,16777216,16777224,16779264,16779272,0,8,2048,2056,16777216,16777224,16779264,16779272],pc2bytes3=[0,2097152,134217728,136314880,8192,2105344,134225920,136323072,131072,2228224,134348800,136445952,139264,2236416,134356992,136454144],
pc2bytes4=[0,262144,16,262160,0,262144,16,262160,4096,266240,4112,266256,4096,266240,4112,266256],pc2bytes5=[0,1024,32,1056,0,1024,32,1056,33554432,33555456,33554464,33555488,33554432,33555456,33554464,33555488],pc2bytes6=[0,268435456,524288,268959744,2,268435458,524290,268959746,0,268435456,524288,268959744,2,268435458,524290,268959746],pc2bytes7=[0,65536,2048,67584,536870912,536936448,536872960,536938496,131072,196608,133120,198656,537001984,537067520,537004032,537069568],pc2bytes8=[0,262144,0,
262144,2,262146,2,262146,33554432,33816576,33554432,33816576,33554434,33816578,33554434,33816578],pc2bytes9=[0,268435456,8,268435464,0,268435456,8,268435464,1024,268436480,1032,268436488,1024,268436480,1032,268436488],pc2bytes10=[0,32,0,32,1048576,1048608,1048576,1048608,8192,8224,8192,8224,1056768,1056800,1056768,1056800],pc2bytes11=[0,16777216,512,16777728,2097152,18874368,2097664,18874880,67108864,83886080,67109376,83886592,69206016,85983232,69206528,85983744],pc2bytes12=[0,4096,134217728,134221824,
524288,528384,134742016,134746112,16,4112,134217744,134221840,524304,528400,134742032,134746128],pc2bytes13=[0,4,256,260,0,4,256,260,1,5,257,261,1,5,257,261];var iterations=key.length()>8?3:1;var keys=[];var shifts=[0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,0];var n=0,tmp;for(var j=0;j<iterations;j++){var left=key.getInt32();var right=key.getInt32();tmp=(left>>>4^right)&252645135;right^=tmp;left^=tmp<<4;tmp=(right>>>-16^left)&65535;left^=tmp;right^=tmp<<-16;tmp=(left>>>2^right)&858993459;right^=tmp;left^=tmp<<
2;tmp=(right>>>-16^left)&65535;left^=tmp;right^=tmp<<-16;tmp=(left>>>1^right)&1431655765;right^=tmp;left^=tmp<<1;tmp=(right>>>8^left)&16711935;left^=tmp;right^=tmp<<8;tmp=(left>>>1^right)&1431655765;right^=tmp;left^=tmp<<1;tmp=left<<8|right>>>20&240;left=right<<24|right<<8&16711680|right>>>8&65280|right>>>24&240;right=tmp;for(var i=0;i<shifts.length;++i){if(shifts[i]){left=left<<2|left>>>26;right=right<<2|right>>>26}else{left=left<<1|left>>>27;right=right<<1|right>>>27}left&=-15;right&=-15;var lefttmp=
pc2bytes0[left>>>28]|pc2bytes1[left>>>24&15]|pc2bytes2[left>>>20&15]|pc2bytes3[left>>>16&15]|pc2bytes4[left>>>12&15]|pc2bytes5[left>>>8&15]|pc2bytes6[left>>>4&15];var righttmp=pc2bytes7[right>>>28]|pc2bytes8[right>>>24&15]|pc2bytes9[right>>>20&15]|pc2bytes10[right>>>16&15]|pc2bytes11[right>>>12&15]|pc2bytes12[right>>>8&15]|pc2bytes13[right>>>4&15];tmp=(righttmp>>>16^lefttmp)&65535;keys[n++]=lefttmp^tmp;keys[n++]=righttmp^tmp<<16}}return keys}function _updateBlock(keys,input,output,decrypt){var iterations=
keys.length===32?3:9;var looping;if(iterations===3)looping=decrypt?[30,-2,-2]:[0,32,2];else looping=decrypt?[94,62,-2,32,64,2,30,-2,-2]:[0,32,2,62,30,-2,64,96,2];var tmp;var left=input[0];var right=input[1];tmp=(left>>>4^right)&252645135;right^=tmp;left^=tmp<<4;tmp=(left>>>16^right)&65535;right^=tmp;left^=tmp<<16;tmp=(right>>>2^left)&858993459;left^=tmp;right^=tmp<<2;tmp=(right>>>8^left)&16711935;left^=tmp;right^=tmp<<8;tmp=(left>>>1^right)&1431655765;right^=tmp;left^=tmp<<1;left=left<<1|left>>>31;
right=right<<1|right>>>31;for(var j=0;j<iterations;j+=3){var endloop=looping[j+1];var loopinc=looping[j+2];for(var i=looping[j];i!=endloop;i+=loopinc){var right1=right^keys[i];var right2=(right>>>4|right<<28)^keys[i+1];tmp=left;left=right;right=tmp^(spfunction2[right1>>>24&63]|spfunction4[right1>>>16&63]|spfunction6[right1>>>8&63]|spfunction8[right1&63]|spfunction1[right2>>>24&63]|spfunction3[right2>>>16&63]|spfunction5[right2>>>8&63]|spfunction7[right2&63])}tmp=left;left=right;right=tmp}left=left>>>
1|left<<31;right=right>>>1|right<<31;tmp=(left>>>1^right)&1431655765;right^=tmp;left^=tmp<<1;tmp=(right>>>8^left)&16711935;left^=tmp;right^=tmp<<8;tmp=(right>>>2^left)&858993459;left^=tmp;right^=tmp<<2;tmp=(left>>>16^right)&65535;right^=tmp;left^=tmp<<16;tmp=(left>>>4^right)&252645135;right^=tmp;left^=tmp<<4;output[0]=left;output[1]=right}function _createCipher(options){options=options||{};var mode=(options.mode||"CBC").toUpperCase();var algorithm="DES-"+mode;var cipher;if(options.decrypt)cipher=
forge.cipher.createDecipher(algorithm,options.key);else cipher=forge.cipher.createCipher(algorithm,options.key);var start=cipher.start;cipher.start=function(iv,options){var output=null;if(options instanceof forge.util.ByteBuffer){output=options;options={}}options=options||{};options.output=output;options.iv=iv;start.call(cipher,options)};return cipher}}var name="des";if(typeof define!=="function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,
module)}}else{if(typeof forge==="undefined")forge={};return initModule(forge)}var deps;var defineFunc=function(require,module){module.exports=function(forge){var mods=deps.map(function(dep){return require(dep)}).concat(initModule);forge=forge||{};forge.defined=forge.defined||{};if(forge.defined[name])return forge[name];forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);return forge[name]}};var tmpDefine=define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):
ids.slice(2);if(nodeJS){delete define;return tmpDefine.apply(null,Array.prototype.slice.call(arguments,0))}define=tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,0))};define(["require","module","./cipher","./cipherModes","./util"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,0))})})();var sofo={crypto:{},pki:{},utils:{},tls:{},cms:{},storage:{},cmp:{},error:{}};(function(){function initModule(forge){if(forge.random&&forge.random.getBytes)return;(function(jQuery){var prng_aes={};var _prng_aes_output=new Array(4);var _prng_aes_buffer=forge.util.createBuffer();prng_aes.formatKey=function(key){var tmp=forge.util.createBuffer(key);key=new Array(4);key[0]=tmp.getInt32();key[1]=tmp.getInt32();key[2]=tmp.getInt32();key[3]=tmp.getInt32();return forge.aes._expandKey(key,false)};prng_aes.formatSeed=function(seed){var tmp=forge.util.createBuffer(seed);seed=new Array(4);
seed[0]=tmp.getInt32();seed[1]=tmp.getInt32();seed[2]=tmp.getInt32();seed[3]=tmp.getInt32();return seed};prng_aes.cipher=function(key,seed){forge.aes._updateBlock(key,seed,_prng_aes_output,false);_prng_aes_buffer.putInt32(_prng_aes_output[0]);_prng_aes_buffer.putInt32(_prng_aes_output[1]);_prng_aes_buffer.putInt32(_prng_aes_output[2]);_prng_aes_buffer.putInt32(_prng_aes_output[3]);return _prng_aes_buffer.getBytes()};prng_aes.increment=function(seed){++seed[3];return seed};prng_aes.md=forge.md.sha256;
function spawnPrng(){var ctx=forge.prng.create(prng_aes);ctx.getBytes=function(count,callback){return ctx.generate(count,callback)};ctx.getBytesSync=function(count){return ctx.generate(count)};ctx.nextBytes=function(x){var b=ctx.getBytesSync(x.length);for(var i=0;i<x.length;++i)x[i]=b.charCodeAt(i)};return ctx}var _ctx=spawnPrng();var _nodejs=typeof process!=="undefined"&&process.versions&&process.versions.node;var getRandomValues=null;if(typeof window!=="undefined"){var _crypto=window.crypto||window.msCrypto;
if(_crypto&&_crypto.getRandomValues)getRandomValues=function(arr){return _crypto.getRandomValues(arr)}}if(forge.disableNativeCode||!_nodejs&&!getRandomValues){if(typeof window==="undefined"||window.document===undefined);_ctx.collectInt(+new Date,32);if(typeof navigator!=="undefined"){var _navBytes="";for(var key in navigator)try{if(key!="cookieEnabled"){if(typeof navigator[key]=="string")_navBytes+=navigator[key]}else _navBytes+=false}catch(e){}_ctx.collect(_navBytes);_navBytes=null}if(jQuery){jQuery().mousemove(function(e){_ctx.collectInt(e.clientX,
16);_ctx.collectInt(e.clientY,16)});jQuery().keypress(function(e){_ctx.collectInt(e.charCode,8)})}}if(!forge.random)forge.random=_ctx;else for(var key in _ctx)forge.random[key]=_ctx[key];forge.random.createInstance=spawnPrng})(typeof jQuery!=="undefined"?jQuery:null)}var name="random";if(typeof define!=="function")if(typeof module==="object"&&module.exports){var nodeJS=true;define=function(ids,factory){factory(require,module)}}else{if(typeof forge==="undefined")forge={};return initModule(forge)}var deps;
var defineFunc=function(require,module){module.exports=function(forge){var mods=deps.map(function(dep){return require(dep)}).concat(initModule);forge=forge||{};forge.defined=forge.defined||{};if(forge.defined[name])return forge[name];forge.defined[name]=true;for(var i=0;i<mods.length;++i)mods[i](forge);return forge[name]}};var tmpDefine=define;define=function(ids,factory){deps=typeof ids==="string"?factory.slice(2):ids.slice(2);if(nodeJS){delete define;return tmpDefine.apply(null,Array.prototype.slice.call(arguments,
0))}define=tmpDefine;return define.apply(null,Array.prototype.slice.call(arguments,0))};define(["require","module","./aes","./md","./prng","./util"],function(){defineFunc.apply(null,Array.prototype.slice.call(arguments,0))})})();(function(){sofo.crypto.SHA1=function(input){var md=forge.md.sha1.create();md.update(input);return md.digest()};sofo.crypto.SHA256=function(input){var md=forge.md.sha256.create();md.update(input);return md.digest()};sofo.crypto.SHA512=function(input){var md=forge.md.sha512.create();md.update(input);return md.digest()};sofo.crypto.MD5=function(input,inputLength){var md=forge.md.md5.create();var str=input;if(inputLength!==undefined||inputLength!==null)str=input.toString().slice(0,inputLength);md.update(str);
return md.digest()};sofo.crypto.HMAC=function(input,key){var hmac=forge.hmac.create();hmac.start("sha1",key);hmac.update(input);return hmac.digest()};sofo.crypto.hashUpdate=function(input,hashValue,alg){var md,mdFn,strCat;switch(alg){case "sha1":mdFn=sofo.crypto.SHA1;break;case "sha256":mdFn=sofo.crypto.SHA256;break;case "sha512":mdFn=sofo.crypto.SHA512;break;default:throw new Error("Unsupported hash algorithm "+alg);break}strCat=input.concat(hashValue.toString());md=mdFn(strCat);return md};sofo.crypto.encrypt=
function(input,key,iv,cipher){var output=null;if(input!==undefined){var keyLen,ivLen,ciphFn;var inputBuff=forge.util.createBuffer(input,"utf8");switch(cipher){case "seedCBC":keyLen=16;ivLen=16;ciphFn=forge.seed.createEncryptionCipher;break;case "aesCBC":keyLen=16;ivLen=16;ciphFn=forge.aes.createEncryptionCipher;break;default:throw new Error('Unsupperted symmetric cipher "'+cipher+'"');break}var ciph=ciphFn(key,"CBC");ciph.start(forge.util.createBuffer(iv));ciph.update(inputBuff);if(!ciph.finish())throw new Error("Symmetric encryption failed.");
output=ciph.output}return output.data};sofo.crypto.decrypt=function(input,key,iv,cipher){if(input!==undefined){var keyLen,ivLen,ciphFn;var inputBuff=forge.util.createBuffer(input);switch(cipher){case "seedCBC":keyLen=16;ivLen=16;ciphFn=forge.seed.createDecryptionCipher;break;case "aesCBC":keyLen=16;ivLen=16;ciphFn=forge.aes.createDecryptionCipher;break;default:throw new Error('Unsupperted symmetric cipher "'+cipher+'"');break}var ciph=ciphFn(key,"CBC");ciph.start(forge.util.createBuffer(iv));ciph.update(inputBuff);
if(!ciph.finish())throw new Error("Symmetric decryption failed.");output=ciph.output}return output.data};var cmac={};cmac.create=function(){var ctx={};var _cipher=null;var _cipherOut=null;ctx.start=function(cipher,key){if(key.length>8)key=key.substring(0,8);_cipher=cipher.startEncrypting(forge.util.createBuffer(key),forge.util.hexToBytes("0000000000000000"))};ctx.update=function(bytes){if(typeof bytes=="string")bytes=forge.util.createBuffer(bytes);var blockSize=8;var block;block=forge.util.createBuffer(bytes.getBytes(blockSize));
_cipher.update(block);_cipher.update(bytes)};ctx.getMac=function(){var output;var blockSize;_cipher.finish(function(size,input,flag){var padding;padding=size-input.length()%size;input.fillWithByte(0,padding);blockSize=size;return true});_cipher.output.read=_cipher.output.length()-blockSize;output=_cipher.output.getBytes(blockSize);return forge.util.createBuffer(output)};return ctx};sofo.crypto.cmac=cmac})();(function(){if(typeof BigInteger==="undefined")var BigInteger=forge.jsbn.BigInteger;var asn1=forge.asn1;var pki=sofo.pki=sofo.pki||{};pki.pbe=sofo.pbe=sofo.pbe||{};var error=sofo.error||{};forge.pki.oids["1.2.410.200004.1.4"]="seedCBC";forge.pki.oids["seedCBC"]="1.2.410.200004.1.4";forge.pki.oids["1.2.410.200004.1.15"]="seedCBCWithSHA1";forge.pki.oids["seedCBCWithSHA1"]="1.2.410.200004.1.15";forge.pki.oids["1.2.410.200004.10.1.1.1"]="VID";forge.pki.oids["VID"]="1.2.410.200004.10.1.1.1";forge.pki.oids["1.2.410.200004.10.1.1.2"]=
"EncryptedVID";forge.pki.oids["EncryptedVID"]="1.2.410.200004.10.1.1.2";forge.pki.oids["1.2.410.200004.10.1.1.3"]="randomNum";forge.pki.oids["randomNum"]="1.2.410.200004.10.1.1.3";var XW_SECUREINPUT_NATIVEINPUT=0;var XW_SECUREINPUT_XECUREKEYPADHTML5=13;var secureInput=null;function _dnToString(dn){var str=[];dn.attributes.forEach(function(attr){str.push(attr.shortName.toLowerCase()+"="+attr.value)});return forge.util.decodeUtf8(str.reverse().join(","))}var UPDATE_LIMIT=2592E3;function _getValidStatue(from,
to){var status=0;var diff=(to.getTime()-from.getTime())/1E3;if(diff<0)status=2;else if(diff>UPDATE_LIMIT)status=0;else status=1;return status}function _decryptKeyword(aKey){if(!aKey)return null;if(!secureInput)return aKey;var aType=-1;var aValue="";if(typeof aKey==="string"){var aIndex=aKey.indexOf("$");if(aIndex==-1)return null;aType=parseInt(aKey.substring(0,aIndex));if(aKey.length>aIndex+1)aValue=aKey.substring(aIndex+1)}else if(typeof aKey==="object"){if(typeof aKey.type!=="number")return null;
aType=aKey.type;if(aType==XW_SECUREINPUT_XECUREKEYPADHTML5){if(!aKey.keypad||aKey.keypad==null||aKey.keypad=="undefined")return null}else return null}else return null;var sInput=secureInput.split("$");var sType=0;var sData="";var find=false;for(var i=0;i<sInput.length;i++){var aIndex=sInput[i].indexOf("|");if(aIndex==-1)sType=parseInt(sInput[i]);else{sType=parseInt(sInput[i].substring(0,aIndex));if(sInput[i].length>aIndex+1)sData=sInput[i].substring(aIndex+1)}if(sType==aType){find=true;break}}if(!find)return null;
if(aType==XW_SECUREINPUT_NATIVEINPUT)return aValue;else if(aType==XW_SECUREINPUT_XECUREKEYPADHTML5)return aKey.keypad.get_input();else return null}pki._setSecureInput=function(aKey){secureInput=aKey};pki._getSecureInput=function(){return secureInput};pki.checkKeywordLen=function(aKeyword,aKeywordconfirm,aConfirm){var key1=_decryptKeyword(aKeyword);if(!key1){error.setError(error.ERROR_INCORRECT_PARAM);return-1}var key2=_decryptKeyword(aKeywordconfirm);if(!key2){error.setError(error.ERROR_INCORRECT_PARAM);
return-1}if(key1.length<8||key1.length>56){error.setError(error.ERROR_INPUT_LENGTH);return-3}var haveNum=false;var haveChar=false;for(var i=0;i<key1.length;i++){var keyCode=key1.charCodeAt(i);if(keyCode>47&&keyCode<58)haveNum=true;else haveChar=true}if(!haveNum||!haveChar){error.setError(error.ERROR_PASSWORD_IS_WRONG);return-4}if(aConfirm)if(key1!=key2){error.setError(error.ERROR_CONFIRMED_PASSWORD_DOES_NOT_MATCH);return-5}return 0};pki.checkKeywordLenExt=function(aKeyword,aKeywordconfirm,aConfirm){var key1=
_decryptKeyword(aKeyword);if(!key1){error.setError(error.ERROR_INCORRECT_PARAM);return-1}var key2=_decryptKeyword(aKeywordconfirm);if(!key2){error.setError(error.ERROR_INCORRECT_PARAM);return-1}if(key1.length<10||key1.length>56){error.setError(error.ERROR_INPUT_LENGTH_10);return-1}var haveNum=false;var haveChar=false;var havePunct=false;for(var i=0;i<key1.length;i++){var keyCode=key1.charCodeAt(i);if(keyCode==34||keyCode==39||keyCode==92||keyCode==124){error.setError(error.ERROR_PASSWORD_NOT_ALLOW_CHARACTER);
return-2}if(keyCode>47&&keyCode<58)haveNum=true;else if(keyCode>64&&keyCode<91||keyCode>96&&keyCode<123)haveChar=true;else havePunct=true}if(!haveNum||!haveChar||!havePunct){error.setError(error.ERROR_PASSWORD_MIX_DISIT_ALPHA_PUNCT);return-3}if(aConfirm)if(key1!=key2){error.setError(error.ERROR_CONFIRMED_PASSWORD_DOES_NOT_MATCH);return-4}return 0};pki.pbe.getCipherForSEED=function(params,keyword,encryption){var salt;var iteration;var derivedKey;var key;var iv;var keyLength=16;var ivLength=16;var cipherFn;
var mode="CBC";salt=params.value[0].value;iteration=asn1.derToInteger(params.value[1].value);derivedKey=pki.pbe.seedkdf(keyword,salt,iteration);key=derivedKey.substr(0,keyLength);iv=forge.md.sha1.create().update(derivedKey.substr(keyLength)).digest().getBytes().substr(0,ivLength);if(encryption)cipherFn=forge.seed.createEncryptionCipher;else cipherFn=forge.seed.createDecryptionCipher;var cipher=cipherFn(key,mode);cipher.start(iv);return cipher};pki.pbe.seedkdf=function(keyword,salt,iteration){var md;
var digest;md=forge.md.sha1.create();md.update(keyword);md.update(salt);digest=md.digest().getBytes();for(var iter=1;iter<iteration;++iter){md.start();md.update(digest);digest=md.digest().getBytes()}return digest};var privateKeyValidator={name:"PrivateKeyInfo",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"PrivateKeyInfo.version",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"privateKeyVersion"},{name:"PrivateKeyInfo.privateKeyAlgorithm",
tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,capture:"privateKeyOid"},{name:"AlgorithmIdentifier.parameters",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,captureAsn1:"parameters",optional:true}]},{name:"PrivateKeyInfo",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OCTETSTRING,constructed:false,capture:"privateKey"},{name:"PrivateKeyInfo.attributes",
tagClass:asn1.Class.CONTEXT_SPECIFIC,type:0,constructed:true,captureAsn1:"attributes",optional:true}]};var encryptedPrivateKeyValidator={name:"EncryptedPrivateKeyInfo",tagClass:0,type:16,constructed:true,value:[{name:"EncryptedPrivateKeyInfo.encryptionAlgorithm",tagClass:0,type:16,constructed:true,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:0,type:6,constructed:false,capture:"encryptionOid"},{name:"AlgorithmIdentifier.parameters",tagClass:0,type:16,constructed:true,captureAsn1:"encryptionParams"}]},
{name:"EncryptedPrivateKeyInfo.encryptedData",tagClass:0,type:4,constructed:false,capture:"encryptedData"}]};pki.privateKeyFromAsn1=function(obj){var capture={};var errors=[];var params;if(asn1.validate(obj,privateKeyValidator,capture,errors)){if(capture.parameters)params=capture.parameters;obj=asn1.fromDer(forge.util.createBuffer(capture.privateKey))}var randomNum;if(capture.attributes){var oid;var values;var value;capture.attributes.value.forEach(function(attribute){oid=asn1.derToOid(attribute.value[0].value);
values=attribute.value[1].value;if(oid==forge.pki.oids.randomNum){value=forge.util.createBuffer(values[0].value);++value.read;value=value.getBytes();randomNum=value}})}var key;var pkeyOid=asn1.derToOid(capture.privateKeyOid);if(pkeyOid==forge.pki.oids.rsaEncryption)return forge.pki.rsa.privateKeyFromAsn1(obj,randomNum);else if(pkeyOid==forge.pki.oids.kcdsa1)return forge.pki.kcdsa.privateKeyFromAsn1(obj,params,randomNum)};pki.encryptPrivateKeyInfo=function(obj,keyword,options){if(options.algorithm===
"seed"){var salt=forge.random.getBytes(8);var iteration=2048;var oid=forge.pki.oids["seedCBCWithSHA1"];var params=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,salt),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,asn1.integerToDer(iteration).getBytes())]);var rsaKey=obj;var cipher=pki.pbe.getCipherForSEED(params,keyword,true);var bakey=asn1.toDer(rsaKey).getBytes();cipher.update(forge.util.createBuffer(bakey));cipher.finish();
var rval=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[]);rval.value.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(oid).getBytes()),params]));rval.value.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,cipher.output.getBytes()));return rval}else return forge.pki.encryptPrivateKeyInfo(obj,keyword,options)};pki.decryptPrivateKeyInfo=function(obj,keyword){var rval=null;var capture={};var errors=
[];if(!asn1.validate(obj,encryptedPrivateKeyValidator,capture,errors)){var err=new Error("Cannot read encrypted private key. "+"ASN.1 object is not a supported EncryptedPrivateKeyInfo.");err.errors=errors;throw err;}var cipher;var oid=asn1.derToOid(capture.encryptionOid);if(oid==forge.pki.oids["seedCBCWithSHA1"])cipher=pki.pbe.getCipherForSEED(capture.encryptionParams,keyword,false);else cipher=forge.pki.pbe.getCipher(oid,capture.encryptionParams,keyword);var encrypted=forge.util.createBuffer(capture.encryptedData);
cipher.update(encrypted);if(cipher.finish())rval=asn1.fromDer(cipher.output);return rval};var publicKeyValidator={name:"SubjectPublicKeyInfo",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,captureAsn1:"subjectPublicKeyInfo",value:[{name:"SubjectPublicKeyInfo.AlgorithmIdentifier",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"AlgorithmIdentifier.algorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,capture:"publicKeyOid"},
{name:"AlgorithmIdentifier.parameters",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,captureAsn1:"parameters",optional:true}]},{name:"SubjectPublicKeyInfo.subjectPublicKey",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.BITSTRING,constructed:false,capture:"publicKey"}]};pki.publicKeyFromAsn1=function(obj){var capture={};var errors=[];var params;var oid;if(asn1.validate(obj,publicKeyValidator,capture,errors)){oid=asn1.derToOid(capture.publicKeyOid);if(oid!==forge.pki.oids.rsaEncryption&&
oid!==forge.pki.oids.kcdsa1){var error=new Error("Cannot read public key. Unknown OID.");error.oid=oid;throw error;}if(capture.parameters)params=capture.parameters;obj=capture.publicKey[0]}if(oid===forge.pki.oids.rsaEncryption)return forge.rsa.publicKeyFromAsn1(obj);else if(oid===forge.pki.oids.kcdsa1)return forge.kcdsa.publicKeyFromAsn1(obj,params);else{var error=new Error("Cannot read public key.");error.oid=oid;throw error;}};pki.publicKeyToAsn1=pki.publicKeyToSubjectPublicKeyInfo=function(key){if(key.kcdsa)return forge.pki.kcdsa.publicKeyToAsn1(key);
else return forge.pki.rsa.publicKeyToAsn1(key)};pki.wrapPrivateKey=function(privateKey,randomNum){if(privateKey.kcdsa)return forge.pki.wrapKcdsaPrivateKey(forge.pki.privateKeyToKCDSAPrivateKey(privateKey),forge.pki.parametersToAsn1(privateKey),randomNum);else return forge.pki.wrapRsaPrivateKey(forge.pki.privateKeyToAsn1(privateKey),randomNum)};function _fromAsn1(msg,obj,validator){var capture={};var errors=[];if(!asn1.validate(obj,validator,capture,errors)){var error=new Error("Cannot read PKCS#7 message. "+
"ASN.1 object is not a supported PKCS#7 message.");error.errors=error;throw error;}var contentType=asn1.derToOid(capture.contentType);if(contentType!==forge.pki.oids.data)throw new Error("Unsupported PKCS#7 message. "+"Only wrapped ContentType Data supported.");if(capture.encryptedContent){var content="";if(forge.util.isArray(capture.encryptedContent))for(var i=0;i<capture.encryptedContent.length;++i){if(capture.encryptedContent[i].type!==asn1.Type.OCTETSTRING)throw new Error("Malformed PKCS#7 message, expecting encrypted "+
"content constructed of only OCTET STRING objects.");content+=capture.encryptedContent[i].value}else content=capture.encryptedContent;msg.encryptedContent={algorithm:asn1.derToOid(capture.encAlgorithm),parameter:forge.util.createBuffer(capture.encParameter.value),content:forge.util.createBuffer(content)}}if(capture.content){var content="";if(forge.util.isArray(capture.content))for(var i=0;i<capture.content.length;++i){if(capture.content[i].type!==asn1.Type.OCTETSTRING)throw new Error("Malformed PKCS#7 message, expecting "+
"content constructed of only OCTET STRING objects.");content+=capture.content[i].value}else content=capture.content;msg.content=forge.util.createBuffer(content)}msg.version=capture.version.charCodeAt(0);msg.rawCapture=capture;return capture}function _signersToAsn1(signers){var ret=[];for(var i=0;i<signers.length;++i)ret.push(_signerToAsn1(signers[i]));return ret}function _signerToAsn1(obj){var rval=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,
false,asn1.integerToDer(obj.version).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[forge.pki.distinguishedNameToAsn1({attributes:obj.issuer}),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,forge.util.hexToBytes(obj.serialNumber))]),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(obj.digestAlgorithm).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.NULL,false,"")])]);if(obj.authenticatedAttributesAsn1)rval.value.push(obj.authenticatedAttributesAsn1);
rval.value.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(obj.signatureAlgorithm).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.NULL,false,"")]));rval.value.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,obj.signature));if(obj.unauthenticatedAttributes.length>0){var attrsAsn1=asn1.create(asn1.Class.CONTEXT_SPECIFIC,1,true,[]);for(var i=0;i<obj.unauthenticatedAttributes.length;++i){var attr=
obj.unauthenticatedAttributes[i];attrsAsn1.values.push(_attributeToAsn1(attr))}rval.value.push(attrsAsn1)}return rval}function _attributeToAsn1(attr){var value;if(attr.type===forge.pki.oids.contentType)value=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(attr.value).getBytes());else if(attr.type===forge.pki.oids.messageDigest)value=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,attr.value.bytes());else if(attr.type===forge.pki.oids.signingTime){var jan_1_1950=new Date("Jan 1, 1950 00:00:00Z");
var jan_1_2050=new Date("Jan 1, 2050 00:00:00Z");var date=attr.value;if(typeof date==="string"){var timestamp=Date.parse(date);if(!isNaN(timestamp))date=new Date(timestamp);else if(date.length===13)date=asn1.utcTimeToDate(date);else date=asn1.generalizedTimeToDate(date)}if(date>=jan_1_1950&&date<jan_1_2050)value=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.UTCTIME,false,asn1.dateToUtcTime(date));else value=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.GENERALIZEDTIME,false,asn1.dateToGeneralizedTime(date))}return asn1.create(asn1.Class.UNIVERSAL,
asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(attr.type).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SET,true,[value])])}pki.createSignedData=function(){var msg=null;msg={base:forge.pkcs7.createSignedData(),fromAsn1:function(obj){_fromAsn1(msg.base,obj,forge.pkcs7.asn1.signedDataValidator);msg.base.certificates=[];msg.base.crls=[];msg.base.digestAlgorithmIdentifiers=[];msg.base.contentInfo=null;msg.base.signerInfos=[];var certs=msg.base.rawCapture.certificates.value;
for(var i=0;i<certs.length;++i)msg.base.certificates.push(forge.pki.certificateFromAsn1(certs[i]));msg.base.signerInfos=msg.base.rawCapture.signerInfos;msg.base.digestAlgorithmIdentifiers=msg.base.rawCapture.digestAlgorithms.value;if(msg.base.rawCapture.content)msg.base.content=forge.util.createBuffer(msg.base.rawCapture.content.value[0].value);else msg.base.content=null},toAsn1:function(option){if(!msg.base.contentInfo)msg.base.sign();if(option&SIGN_OPTION_PKCS1){if(!msg.base.signerInfos)return null;
var capture={};var errors=[];if(!asn1.validate(msg.base.signerInfos[0],signerInfoValidator,capture,errors)){var err=new Error("Cannot read PKCS#7 message. "+"ASN.1 object is not an PKCS#7 SignerInfo.");err.errors=errors;throw err;}var signature=capture.signature;if(typeof signature=="object")return asn1.toDer(signature[0]).getBytes();else return signature}var certs=[];for(var i=0;i<msg.base.certificates.length;++i)certs.push(forge.pki.certificateToAsn1(msg.base.certificates[i]));var crls=[];if(option&
SIGN_OPTION_NO_CONTENT)msg.base.contentInfo.value.splice(1,1);var signedData=asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,asn1.integerToDer(msg.base.version).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SET,true,msg.base.digestAlgorithmIdentifiers),msg.base.contentInfo])]);if(certs.length>0)signedData.value[0].value.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,certs));
if(crls.length>0)signedData.value[0].value.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,1,true,crls));signedData.value[0].value.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SET,true,msg.base.signerInfos));if(option&SIGN_OPTION_NO_CMS)return signedData.value[0];else return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(msg.base.type).getBytes()),signedData])},addSigner:function(signer){var issuer=signer.issuer;var serialNumber=
signer.serialNumber;if(signer.certificate){var cert=signer.certificate;if(typeof cert==="string")cert=forge.pki.certificateFromPem(cert);issuer=cert.issuer.attributes;serialNumber=cert.serialNumber}var key=signer.key;if(!key)throw new Error("Could not add PKCS#7 signer; no private key specified.");if(typeof key==="string")key=forge.pki.privateKeyFromPem(key);var digestAlgorithm=signer.digestAlgorithm||forge.pki.oids.sha1;switch(digestAlgorithm){case forge.pki.oids.sha1:case forge.pki.oids.sha256:case forge.pki.oids.sha384:case forge.pki.oids.sha512:case forge.pki.oids.md5:break;
default:throw new Error("Could not add PKCS#7 signer; unknown message digest algorithm: "+digestAlgorithm);}var authenticatedAttributes=signer.authenticatedAttributes||[];if(authenticatedAttributes.length>0){var contentType=false;var messageDigest=false;for(var i=0;i<authenticatedAttributes.length;++i){var attr=authenticatedAttributes[i];if(!contentType&&attr.type===forge.pki.oids.contentType){contentType=true;if(messageDigest)break;continue}if(!messageDigest&&attr.type===forge.pki.oids.messageDigest){messageDigest=
true;if(contentType)break;continue}}if(!contentType||!messageDigest)throw new Error("Invalid signer.authenticatedAttributes. If "+"signer.authenticatedAttributes is specified, then it must "+"contain at least two attributes, PKCS #9 content-type and "+"PKCS #9 message-digest.");}var signatureAlgorithm;var publicKey;if(signer.certificate.publicKeyOid==forge.pki.oids.kcdsa1){switch(digestAlgorithm){case forge.pki.oids.has160:signatureAlgorithm=forge.pki.oids.kcdsa1WithHAS160;break;case forge.pki.oids.sha1:signatureAlgorithm=
forge.pki.oids.kcdsa1WithSHA1;break;case forge.pki.oids.sha256:signatureAlgorithm=forge.pki.oids.kcdsa1WithSHA256;break;default:throw new Error("Could not add PKCS#7 signer; unknown message signature algorithm: kcdsa,"+digestAlgorithm);}publicKey=signer.certificate.publicKey.y}else signatureAlgorithm=forge.pki.oids.rsaEncryption;msg.base.signers.push({key:key,version:1,issuer:issuer,serialNumber:serialNumber,digestAlgorithm:digestAlgorithm,signatureAlgorithm:signatureAlgorithm,publicKeyOid:signer.certificate.publicKeyOid,
publicKey:publicKey,signature:null,authenticatedAttributes:authenticatedAttributes,unauthenticatedAttributes:[]})},addCertificate:function(cert){msg.base.addCertificate(cert)},getCertificate:function(){return msg.base.certificates},sign:function(){if(typeof msg.base.content!=="object"||msg.base.contentInfo===null){msg.base.contentInfo=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(forge.pki.oids.data).getBytes())]);if("content"in
msg.base){var content;if(msg.base.content instanceof forge.util.ByteBuffer)content=msg.base.content.bytes();else if(typeof msg.base.content==="string")content=forge.util.encodeUtf8(msg.base.content);msg.base.contentInfo.value.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,content)]))}}if(msg.base.signers.length===0)return;var mds=addDigestAlgorithmIds();addSignerInfos(mds)},verify:function(){throw new Error("PKCS#7 signature verification not yet implemented.");
},setContent:function(content){msg.base.content=content}};return msg;function addDigestAlgorithmIds(){var mds={};if(msg.base.digestAlgorithmIdentifiers.length>0){var oid=asn1.derToOid(msg.base.digestAlgorithmIdentifiers[0].value[0].value);mds[oid]=forge.md[forge.pki.oids[oid]].create();for(var i=0;i<msg.base.signers.length;++i){var signer=msg.base.signers[i];if(signer.authenticatedAttributes.length===0)signer.md=mds[oid];else signer.md=forge.md[forge.pki.oids[oid]].create()}}else{for(var i=0;i<msg.base.signers.length;++i){var signer=
msg.base.signers[i];var oid=signer.digestAlgorithm;if(!(oid in mds))mds[oid]=forge.md[forge.pki.oids[oid]].create();if(signer.authenticatedAttributes.length===0)signer.md=mds[oid];else signer.md=forge.md[forge.pki.oids[oid]].create()}msg.base.digestAlgorithmIdentifiers=[];for(var oid in mds)msg.base.digestAlgorithmIdentifiers.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(oid).getBytes()),asn1.create(asn1.Class.UNIVERSAL,
asn1.Type.NULL,false,"")]))}return mds}function addSignerInfos(mds){if(msg.base.contentInfo.value.length<2)throw new Error("Could not sign PKCS#7 message; there is no content to sign.");var contentType=asn1.derToOid(msg.base.contentInfo.value[0].value);var content=msg.base.contentInfo.value[1];content=content.value[0];var bytes=asn1.toDer(content);bytes.getByte();asn1.getBerValueLength(bytes);bytes=bytes.getBytes();for(var oid in mds)mds[oid].start().update(bytes);var signingTime=new Date;for(var i=
0;i<msg.base.signers.length;++i){var signer=msg.base.signers[i];if(signer.authenticatedAttributes.length===0){if(contentType!==forge.pki.oids.data)throw new Error("Invalid signer; authenticatedAttributes must be present "+"when the ContentInfo content type is not PKCS#7 Data.");}else{signer.authenticatedAttributesAsn1=asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[]);var attrsAsn1=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SET,true,[]);for(var ai=0;ai<signer.authenticatedAttributes.length;++ai){var attr=
signer.authenticatedAttributes[ai];if(attr.type===forge.pki.oids.messageDigest)attr.value=mds[signer.digestAlgorithm].digest();else if(attr.type===forge.pki.oids.signingTime)if(!attr.value)attr.value=signingTime;attrsAsn1.value.push(_attributeToAsn1(attr));signer.authenticatedAttributesAsn1.value.push(_attributeToAsn1(attr))}bytes=asn1.toDer(attrsAsn1).getBytes();signer.md.start().update(bytes)}if(signer.publicKeyOid==forge.pki.oids.kcdsa1){var signature=signer.key.sign(signer.md.algorithm,bytes,
signer.publicKey);signer.signature=asn1.toDer(signature).getBytes()}else signer.signature=signer.key.sign(signer.md,"RSASSA-PKCS1-V1_5")}var signerInfos=_signersToAsn1(msg.base.signers);msg.base.signerInfos=msg.base.signerInfos.concat(signerInfos)}};pki.createEnvelopedData=function(){var msg=null;msg={base:forge.pkcs7.createEnvelopedData(),fromAsn1:function(obj){var capture=_fromAsn1(msg.base,obj,forge.pkcs7.asn1.envelopedDataValidator);if(capture.version.charCodeAt(0)==0)msg.base.recipients=_recipientsFromAsn1(capture.recipientInfos.value);
else msg.base.recipients.push(_recipient2FromAsn1(capture.recipientInfos.value[0]))},toAsn1:function(){if(msg.base.version==0)return msg.base.toAsn1();else return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(msg.base.type).getBytes()),asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,asn1.integerToDer(msg.base.version).getBytes()),
asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SET,true,[asn1.create(asn1.Class.CONTEXT_SPECIFIC,2,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,asn1.integerToDer(4).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,"")]),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(msg.base.recipients[0].encryptedContent.algorithm).getBytes()),
asn1.create(asn1.Class.UNIVERSAL,asn1.Type.NULL,false,"")]),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,msg.base.recipients[0].encryptedContent.content)])]),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(forge.pki.oids.data).getBytes()),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(msg.base.encryptedContent.algorithm).getBytes()),
asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,msg.base.encryptedContent.parameter.getBytes())]),asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,false,msg.base.encryptedContent.content.getBytes())])])])])},findRecipient:function(cert){if(typeof cert==="number")return msg.base.recipients[cert];else return msg.base.findRecipient(cert)},decrypt:function(recipient,privKey){if(msg.base.version==0){if(msg.base.encryptedContent.key===undefined&&recipient!==undefined&&privKey!==undefined)switch(recipient.encryptedContent.algorithm){case forge.pki.oids.rsaEncryption:case forge.pki.oids.desCBC:var key=
privKey.decrypt(recipient.encryptedContent.content);msg.base.encryptedContent.key=forge.util.createBuffer(key);break;default:throw new Error("Unsupported asymmetric cipher, "+"OID "+recipient.encryptedContent.algorithm);}}else switch(recipient.encryptedContent.algorithm){case forge.pki.oids.seedCBC:var md=forge.md.md5.create();md.update(privKey);var enckey=forge.util.createBuffer(md.digest().getBytes());var tmp=forge.util.createBuffer();var ivLen=16;for(var i=0;i<ivLen;i++)tmp.putByte(0);var enciv=
tmp.getBytes();var ciphFn=forge.seed.createDecryptionCipher;var ciph=ciphFn(enckey,"CBC");ciph.start(enciv);ciph.update(forge.util.createBuffer(recipient.encryptedContent.content));if(!ciph.finish())throw new Error("Symmetric encryption failed.");msg.base.encryptedContent.key=forge.util.createBuffer(ciph.output);break;default:throw new Error("Unsupported asymmetric cipher, "+"OID "+recipient.encryptedContent.algorithm);}_decryptContent(msg.base)},addRecipient:function(cert){msg.base.addRecipient(cert)},
encrypt:function(passwd){var cipher=forge.pki.oids["seedCBC"];var mode="CBC";var keyLen=16;var ivLen=16;var ciphFn=forge.seed.createEncryptionCipher;var key=forge.util.createBuffer(forge.random.getBytes(keyLen));msg.base.encryptedContent.algorithm=cipher;msg.base.encryptedContent.key=key;msg.base.encryptedContent.parameter=forge.util.createBuffer(forge.random.getBytes(ivLen));var ciph=ciphFn(key,mode);ciph.start(msg.base.encryptedContent.parameter.copy());ciph.update(msg.base.content);if(!ciph.finish())throw new Error("Symmetric encryption failed.");
msg.base.encryptedContent.content=ciph.output;if(passwd){var md=forge.md.md5.create();md.update(passwd);var enckey=forge.util.createBuffer(md.digest().getBytes());var tmp=forge.util.createBuffer();for(var i=0;i<ivLen;i++)tmp.putByte(0);var enciv=tmp.getBytes();var ciphenc=ciphFn(enckey,mode);ciphenc.start(enciv);ciphenc.update(msg.base.encryptedContent.key);if(!ciphenc.finish())throw new Error("Symmetric encryption failed.");msg.base.version=2;msg.base.recipients.push({encryptedContent:{algorithm:cipher,
content:ciphenc.output.getBytes()}})}else for(var i=0;i<msg.base.recipients.length;++i){var recipient=msg.base.recipients[i];if(recipient.encryptedContent.content!==undefined)continue;switch(recipient.encryptedContent.algorithm){case forge.pki.oids.rsaEncryption:recipient.encryptedContent.content=recipient.encryptedContent.key.encrypt(msg.base.encryptedContent.key.data);break;default:throw new Error("Unsupported asymmetric cipher, OID "+recipient.encryptedContent.algorithm);}}},setContent:function(content){msg.base.content=
content},getContent:function(){return msg.base.content}};return msg};var recipientInfoValidator={name:"RecipientInfo",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"RecipientInfo.version",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"version"},{name:"RecipientInfo.issuerAndSerial",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"RecipientInfo.issuerAndSerial.issuer",tagClass:asn1.Class.UNIVERSAL,
type:asn1.Type.SEQUENCE,constructed:true,captureAsn1:"issuer"},{name:"RecipientInfo.issuerAndSerial.serialNumber",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"serial"}]},{name:"RecipientInfo.keyEncryptionAlgorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"RecipientInfo.keyEncryptionAlgorithm.algorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,capture:"encAlgorithm"},{name:"RecipientInfo.keyEncryptionAlgorithm.parameter",
tagClass:asn1.Class.UNIVERSAL,constructed:false,captureAsn1:"encParameter"}]},{name:"RecipientInfo.encryptedKey",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OCTETSTRING,constructed:false,capture:"encKey"}]};var recipient2InfoValidator={name:"RecipientInfo",tagClass:asn1.Class.CONTEXT_SPECIFIC,type:2,constructed:true,value:[{name:"RecipientInfo.version",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"version"},{name:"RecipientInfo.identifier",tagClass:asn1.Class.UNIVERSAL,
type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"RecipientInfo.identifier.keyIdentifier",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OCTETSTRING,constructed:false,capture:"keyIdentifier"}]},{name:"RecipientInfo.keyEncryptionAlgorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"RecipientInfo.keyEncryptionAlgorithm.algorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,capture:"encAlgorithm"},{name:"RecipientInfo.keyEncryptionAlgorithm.parameter",
tagClass:asn1.Class.UNIVERSAL,constructed:false,captureAsn1:"encParameter"}]},{name:"RecipientInfo.encryptedKey",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OCTETSTRING,constructed:false,capture:"encKey"}]};function _recipientFromAsn1(obj){var capture={};var errors=[];if(!asn1.validate(obj,recipientInfoValidator,capture,errors)){var error=new Error("Cannot read PKCS#7 RecipientInfo. "+"ASN.1 object is not an PKCS#7 RecipientInfo.");error.errors=errors;throw error;}return{version:capture.version.charCodeAt(0),
issuer:forge.pki.RDNAttributesAsArray(capture.issuer),serialNumber:forge.util.createBuffer(capture.serial).toHex(),encryptedContent:{algorithm:asn1.derToOid(capture.encAlgorithm),parameter:capture.encParameter.value,content:capture.encKey}}}function _recipient2FromAsn1(obj){var capture={};var errors=[];if(!asn1.validate(obj,recipient2InfoValidator,capture,errors)){var error=new Error("Cannot read PKCS#7 RecipientInfo. "+"ASN.1 object is not an PKCS#7 RecipientInfo.");error.errors=errors;throw error;
}return{version:capture.version.charCodeAt(0),encryptedContent:{algorithm:asn1.derToOid(capture.encAlgorithm),parameter:capture.encParameter.value,content:capture.encKey}}}function _recipientsFromAsn1(infos){var ret=[];for(var i=0;i<infos.length;++i)ret.push(_recipientFromAsn1(infos[i]));return ret}function _decryptContent(msg){if(msg.encryptedContent.key===undefined)throw new Error("Symmetric key not available.");if(msg.content===undefined){var ciph;switch(msg.encryptedContent.algorithm){case forge.pki.oids["aes128-CBC"]:case forge.pki.oids["aes192-CBC"]:case forge.pki.oids["aes256-CBC"]:ciph=
forge.aes.createDecryptionCipher(msg.encryptedContent.key);break;case forge.pki.oids["desCBC"]:case forge.pki.oids["des-EDE3-CBC"]:ciph=forge.des.createDecryptionCipher(msg.encryptedContent.key);break;case forge.pki.oids["seedCBC"]:var ciphFn=forge.seed.createDecryptionCipher;ciph=ciphFn(msg.encryptedContent.key,"CBC");break;default:throw new Error("Unsupported symmetric cipher, OID "+msg.encryptedContent.algorithm);}ciph.start(msg.encryptedContent.parameter);ciph.update(msg.encryptedContent.content);
if(!ciph.finish())throw new Error("Symmetric decryption failed.");msg.content=ciph.output}}pki.checkPrivateKey=function(privatekey,keyword){var key=_decryptKeyword(keyword);if(!key){error.setError(error.ERROR_INCORRECT_PARAM);return-1}try{if(!pki.decryptPrivateKeyInfo(privatekey,key)){error.setError(error.ERROR_VERIFYPASSWORD);return-2}}catch(e){error.setError(error.ERROR_VERIFYPASSWORD,e);return-3}return 0};pki.changeEncryptPrivateKey=function(privateKey,oldKeyword,newKeyword){var deckey=null;var enckey=
null;var key1=_decryptKeyword(oldKeyword);if(!key1){error.setError(error.ERROR_INCORRECT_PARAM);return null}var key2=_decryptKeyword(newKeyword);if(!key2){error.setError(error.ERROR_INCORRECT_PARAM);return null}try{deckey=pki.decryptPrivateKeyInfo(privateKey,key1);if(!deckey){error.setError(error.ERROR_DECRYPT_PRIKEY);return null}}catch(e){error.setError(error.ERROR_DECRYPT_PRIKEY,e);return null}try{var option={};option.algorithm="seed";enckey=pki.encryptPrivateKeyInfo(deckey,key2,option);if(!enckey){error.setError(error.ERROR_ENCRYPT_PRIKEY);
return null}}catch(e){error.setError(error.ERROR_ENCRYPT_PRIKEY,e);return null}return enckey};var SIGN_OPTION_ENCODING_BASE64=256;var SIGN_OPTION_USE_SIGNEDATTRS=512;var SIGN_OPTION_NO_CONTENT=4096;var SIGN_OPTION_NO_CMS=65536;var SIGN_OPTION_PKCS1=8388608;pki.signData=function(certificate,privatekey,keyword,plain,option,encoding){encoding=encoding||"utf8";if(encoding=="utf-8")encoding="utf8";var pwd=_decryptKeyword(keyword);if(!pwd){error.setError(error.ERROR_INCORRECT_PARAM);return null}var key;
try{var prikey=pki.decryptPrivateKeyInfo(privatekey,pwd);if(!prikey){error.setError(error.ERROR_INCORRECT_PASSWORD);return null}key=pki.privateKeyFromAsn1(prikey)}catch(e){error.setError(error.ERROR_INCORRECT_PASSWORD,e);return null}try{var p7=sofo.pki.createSignedData();var alg;if(certificate.md.algorithm=="sha256")alg=forge.pki.oids.sha256;else alg=forge.pki.oids.sha1;if(encoding=="euc-kr")p7.setContent(sofo.utils.ucs2_to_ksc5601(plain));else p7.setContent(forge.util.createBuffer(plain,encoding));
p7.addCertificate(certificate);if(option&SIGN_OPTION_USE_SIGNEDATTRS&&!(option&SIGN_OPTION_PKCS1))p7.addSigner({key:key.key,certificate:certificate,digestAlgorithm:alg,authenticatedAttributes:[{type:forge.pki.oids.contentType,value:forge.pki.oids.data},{type:forge.pki.oids.signingTime,value:new Date},{type:forge.pki.oids.messageDigest}]});else p7.addSigner({key:key.key,certificate:certificate,digestAlgorithm:alg});p7.sign();var asn=p7.toAsn1(option);if(option&SIGN_OPTION_PKCS1)if(option&SIGN_OPTION_ENCODING_BASE64)return forge.util.encode64(asn);
else return forge.util.bytesToHex(asn);else if(option&SIGN_OPTION_ENCODING_BASE64)return forge.util.encode64(asn1.toDer(asn).getBytes());else return forge.util.bytesToHex(asn1.toDer(asn).getBytes())}catch(e){error.setError(error.ERROR_CREATE_SIGNDATA,e);return null}};var SIGN_OPTION_SAME_CERT=134217728;pki.signDataAddition=function(certificate,privatekey,keyword,signed,option,encoding){encoding=encoding||"utf8";if(encoding=="utf-8")encoding="utf8";var pwd=_decryptKeyword(keyword);if(!pwd){error.setError(error.ERROR_INCORRECT_PARAM);
return null}var key;try{var prikey=pki.decryptPrivateKeyInfo(privatekey,pwd);if(!prikey){error.setError(error.ERROR_INCORRECT_PASSWORD);return null}key=pki.privateKeyFromAsn1(prikey)}catch(e){error.setError(error.ERROR_INCORRECT_PASSWORD,e);return null}try{if(typeof signed!=="string"){error.setError(error.ERROR_CREATE_SIGNDATA);return null}var asn;if(signed.charAt(0)=="3"){var ba=forge.util.hexToBytes(signed);asn=asn1.fromDer(ba)}else if(signed.charAt(0)=="M"){var ba=forge.util.decode64(signed);asn=
asn1.fromDer(ba)}else{error.setError(error.ERROR_CREATE_SIGNDATA);return null}var capture={};var errors=[];if(!asn1.validate(asn,contentInfoValidator,capture,errors)){var err=new Error("Cannot read PKCS#7 message. "+"ASN.1 object is not an PKCS#7 ContentInfo.");err.errors=errors;throw err;}var contentType=asn1.derToOid(capture.contentType);var p7;switch(contentType){case forge.pki.oids.signedData:p7=sofo.pki.createSignedData();break;default:throw new Error("Cannot read PKCS#7 message. ContentType with OID "+
contentType+" is not (yet) supported(signedData).");}p7.fromAsn1(capture.content.value[0]);if(!(option&SIGN_OPTION_SAME_CERT)){var certs=p7.getCertificate();for(var i=0;i<certs.length;i++)if(_dnToString(certs[i].issuer)==_dnToString(certificate.issuer)&&certs[i].serialNumber==certificate.serialNumber){error.setError(error.ERROR_SIGN_DUPLICATE_CERT);return null}}p7.addCertificate(certificate);var alg;alg=asn1.derToOid(p7.base.digestAlgorithmIdentifiers[0].value[0].value);if(option&SIGN_OPTION_USE_SIGNEDATTRS&&
!(option&SIGN_OPTION_PKCS1))p7.addSigner({key:key.key,certificate:certificate,digestAlgorithm:alg,authenticatedAttributes:[{type:forge.pki.oids.contentType,value:forge.pki.oids.data},{type:forge.pki.oids.signingTime,value:new Date},{type:forge.pki.oids.messageDigest}]});else p7.addSigner({key:key.key,certificate:certificate,digestAlgorithm:alg});p7.sign();var asn=p7.toAsn1(option);if(option&SIGN_OPTION_PKCS1)if(option&SIGN_OPTION_ENCODING_BASE64)return forge.util.encode64(asn);else return forge.util.bytesToHex(asn);
else if(option&SIGN_OPTION_ENCODING_BASE64)return forge.util.encode64(asn1.toDer(asn).getBytes());else return forge.util.bytesToHex(asn1.toDer(asn).getBytes())}catch(e){error.setError(error.ERROR_CREATE_SIGNDATA,e);return null}};var contentInfoValidator={name:"ContentInfo",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"ContentInfo.ContentType",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,capture:"contentType"},{name:"ContentInfo.content",
tagClass:asn1.Class.CONTEXT_SPECIFIC,type:0,constructed:true,optional:true,captureAsn1:"content"}]};pki.PrivateKeySignData=function(privatekey,keyword,plain,publickey){var pwd=_decryptKeyword(keyword);if(!pwd){error.setError(error.ERROR_INCORRECT_PARAM);return null}var key;try{var prikey=pki.decryptPrivateKeyInfo(privatekey,pwd);if(!prikey){error.setError(error.ERROR_INCORRECT_PASSWORD);return null}key=pki.privateKeyFromAsn1(prikey)}catch(e){error.setError(error.ERROR_INCORRECT_PASSWORD,e);return null}try{var signedData;
if(key.key.kcdsa){var signatureAsn=key.key.sign("has160",plain,publickey.y);signedData=asn1.toDer(signatureAsn).getBytes()}else{var md=forge.sha256.create();md.update(plain);signedData=key.key.sign(md)}return signedData}catch(e){error.setError(error.ERROR_CREATE_SIGNDATA,e);return null}};var signerInfoValidator={name:"SignerInfo",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"SignerInfo.version",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,
capture:"version"},{name:"SignerInfo.issuerAndSerialNumber",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"SignerInfo.issuerAndSerial.issuer",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,captureAsn1:"issuer"},{name:"SignerInfo.issuerAndSerial.serial",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false,capture:"serial"}]},{name:"SignerInfo.digestAlgorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,
value:[{name:"SignerInfo.digestAlgorithm.algorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OID,constructed:false,capture:"digestOid"}]},{name:"SignerInfo.AuthenticatedAttributes",tagClass:asn1.Class.CONTEXT_SPECIFIC,type:0,constructed:true,captureAsn1:"authenticatedAttributes",optional:true},{name:"SignerInfo.digestEncryptionAlgorithm",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"SignerInfo.digestEncryptionAlgorithm.signatureAlgorithm",tagClass:asn1.Class.UNIVERSAL,
type:asn1.Type.OID,constructed:false,capture:"signatureOid"}]},{name:"SignerInfo.encryptedDigest",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.OCTETSTRING,constructed:false,capture:"signature"}]};var KCDSASignatureValidator={name:"KCDSASignature",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,constructed:true,value:[{name:"KCDSASignature.r",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.BITSTRING,constructed:false,capture:"r"},{name:"KCDSASignature.s",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,
constructed:false,capture:"s"}]};pki.verifySignedData=function(signed,plain,option,encoding){encoding=encoding||"utf8";if(encoding=="utf-8")encoding="utf8";var signresult=[];var signcert=[];try{if(typeof signed!=="string"){error.setError(error.ERROR_GETPLAINDATAOFSIGNDATA);return null}var asn;if(signed.charAt(0)=="3"){var ba=forge.util.hexToBytes(signed);asn=asn1.fromDer(ba)}else if(signed.charAt(0)=="M"){var ba=forge.util.decode64(signed);asn=asn1.fromDer(ba)}else{error.setError(error.ERROR_GETPLAINDATAOFSIGNDATA);
return null}var p7;var capture={};var errors=[];if(!asn1.validate(asn,contentInfoValidator,capture,errors)){p7=sofo.pki.createSignedData();p7.fromAsn1(asn)}else{var contentType=asn1.derToOid(capture.contentType);switch(contentType){case forge.pki.oids.signedData:p7=sofo.pki.createSignedData();break;default:throw new Error("Cannot read PKCS#7 message. ContentType with OID "+contentType+" is not (yet) supported(signedData).");}p7.fromAsn1(capture.content.value[0])}var input;if(plain)if(encoding=="euc-kr")input=
sofo.utils.ucs2_to_ksc5601(plain).getBytes();else input=forge.util.createBuffer(plain,encoding).getBytes();else if(p7.base.content)input=p7.base.content.getBytes();else input="";var digestAlg=forge.pki.oids[asn1.derToOid(p7.base.digestAlgorithmIdentifiers[0].value[0].value)];var md=forge.md[digestAlg].create();md.start().update(input);var input_md=md.digest().getBytes();var certs=p7.getCertificate();for(var i=0;i<p7.base.signerInfos.length;i++){capture={};errors=[];if(!asn1.validate(p7.base.signerInfos[i],
signerInfoValidator,capture,errors)){var err=new Error("Cannot read PKCS#7 message. "+"ASN.1 object is not an PKCS#7 SignerInfo.");err.errors=errors;throw err;}var digestAlgId;var bytes;var digest;if(capture.authenticatedAttributes){for(var j=0;j<capture.authenticatedAttributes.value.length;j++){var type=asn1.derToOid(capture.authenticatedAttributes.value[j].value[0].value);if(type===forge.pki.oids.contentType){if(forge.pki.oids.data!==asn1.derToOid(capture.authenticatedAttributes.value[j].value[1].value[0].value)){error.setError(error.ERROR_GETPLAINDATAOFSIGNDATA);
return null}}else if(type===forge.pki.oids.messageDigest)if(input_md!==capture.authenticatedAttributes.value[j].value[1].value[0].value){error.setError(error.ERROR_GETPLAINDATAOFSIGNDATA);return null}}var attrsAsn1=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SET,true,capture.authenticatedAttributes.value);bytes=asn1.toDer(attrsAsn1).getBytes();digestAlgId=forge.pki.oids[asn1.derToOid(capture.digestOid)];var mds=forge.md[digestAlgId].create();mds.start().update(bytes);digest=mds.digest().getBytes()}else{digestAlgId=
digestAlg;bytes=input;digest=input_md}var cert;var issuer={};issuer.attributes=forge.pki.RDNAttributesAsArray(capture.issuer);issuer=_dnToString(issuer);var serial=forge.util.bytesToHex(capture.serial);for(var j=0;j<certs.length;j++)if(issuer==_dnToString(certs[j].issuer)&&serial==certs[j].serialNumber){cert=certs[j];break}if(!cert){error.setError(error.ERROR_GETPLAINDATAOFSIGNDATA);return null}var ret;var signatureOid=asn1.derToOid(capture.signatureOid);if(forge.pki.oids[signatureOid].indexOf("kcdsa")==
0){if(signatureOid!=forge.pki.oids.kcdsa1&&signatureOid!=forge.pki.oids.kcdsa1WithSHA1&&signatureOid!=forge.pki.oids.kcdsa1WithSHA256){error.setError(error.ERROR_GETPLAINDATAOFSIGNDATA);return null}var signature=asn=asn1.fromDer(capture.signature);capture={};errors=[];if(!asn1.validate(signature,KCDSASignatureValidator,capture,errors)){var err=new Error("Cannot read PKCS#7 message. "+"ASN.1 object is not an PKCS#7 Signature(KCDSA).");err.errors=errors;throw err;}ret=cert.publicKey.verify(digestAlgId,
bytes,capture.r,capture.s)}else ret=cert.publicKey.verify(digest,capture.signature,"RSASSA-PKCS1-V1_5");if(!ret){error.setError(error.ERROR_GETPLAINDATAOFSIGNDATA);return null}ret=pki.verifyCertificate(cert,0);signresult.push(ret);signcert.push(cert)}}catch(e){error.setError(error.ERROR_GETPLAINDATAOFSIGNDATA,e);return null}var plain;if(encoding=="euc-kr")plain=sofo.utils.ksc5601_to_ucs2(input);else plain=forge.util.decodeUtf8(input);return{plain:plain,cert:signcert,result:signresult}};pki.convertSignedData=
function(signed,plain,option,encoding){encoding=encoding||"utf8";if(encoding=="utf-8")encoding="utf8";var signdata;try{if(typeof signed!=="string"){error.setError(error.ERROR_CREATE_SIGNDATA);return null}var asn;if(signed.charAt(0)=="3"){var ba=forge.util.hexToBytes(signed);asn=asn1.fromDer(ba)}else if(signed.charAt(0)=="M"){var ba=forge.util.decode64(signed);asn=asn1.fromDer(ba)}else{error.setError(error.ERROR_CREATE_SIGNDATA);return null}var p7;var capture={};var errors=[];if(!asn1.validate(asn,
contentInfoValidator,capture,errors)){p7=sofo.pki.createSignedData();p7.fromAsn1(asn)}else{var contentType=asn1.derToOid(capture.contentType);switch(contentType){case forge.pki.oids.signedData:p7=sofo.pki.createSignedData();break;default:throw new Error("Cannot read PKCS#7 message. ContentType with OID "+contentType+" is not (yet) supported(signedData).");}p7.fromAsn1(capture.content.value[0])}if(plain)if(encoding=="euc-kr")p7.setContent(sofo.utils.ucs2_to_ksc5601(plain));else p7.setContent(forge.util.createBuffer(plain,
encoding));else if(!p7.base.content)p7.setContent("");p7.sign();var signasn=p7.toAsn1(option);if(option&SIGN_OPTION_PKCS1)if(option&SIGN_OPTION_ENCODING_BASE64)signdata=forge.util.encode64(signasn);else signdata=forge.util.bytesToHex(signasn);else if(option&SIGN_OPTION_ENCODING_BASE64)signdata=forge.util.encode64(asn1.toDer(signasn).getBytes());else signdata=forge.util.bytesToHex(asn1.toDer(signasn).getBytes())}catch(e){error.setError(error.ERROR_CREATE_SIGNDATA,e);return null}return signdata};pki.verifyCertificate=
function(cert,option){try{var status=_getValidStatue(new Date,new Date(cert.validity.notAfter));if(status==0||status==1)return status;error.setError(error.ERROR_CERT_EXPIRED);return 43034}catch(e){error.setError(error.ERROR_VERIFYCERT,e);return-1}};pki.envelopeIdNum=function(certificate,privatekey,keyword,idn,srvcert){var pwd=_decryptKeyword(keyword);if(!pwd){error.setError(error.ERROR_INCORRECT_PARAM);return null}var idnum=_decryptKeyword(idn);if(idnum==null)idnum=idn;var cert;try{cert=forge.pki.certificateFromPem(srvcert)}catch(e){error.setError(error.ERROR_INCORRECT_PARAM,
e);return null}var deckey;try{var prikey=pki.decryptPrivateKeyInfo(privatekey,pwd);if(!prikey){error.setError(error.ERROR_INCORRECT_PASSWORD);return null}deckey=pki.privateKeyFromAsn1(prikey)}catch(e){error.setError(error.ERROR_INCORRECT_PASSWORD,e);return null}if(!deckey.randomNum){error.setError(error.ERROR_SETENVELOPIDNUM);return null}try{var key=forge.util.createBuffer(forge.random.getBytes(16));var tmp=forge.util.createBuffer();for(var i=0;i<16;i++)tmp.putByte(0);var iv=tmp.getBytes();var ciphFn=
forge.seed.createEncryptionCipher;var ciph=ciphFn(key,"CBC");ciph.start(iv);var hashContent=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.PRINTABLESTRING,false,idnum),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.BITSTRING,false,String.fromCharCode(0)+deckey.randomNum)]);ciph.update(asn1.toDer(hashContent));ciph.finish();var encData=ciph.output.getBytes();var encKey=cert.publicKey.encrypt(key.getBytes(),"RSAES-PKCS1-V1_5");var output=forge.util.createBuffer();
output.putBytes(encKey);output.putBytes(encData);return forge.util.bytesToHex(output.getBytes())}catch(e){error.setError(error.ERROR_SETENVELOPIDNUM,e);return null}return null};var ENV_OPTION_ENCODE_BASE64=1024;pki.envelopeData=function(certificate,passwd,plain,option,encoding){encoding=encoding||"utf8";if(encoding=="utf-8")encoding="utf8";var type;if(certificate)type=0;else if(passwd)type=1;else{error.setError(error.ERROR_INCORRECT_PARAM);return null}var pwd;if(type==1){pwd=_decryptKeyword(passwd);
if(!pwd){error.setError(error.ERROR_INCORRECT_PARAM);return null}}try{var p7=sofo.pki.createEnvelopedData();if(type==0)if(forge.util.isArray(certificate))for(var i=0;i<certificate.length;i++)p7.addRecipient(certificate[i]);else p7.addRecipient(certificate);if(encoding=="euc-kr")p7.setContent(sofo.utils.ucs2_to_ksc5601(plain));else p7.setContent(forge.util.createBuffer(plain,encoding));if(type==0)p7.encrypt();else p7.encrypt(pwd);var asn=p7.toAsn1();if(option&ENV_OPTION_ENCODE_BASE64)return forge.util.encode64(asn1.toDer(asn).getBytes());
else return forge.util.bytesToHex(asn1.toDer(asn).getBytes())}catch(e){error.setError(error.ERROR_ENVELOP_FAIL,e);return null}};pki.deenvelopeData=function(certificate,privatekey,keyword,passwd,envelopedData,option,encoding){encoding=encoding||"utf8";if(encoding=="utf-8")encoding="utf8";var type;if(certificate&&privatekey&&keyword)type=0;else if(passwd)type=1;else{error.setError(error.ERROR_INCORRECT_PARAM);return null}var pwd;if(type==0)pwd=_decryptKeyword(keyword);else pwd=_decryptKeyword(passwd);
if(!pwd){error.setError(error.ERROR_INCORRECT_PARAM);return null}var key;if(type==0)try{var prikey=pki.decryptPrivateKeyInfo(privatekey,pwd);if(!prikey){error.setError(error.ERROR_INCORRECT_PASSWORD);return null}key=pki.privateKeyFromAsn1(prikey)}catch(e){error.setError(error.ERROR_INCORRECT_PASSWORD,e);return null}try{if(typeof envelopedData!=="string"){error.setError(error.ERROR_DEENVELOP_FAIL);return null}var asn;if(envelopedData.charAt(0)=="3"){var ba=forge.util.hexToBytes(envelopedData);asn=
asn1.fromDer(ba)}else if(envelopedData.charAt(0)=="M"){var ba=forge.util.decode64(envelopedData);asn=asn1.fromDer(ba)}else{error.setError(error.ERROR_DEENVELOP_FAIL);return null}var capture={};var errors=[];if(!asn1.validate(asn,contentInfoValidator,capture,errors)){var err=new Error("Cannot read PKCS#7 message. "+"ASN.1 object is not an PKCS#7 ContentInfo.");err.errors=errors;throw err;}var contentType=asn1.derToOid(capture.contentType);var msg;switch(contentType){case forge.pki.oids.envelopedData:msg=
sofo.pki.createEnvelopedData();break;default:throw new Error("Cannot read PKCS#7 message. ContentType with OID "+contentType+" is not (yet) supported(envelopedData).");}msg.fromAsn1(capture.content.value[0]);if(type==0){var recipient=msg.findRecipient(certificate);if(!recipient){error.setError(error.ERROR_GETCERT);return null}msg.decrypt(recipient,key.key)}else{var recipient=msg.findRecipient(0);msg.decrypt(recipient,pwd)}if(encoding=="euc-kr")return sofo.utils.ksc5601_to_ucs2(msg.getContent().getBytes());
else return msg.getContent().toString()}catch(e){error.setError(error.ERROR_DEENVELOP_FAIL,e);return null}};pki.certificateFromPFX=function(binary,keyword){var certset={signCert:null,signKey:null,kmCert:null,kmKey:null};var certBag;var keyBag;var key=_decryptKeyword(keyword);if(!key){error.setError(error.ERROR_INCORRECT_PARAM);return null}try{var ba;if(typeof binary==="string")if(binary.charAt(0)=="3")ba=forge.util.hexToBytes(binary);else if(binary.charAt(0)=="M")ba=forge.util.decode64(binary);else{error.setError(error.ERROR_INCORRECT_PARAM);
return null}else ba=forge.util.createBuffer(binary);var asn=asn1.fromDer(ba);var pfx=forge.pkcs12.pkcs12FromAsn1(asn,key);certBag=pfx.getBags({bagType:forge.pki.oids.certBag})[forge.pki.oids.certBag];keyBag=pfx.getBags({bagType:forge.pki.oids.keyBag})[forge.pki.oids.keyBag];var pkcs8keyBag=pfx.getBags({bagType:forge.pki.oids.pkcs8ShroudedKeyBag})[forge.pki.oids.pkcs8ShroudedKeyBag];for(var i=0;i<pkcs8keyBag.length;i++)keyBag.push(pkcs8keyBag[i])}catch(e){if(e.message.indexOf("Invalid password")>0){error.setError(error.ERROR_VERIFYPASSWORD,
e);return null}else{error.setError(error.ERROR_PFX_CERT_IMPORT_FAIL,e);return null}}try{for(var i=0;i<certBag.length;i++){var rval=pki.wrapPrivateKey(keyBag[i].key,keyBag[i].randomNum);var option={};option.algorithm="seed";var enckey=pki.encryptPrivateKeyInfo(rval,key,option);if(i==0){certset.signCert=certBag[i].cert;certset.signKey=enckey}else{certset.kmCert=certBag[i].cert;certset.kmKey=enckey}if(i==1)break}return certset}catch(e){error.setError(error.ERROR_ENCRYPT_PRIKEY,e);return null}error.setError(error.ERROR_PFX_CERT_IMPORT_FAIL);
return null};pki.certificateFromCMP=function(signCert,signKey,kmCert,kmKey,keyword,random){var certset={signCert:null,signKey:null,kmCert:null,kmKey:null};var certBag=[];var keyBag=[];var key=_decryptKeyword(keyword);if(!key){error.setError(error.ERROR_INCORRECT_PARAM);return null}if(signCert!==null&&signKey!==null){certBag.push({cert:signCert});keyBag.push({key:signKey,randomNum:random})}if(kmCert!==null&&kmKey!==null){certBag.push({cert:kmCert});keyBag.push({key:kmKey,randomNum:null})}try{for(var i=
0;i<certBag.length;i++){var rval=pki.wrapPrivateKey(keyBag[i].key,keyBag[i].randomNum);var option={};option.algorithm="seed";var enckey=pki.encryptPrivateKeyInfo(rval,key,option);if(i==0){if(signCert==null||signKey==null)throw error.ERROR_PFX_CERT_IMPORT_FAIL;certset.signCert=certBag[i].cert;certset.signKey=enckey}else{certset.kmCert=certBag[i].cert;certset.kmKey=enckey}if(i==1)break}return certset}catch(e){error.setError(error.ERROR_ENCRYPT_PRIKEY,e);return null}error.setError(error.ERROR_PFX_CERT_IMPORT_FAIL);
return null};pki.certificateToPKCS12=function(signCert,signKey,kmCert,kmKey,pkcs8Keyword,pkcs12Keyword,option){var signPrikey=null;var kmPrikey=null;var key1=_decryptKeyword(pkcs8Keyword);if(!key1){error.setError(error.ERROR_INCORRECT_PARAM);return null}var key2=_decryptKeyword(pkcs12Keyword);if(!key2){error.setError(error.ERROR_INCORRECT_PARAM);return""}try{var deckey=pki.decryptPrivateKeyInfo(signKey,key1);if(!deckey){error.setError(error.ERROR_DECRYPT_PRIKEY);return null}signPrikey=pki.privateKeyFromAsn1(deckey)}catch(e){error.setError(error.ERROR_DECRYPT_PRIKEY,
e);return null}if(kmCert&&kmKey)try{var deckey=pki.decryptPrivateKeyInfo(kmKey,key1);if(!deckey){error.setError(error.ERROR_DECRYPT_PRIKEY);return null}kmPrikey=pki.privateKeyFromAsn1(deckey)}catch(e){error.setError(error.ERROR_DECRYPT_PRIKEY,e);return null}try{var p12Asn1;if(kmCert&&kmPrikey)p12Asn1=forge.pkcs12.toPkcs12Asn1(signCert,signPrikey,kmCert,kmPrikey,key2,{algorithm:"3des",format:"encryptedData"});else p12Asn1=forge.pkcs12.toPkcs12Asn1(signCert,signPrikey,null,null,key2,{algorithm:"3des",
format:"encryptedData"});if(!p12Asn1){error.setError(error.ERROR_EXPORTCERT);return null}var p12Der=forge.asn1.toDer(p12Asn1).getBytes();var p12b64=forge.util.encode64(p12Der);return p12b64}catch(e){error.setError(error.ERROR_EXPORTCERT,e);return null}};pki.identifyVID=function(certificate,privatekey,keyword,idnum){var pwd=_decryptKeyword(keyword);if(!pwd){error.setError(error.ERROR_INCORRECT_PARAM);return-1}var idn=_decryptKeyword(idnum);if(!idn){error.setError(error.ERROR_INCORRECT_PARAM);return-1}var deckey;
try{var prikey=pki.decryptPrivateKeyInfo(privatekey,pwd);if(!prikey){error.setError(error.ERROR_INCORRECT_PASSWORD);return-1}deckey=pki.privateKeyFromAsn1(prikey)}catch(e){error.setError(error.ERROR_INCORRECT_PASSWORD,e);return-1}if(!deckey.randomNum){error.setError(error.ERROR_PKCS8_NO_RANDOM);return-1}var altName=certificate.getExtension("subjectAltName");if(!altName){error.setError(error.ERROR_PKCS8_NO_VID);return-1}var vidAlg;var vidInfo;try{function getVirtualID(asn){if(!asn)return null;if(asn.composed&&
asn.value instanceof Array)for(var i=0;i<asn.value.length;i++)if(asn.value[i].tagClass==asn1.Class.CONTEXT_SPECIFIC&&asn.value[i].type==0)if(asn.value[i].composed&&asn.value[i].value instanceof Array){var oidVid=false;for(var j=0;j<asn.value[i].value.length;j++)if(asn.value[i].value[j].tagClass==asn1.Class.UNIVERSAL&&asn.value[i].value[j].type==asn1.Type.OID){var tmpOid=asn1.derToOid(asn.value[i].value[j].value);var strOid=forge.pki.oids[tmpOid]?forge.pki.oids[tmpOid]:tmpOid;if(strOid.toLowerCase()==
"kisa-identifyData".toLowerCase())oidVid=true}else if(oidVid){var asnVid=asn.value[i].value[j].value[0];vidAlg=asn1.derToOid(asnVid.value[1].value[0].value[1].value[0].value[0].value);vidInfo=asnVid.value[1].value[0].value[1].value[1].value[0].value;return 0}}return-1}if(getVirtualID(asn1.fromDer(altName.value))!=0){error.setError(error.ERROR_PKCS8_NO_VID);return-1}}catch(e){error.setError(error.ERROR_PKCS8_NO_VID,e);return-1}try{var md;var digest;switch(vidAlg){case forge.pki.oids.sha1:md=forge.md.sha1.create();
break;case forge.pki.oids.sha256:md=forge.md.sha256.create();break;case forge.pki.oids.sha512:md=forge.md.sha512.create();break;case forge.pki.oids.md5:md=forge.md.md5.create();break;default:error.setError(error.ERROR_VERIFYCERTOWNER);return-1}var hashContent=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.PRINTABLESTRING,false,idn),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.BITSTRING,false,String.fromCharCode(0)+deckey.randomNum)]);md.update(asn1.toDer(hashContent).getBytes());
digest=md.digest().getBytes();md.start();md.update(digest);digest=md.digest().getBytes();if(vidInfo!=digest){error.setError(error.ERROR_VERIFYCERTOWNER);return-1}}catch(e){error.setError(error.ERROR_VERIFYCERTOWNER,e);return-1}return 0};var HASH_ALGID_MD5=0;var HASH_ALGID_SHA1=1;var HASH_ALGID_SHA256=2;var HASH_ALGID_SHA384=3;var HASH_ALGID_SHA512=4;var HASH_OPTION_ENCODING_BASE64=1;pki.hashData=function(plain,algID,option,encoding){encoding=encoding||"utf8";if(encoding=="utf-8")encoding="utf8";var md;
try{switch(algID){case HASH_ALGID_MD5:md=forge.md.md5.create();break;case HASH_ALGID_SHA1:md=forge.md.sha1.create();break;case HASH_ALGID_SHA256:md=forge.md.sha256.create();break;case HASH_ALGID_SHA384:md=forge.md.sha384.create();break;case HASH_ALGID_SHA512:md=forge.md.sha512.create();break;default:error.setError(error.ERROR_INCORRECT_PARAM);return null}md.start();if(encoding=="euc-kr")md.update(sofo.utils.ucs2_to_ksc5601(plain).getBytes());else md.update(forge.util.createBuffer(plain,encoding).getBytes());
if(option&HASH_OPTION_ENCODING_BASE64)return forge.util.encode64(md.digest().getBytes());else return forge.util.bytesToHex(md.digest().getBytes())}catch(e){error.setError(error.ERROR_HASHDATA,e);return null}};pki.distinguishedNameToAsn1=function(dn){return _dnToAsn1(dn)};function _dnToAsn1(obj){var rval=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[]);var attr,set;var attrs=obj.attributes;for(var i=0;i<attrs.length;++i){attr=attrs[i];var value=attr.value;var valueTagClass=asn1.Type.PRINTABLESTRING;
if("valueTagClass"in attr){valueTagClass=attr.valueTagClass;if(valueTagClass===asn1.Type.UTF8){value=forge.util.encodeUtf8(value);value=forge.util.decodeUtf8(value)}}set=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SET,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(attr.type).getBytes()),asn1.create(asn1.Class.UNIVERSAL,valueTagClass,false,value)])]);rval.value.push(set)}return rval}})();(function(){sofo.utils.bytesToHex=function(bytes){return forge.util.bytesToHex(bytes)};sofo.utils.hexToBytes=function(hex){return forge.util.hexToBytes(hex)};sofo.utils.stringToBytes=function(string){var bytes=[];for(var i=0;i<string.length;++i)bytes.push(string.charCodeAt(i));return bytes};sofo.utils.sidToPortNumber=function(input){var md=forge.md.sha1.create();md.update(input,"utf8");return md.digest2()};sofo.utils.base64Decode=function(input){return forge.util.decode64(input)};sofo.utils.base64Encode=
function(input){return forge.util.encode64(input)};sofo.utils.getBytes=function(size){return forge.random.getBytes(size)};sofo.utils.createBuffer=function(input,encoding){return forge.util.createBuffer(input,encoding)};function randomBytes(n){var bytes=[];if(window.crypto&&window.crypto.getRandomValues){var buf=new Uint8Array(n);window.crypto.getRandomValues(buf);for(var i=0;i<n;i++)bytes.push(buf[i])}else for(var bytes=[];n>0;n--)bytes.push(Math.floor(Math.random()*256));var str="";for(var i=0;i<
bytes.length;i++)str+=String.fromCharCode(bytes[i]);return str}sofo.utils.generatorRandom=function(length){var rn=forge.util.bytesToHex(randomBytes(length-4));var date=new Date;var dateHex=forge.util.bytesToHex(date.getTime().toString()).slice(-8);return forge.util.hexToBytes(dateHex+=rn)};sofo.utils.decodeUTF8=function(input){return forge.util.decodeUtf8(input)};sofo.utils.encodeUTF8=function(input){return forege.util.encdeUtf8(input)};sofo.utils.memcpy=function(src,srcOffset,dst,dstOffset,length){var i,
offset=dstOffset;var srcWord=sofo.utils.stringToBytes(src);for(i=0;i<length;i++)dst.setAt(offset++,srcWord[i]);return dst};sofo.utils.calcuratorBlock=function(pmk,rnc,rns,iteration){var memcpy=sofo.utils.memcpy;var buf=forge.util.createBuffer(1024);var res=forge.util.createBuffer(1024);var shaValue;var dmValue;var pos,i,j;for(i=0;i<iteration;i++){pos=0;for(j=0;j<=i;j++)buf.setAt(pos++,"A".charCodeAt(0)+i);memcpy(pmk,pos,buf,pos,48);pos+=48;memcpy(rnc,pos,buf,pos,32);pos+=32;memcpy(rns,pos,buf,pos,
32);pos+=32;shaValue=sofo.crypto.SHA1(buf.data);pos=0;memcpy(pmk,pos,buf,pos,48);pos+=48;memcpy(shaValue.data,pos,buf,pos,20);pos+=20;mdValue=sofo.crypto.MD5(buf.data,pos);memcpy(mdValue.data,pos,res,i*16,16)}return res};sofo.utils.createKeyBlock=function(type,input,cipherSuite){if(input===undefined||input.length<=0)return new Error("The key block enter does not correctly.");var toHex=sofo.utils.bytesToHex(input.data);if(type=="secure"){var pos=0;cipherSuite.macKey.value=sofo.utils.hexToBytes(toHex.slice(pos,
20*2));pos+=20*2;cipherSuite.server.macKey.value=sofo.utils.hexToBytes(toHex.slice(pos,pos+20*2));pos+=20*2;cipherSuite.encKey.value=sofo.utils.hexToBytes(toHex.slice(pos,pos+16*2));pos+=16*2;cipherSuite.server.encKey.value=sofo.utils.hexToBytes(toHex.slice(pos,pos+16*2));pos+=16*2;cipherSuite.iv.value=sofo.utils.hexToBytes(toHex.slice(pos,pos+16*2));pos+=16*2;cipherSuite.server.iv.value=sofo.utils.hexToBytes(toHex.slice(pos,pos+16*2))}else{cipherSuite.macKey.value=sofo.utils.hexToBytes(toHex.slice(pos,
20*2));pos+=20*2;cipherSuite.encKey.value=sofo.utils.hexToBytes(toHex.slice(pos,pos+16*2));pos+=16*2;cipherSuite.iv.value=sofo.utils.hexToBytes(toHex.slice(pos,pos+16*2));pos+=16*2}};sofo.utils.isValiedPemFormat=function(pem){try{forge.pem.decode(pem);return true}catch(e){return false}};var tabksc5601=[12288,12289,12290,183,8229,8230,168,12291,173,8213,8741,65340,8764,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,177,215,247,8800,8804,8805,8734,8756,176,
8242,8243,8451,8491,65504,65505,65509,9794,9792,8736,8869,8978,8706,8711,8801,8786,167,8251,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8594,8592,8593,8595,8596,12307,8810,8811,8730,8765,8733,8757,8747,8748,8712,8715,8838,8839,8834,8835,8746,8745,8743,8744,65506,8658,8660,8704,8707,180,65374,711,728,733,730,729,184,731,161,191,720,8750,8721,8719,164,8457,8240,9665,9664,9655,9654,9828,9824,9825,9829,9831,9827,8857,9672,9635,9680,9681,9618,9636,9637,9640,9639,9638,9641,9832,9743,
9742,9756,9758,182,8224,8225,8597,8599,8601,8598,8600,9837,9833,9834,9836,12927,12828,8470,13255,8482,13250,13272,8481,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,65281,65282,65283,65284,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,
65333,65334,65335,65336,65337,65338,65339,65510,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,12593,12594,12595,12596,12597,12598,12599,12600,12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616,12617,12618,12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632,12633,12634,
12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,12647,12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663,12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679,12680,12681,12682,12683,12684,12685,12686,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,-1,-1,-1,-1,-1,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,-1,-1,-1,-1,-1,-1,-1,913,914,915,916,917,918,919,920,921,922,923,924,925,926,
927,928,929,931,932,933,934,935,936,937,-1,-1,-1,-1,-1,-1,-1,-1,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,-1,-1,-1,-1,-1,-1,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,9490,9489,9498,9497,9494,9493,9486,9485,9502,9503,9505,9506,9510,9511,9513,9514,9517,9518,9521,9522,9525,9526,9529,9530,9533,9534,9536,9537,9539,9540,9541,9542,9543,
9544,9545,9546,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13205,13206,13207,8467,13208,13252,13219,13220,13221,13222,13209,13210,13211,13212,13213,13214,13215,13216,13217,13218,13258,13197,13198,13199,13263,13192,13193,13256,13223,13224,13232,13233,13234,13235,13236,13237,13238,13239,13240,13241,13184,13185,13186,13187,13188,13242,13243,13244,13245,13246,13247,13200,13201,13202,13203,13204,8486,13248,13249,13194,13195,13196,13270,13253,13229,13230,13231,13275,13225,
13226,13227,13228,13277,13264,13267,13251,13257,13276,13254,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,198,208,170,294,-1,306,-1,319,321,216,338,186,222,358,330,-1,12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911,12912,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,9424,9425,9426,9427,9428,9429,9430,9431,9432,9433,9434,9435,9436,9437,9438,9439,9440,9441,9442,9443,9444,9445,9446,9447,9448,9449,9312,9313,9314,9315,9316,9317,9318,9319,
9320,9321,9322,9323,9324,9325,9326,189,8531,8532,188,190,8539,8540,8541,8542,230,273,240,295,305,307,312,320,322,248,339,223,254,359,331,329,12800,12801,12802,12803,12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819,12820,12821,12822,12823,12824,12825,12826,12827,9372,9373,9374,9375,9376,9377,9378,9379,9380,9381,9382,9383,9384,9385,9386,9387,9388,9389,9390,9391,9392,9393,9394,9395,9396,9397,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,
9345,9346,185,178,179,8308,8319,8321,8322,8323,8324,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,
12428,12429,12430,12431,12432,12433,12434,12435,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,
12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,-1,-1,-1,-1,-1,-1,-1,-1,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,-1,-1,

-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,44032,44033,44036,44039,44040,44041,44042,44048,44049,44050,44051,44052,44053,44054,44055,44057,44058,44059,44060,44061,44064,
44068,44076,44077,44079,44080,44081,44088,44089,44092,44096,44107,44109,44116,44120,44124,44144,44145,44148,44151,44152,44154,44160,44161,44163,44164,44165,44166,44169,44170,44171,44172,44176,44180,44188,44189,44191,44192,44193,44200,44201,44202,44204,44207,44208,44216,44217,44219,44220,44221,44225,44228,44232,44236,44245,44247,44256,44257,44260,44263,44264,44266,44268,44271,44272,44273,44275,44277,44278,44284,44285,44288,44292,44294,44300,44301,44303,44305,44312,44316,44320,44329,44332,44333,44340,
44341,44344,44348,44356,44357,44359,44361,44368,44372,44376,44385,44387,44396,44397,44400,44403,44404,44405,44406,44411,44412,44413,44415,44417,44418,44424,44425,44428,44432,44444,44445,44452,44471,44480,44481,44484,44488,44496,44497,44499,44508,44512,44516,44536,44537,44540,44543,44544,44545,44552,44553,44555,44557,44564,44592,44593,44596,44599,44600,44602,44608,44609,44611,44613,44614,44618,44620,44621,44622,44624,44628,44630,44636,44637,44639,44640,44641,44645,44648,44649,44652,44656,44664,44665,
44667,44668,44669,44676,44677,44684,44732,44733,44734,44736,44740,44748,44749,44751,44752,44753,44760,44761,44764,44776,44779,44781,44788,44792,44796,44807,44808,44813,44816,44844,44845,44848,44850,44852,44860,44861,44863,44865,44866,44867,44872,44873,44880,44892,44893,44900,44901,44921,44928,44932,44936,44944,44945,44949,44956,44984,44985,44988,44992,44999,45E3,45001,45003,45005,45006,45012,45020,45032,45033,45040,45041,45044,45048,45056,45057,45060,45068,45072,45076,45084,45085,45096,45124,45125,
45128,45130,45132,45134,45139,45140,45141,45143,45145,45149,45180,45181,45184,45188,45196,45197,45199,45201,45208,45209,45210,45212,45215,45216,45217,45218,45224,45225,45227,45228,45229,45230,45231,45233,45235,45236,45237,45240,45244,45252,45253,45255,45256,45257,45264,45265,45268,45272,45280,45285,45320,45321,45323,45324,45328,45330,45331,45336,45337,45339,45340,45341,45347,45348,45349,45352,45356,45364,45365,45367,45368,45369,45376,45377,45380,45384,45392,45393,45396,45397,45400,45404,45408,45432,
45433,45436,45440,45442,45448,45449,45451,45453,45458,45459,45460,45464,45468,45480,45516,45520,45524,45532,45533,45535,45544,45545,45548,45552,45561,45563,45565,45572,45573,45576,45579,45580,45588,45589,45591,45593,45600,45620,45628,45656,45660,45664,45672,45673,45684,45685,45692,45700,45701,45705,45712,45713,45716,45720,45721,45722,45728,45729,45731,45733,45734,45738,45740,45744,45748,45768,45769,45772,45776,45778,45784,45785,45787,45789,45794,45796,45797,45798,45800,45803,45804,45805,45806,45807,
45811,45812,45813,45815,45816,45817,45818,45819,45823,45824,45825,45828,45832,45840,45841,45843,45844,45845,45852,45908,45909,45910,45912,45915,45916,45918,45919,45924,45925,45927,45929,45931,45934,45936,45937,45940,45944,45952,45953,45955,45956,45957,45964,45968,45972,45984,45985,45992,45996,46020,46021,46024,46027,46028,46030,46032,46036,46037,46039,46041,46043,46045,46048,46052,46056,46076,46096,46104,46108,46112,46120,46121,46123,46132,46160,46161,46164,46168,46176,46177,46179,46181,46188,46208,
46216,46237,46244,46248,46252,46261,46263,46265,46272,46276,46280,46288,46293,46300,46301,46304,46307,46308,46310,46316,46317,46319,46321,46328,46356,46357,46360,46363,46364,46372,46373,46375,46376,46377,46378,46384,46385,46388,46392,46400,46401,46403,46404,46405,46411,46412,46413,46416,46420,46428,46429,46431,46432,46433,46496,46497,46500,46504,46506,46507,46512,46513,46515,46516,46517,46523,46524,46525,46528,46532,46540,46541,46543,46544,46545,46552,46572,46608,46609,46612,46616,46629,46636,46644,
46664,46692,46696,46748,46749,46752,46756,46763,46764,46769,46804,46832,46836,46840,46848,46849,46853,46888,46889,46892,46895,46896,46904,46905,46907,46916,46920,46924,46932,46933,46944,46948,46952,46960,46961,46963,46965,46972,46973,46976,46980,46988,46989,46991,46992,46993,46994,46998,46999,47E3,47001,47004,47008,47016,47017,47019,47020,47021,47028,47029,47032,47047,47049,47084,47085,47088,47092,47100,47101,47103,47104,47105,47111,47112,47113,47116,47120,47128,47129,47131,47133,47140,47141,47144,
47148,47156,47157,47159,47160,47161,47168,47172,47185,47187,47196,47197,47200,47204,47212,47213,47215,47217,47224,47228,47245,47272,47280,47284,47288,47296,47297,47299,47301,47308,47312,47316,47325,47327,47329,47336,47337,47340,47344,47352,47353,47355,47357,47364,47384,47392,47420,47421,47424,47428,47436,47439,47441,47448,47449,47452,47456,47464,47465,47467,47469,47476,47477,47480,47484,47492,47493,47495,47497,47498,47501,47502,47532,47533,47536,47540,47548,47549,47551,47553,47560,47561,47564,47566,
47567,47568,47569,47570,47576,47577,47579,47581,47582,47585,47587,47588,47589,47592,47596,47604,47605,47607,47608,47609,47610,47616,47617,47624,47637,47672,47673,47676,47680,47682,47688,47689,47691,47693,47694,47699,47700,47701,47704,47708,47716,47717,47719,47720,47721,47728,47729,47732,47736,47747,47748,47749,47751,47756,47784,47785,47787,47788,47792,47794,47800,47801,47803,47805,47812,47816,47832,47833,47868,47872,47876,47885,47887,47889,47896,47900,47904,47913,47915,47924,47925,47926,47928,47931,
47932,47933,47934,47940,47941,47943,47945,47949,47951,47952,47956,47960,47969,47971,47980,48008,48012,48016,48036,48040,48044,48052,48055,48064,48068,48072,48080,48083,48120,48121,48124,48127,48128,48130,48136,48137,48139,48140,48141,48143,48145,48148,48149,48150,48151,48152,48155,48156,48157,48158,48159,48164,48165,48167,48169,48173,48176,48177,48180,48184,48192,48193,48195,48196,48197,48201,48204,48205,48208,48221,48260,48261,48264,48267,48268,48270,48276,48277,48279,48281,48282,48288,48289,48292,
48295,48296,48304,48305,48307,48308,48309,48316,48317,48320,48324,48333,48335,48336,48337,48341,48344,48348,48372,48373,48374,48376,48380,48388,48389,48391,48393,48400,48404,48420,48428,48448,48456,48457,48460,48464,48472,48473,48484,48488,48512,48513,48516,48519,48520,48521,48522,48528,48529,48531,48533,48537,48538,48540,48548,48560,48568,48596,48597,48600,48604,48617,48624,48628,48632,48640,48643,48645,48652,48653,48656,48660,48668,48669,48671,48708,48709,48712,48716,48718,48724,48725,48727,48729,
48730,48731,48736,48737,48740,48744,48746,48752,48753,48755,48756,48757,48763,48764,48765,48768,48772,48780,48781,48783,48784,48785,48792,48793,48808,48848,48849,48852,48855,48856,48864,48867,48868,48869,48876,48897,48904,48905,48920,48921,48923,48924,48925,48960,48961,48964,48968,48976,48977,48981,49044,49072,49093,49100,49101,49104,49108,49116,49119,49121,49212,49233,49240,49244,49248,49256,49257,49296,49297,49300,49304,49312,49313,49315,49317,49324,49325,49327,49328,49331,49332,49333,49334,49340,
49341,49343,49344,49345,49349,49352,49353,49356,49360,49368,49369,49371,49372,49373,49380,49381,49384,49388,49396,49397,49399,49401,49408,49412,49416,49424,49429,49436,49437,49438,49439,49440,49443,49444,49446,49447,49452,49453,49455,49456,49457,49462,49464,49465,49468,49472,49480,49481,49483,49484,49485,49492,49493,49496,49500,49508,49509,49511,49512,49513,49520,49524,49528,49541,49548,49549,49550,49552,49556,49558,49564,49565,49567,49569,49573,49576,49577,49580,49584,49597,49604,49608,49612,49620,
49623,49624,49632,49636,49640,49648,49649,49651,49660,49661,49664,49668,49676,49677,49679,49681,49688,49689,49692,49695,49696,49704,49705,49707,49709,49711,49713,49714,49716,49736,49744,49745,49748,49752,49760,49765,49772,49773,49776,49780,49788,49789,49791,49793,49800,49801,49808,49816,49819,49821,49828,49829,49832,49836,49837,49844,49845,49847,49849,49884,49885,49888,49891,49892,49899,49900,49901,49903,49905,49910,49912,49913,49915,49916,49920,49928,49929,49932,49933,49939,49940,49941,49944,49948,
49956,49957,49960,49961,49989,50024,50025,50028,50032,50034,50040,50041,50044,50045,50052,50056,50060,50112,50136,50137,50140,50143,50144,50146,50152,50153,50157,50164,50165,50168,50184,50192,50212,50220,50224,50228,50236,50237,50248,50276,50277,50280,50284,50292,50293,50297,50304,50324,50332,50360,50364,50409,50416,50417,50420,50424,50426,50431,50432,50433,50444,50448,50452,50460,50472,50473,50476,50480,50488,50489,50491,50493,50500,50501,50504,50505,50506,50508,50509,50510,50515,50516,50517,50519,
50520,50521,50525,50526,50528,50529,50532,50536,50544,50545,50547,50548,50549,50556,50557,50560,50564,50567,50572,50573,50575,50577,50581,50583,50584,50588,50592,50601,50612,50613,50616,50617,50619,50620,50621,50622,50628,50629,50630,50631,50632,50633,50634,50636,50638,50640,50641,50644,50648,50656,50657,50659,50661,50668,50669,50670,50672,50676,50678,50679,50684,50685,50686,50687,50688,50689,50693,50694,50695,50696,50700,50704,50712,50713,50715,50716,50724,50725,50728,50732,50733,50734,50736,50739,
50740,50741,50743,50745,50747,50752,50753,50756,50760,50768,50769,50771,50772,50773,50780,50781,50784,50796,50799,50801,50808,50809,50812,50816,50824,50825,50827,50829,50836,50837,50840,50844,50852,50853,50855,50857,50864,50865,50868,50872,50873,50874,50880,50881,50883,50885,50892,50893,50896,50900,50908,50909,50912,50913,50920,50921,50924,50928,50936,50937,50941,50948,50949,50952,50956,50964,50965,50967,50969,50976,50977,50980,50984,50992,50993,50995,50997,50999,51004,51005,51008,51012,51018,51020,
51021,51023,51025,51026,51027,51028,51029,51030,51031,51032,51036,51040,51048,51051,51060,51061,51064,51068,51069,51070,51075,51076,51077,51079,51080,51081,51082,51086,51088,51089,51092,51094,51095,51096,51098,51104,51105,51107,51108,51109,51110,51116,51117,51120,51124,51132,51133,51135,51136,51137,51144,51145,51148,51150,51152,51160,51165,51172,51176,51180,51200,51201,51204,51208,51210,51216,51217,51219,51221,51222,51228,51229,51232,51236,51244,51245,51247,51249,51256,51260,51264,51272,51273,51276,
51277,51284,51312,51313,51316,51320,51322,51328,51329,51331,51333,51334,51335,51339,51340,51341,51348,51357,51359,51361,51368,51388,51389,51396,51400,51404,51412,51413,51415,51417,51424,51425,51428,51445,51452,51453,51456,51460,51461,51462,51468,51469,51471,51473,51480,51500,51508,51536,51537,51540,51544,51552,51553,51555,51564,51568,51572,51580,51592,51593,51596,51600,51608,51609,51611,51613,51648,51649,51652,51655,51656,51658,51664,51665,51667,51669,51670,51673,51674,51676,51677,51680,51682,51684,
51687,51692,51693,51695,51696,51697,51704,51705,51708,51712,51720,51721,51723,51724,51725,51732,51736,51753,51788,51789,51792,51796,51804,51805,51807,51808,51809,51816,51837,51844,51864,51900,51901,51904,51908,51916,51917,51919,51921,51923,51928,51929,51936,51948,51956,51976,51984,51988,51992,52E3,52001,52033,52040,52041,52044,52048,52056,52057,52061,52068,52088,52089,52124,52152,52180,52196,52199,52201,52236,52237,52240,52244,52252,52253,52257,52258,52263,52264,52265,52268,52270,52272,52280,52281,
52283,52284,52285,52286,52292,52293,52296,52300,52308,52309,52311,52312,52313,52320,52324,52326,52328,52336,52341,52376,52377,52380,52384,52392,52393,52395,52396,52397,52404,52405,52408,52412,52420,52421,52423,52425,52432,52436,52452,52460,52464,52481,52488,52489,52492,52496,52504,52505,52507,52509,52516,52520,52524,52537,52572,52576,52580,52588,52589,52591,52593,52600,52616,52628,52629,52632,52636,52644,52645,52647,52649,52656,52676,52684,52688,52712,52716,52720,52728,52729,52731,52733,52740,52744,
52748,52756,52761,52768,52769,52772,52776,52784,52785,52787,52789,52824,52825,52828,52831,52832,52833,52840,52841,52843,52845,52852,52853,52856,52860,52868,52869,52871,52873,52880,52881,52884,52888,52896,52897,52899,52900,52901,52908,52909,52929,52964,52965,52968,52971,52972,52980,52981,52983,52984,52985,52992,52993,52996,53E3,53008,53009,53011,53013,53020,53024,53028,53036,53037,53039,53040,53041,53048,53076,53077,53080,53084,53092,53093,53095,53097,53104,53105,53108,53112,53120,53125,53132,53153,
53160,53168,53188,53216,53217,53220,53224,53232,53233,53235,53237,53244,53248,53252,53265,53272,53293,53300,53301,53304,53308,53316,53317,53319,53321,53328,53332,53336,53344,53356,53357,53360,53364,53372,53373,53377,53412,53413,53416,53420,53428,53429,53431,53433,53440,53441,53444,53448,53449,53456,53457,53459,53460,53461,53468,53469,53472,53476,53484,53485,53487,53488,53489,53496,53517,53552,53553,53556,53560,53562,53568,53569,53571,53572,53573,53580,53581,53584,53588,53596,53597,53599,53601,53608,
53612,53628,53636,53640,53664,53665,53668,53672,53680,53681,53683,53685,53690,53692,53696,53720,53748,53752,53767,53769,53776,53804,53805,53808,53812,53820,53821,53823,53825,53832,53852,53860,53888,53889,53892,53896,53904,53905,53909,53916,53920,53924,53932,53937,53944,53945,53948,53951,53952,53954,53960,53961,53963,53972,53976,53980,53988,53989,54E3,54001,54004,54008,54016,54017,54019,54021,54028,54029,54030,54032,54036,54038,54044,54045,54047,54048,54049,54053,54056,54057,54060,54064,54072,54073,
54075,54076,54077,54084,54085,54140,54141,54144,54148,54156,54157,54159,54160,54161,54168,54169,54172,54176,54184,54185,54187,54189,54196,54200,54204,54212,54213,54216,54217,54224,54232,54241,54243,54252,54253,54256,54260,54268,54269,54271,54273,54280,54301,54336,54340,54364,54368,54372,54381,54383,54392,54393,54396,54399,54400,54402,54408,54409,54411,54413,54420,54441,54476,54480,54484,54492,54495,54504,54508,54512,54520,54523,54525,54532,54536,54540,54548,54549,54551,54588,54589,54592,54596,54604,
54605,54607,54609,54616,54617,54620,54624,54629,54632,54633,54635,54637,54644,54645,54648,54652,54660,54661,54663,54664,54665,54672,54693,54728,54729,54732,54736,54738,54744,54745,54747,54749,54756,54757,54760,54764,54772,54773,54775,54777,54784,54785,54788,54792,54800,54801,54803,54804,54805,54812,54816,54820,54829,54840,54841,54844,54848,54853,54856,54857,54859,54861,54865,54868,54869,54872,54876,54887,54889,54896,54897,54900,54915,54917,54924,54925,54928,54932,54941,54943,54945,54952,54956,54960,
54969,54971,54980,54981,54984,54988,54993,54996,54999,55001,55008,55012,55016,55024,55029,55036,55037,55040,55044,55057,55064,55065,55068,55072,55080,55081,55083,55085,55092,55093,55096,55100,55108,55111,55113,55120,55121,55124,55126,55127,55128,55129,55136,55137,55139,55141,55145,55148,55152,55156,55164,55165,55169,55176,55177,55180,55184,55192,55193,55195,55197,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,20285,20339,20551,20729,21152,21487,21621,21733,22025,23233,23478,26247,26550,26551,26607,27468,29634,30146,31292,33499,33540,34903,34952,35382,36040,36303,36603,36838,39381,21051,21364,21508,24682,24932,27580,29647,33050,35258,35282,38307,20355,21002,22718,22904,23014,24178,24185,25031,25536,26438,26604,26751,28567,30286,30475,30965,31240,31487,31777,
32925,33390,33393,35563,38291,20075,21917,26359,28212,30883,31469,33883,35088,34638,38824,21208,22350,22570,23884,24863,25022,25121,25954,26577,27204,28187,29976,30131,30435,30640,32058,37039,37969,37970,40853,21283,23724,30002,32987,37440,38296,21083,22536,23004,23713,23831,24247,24378,24394,24951,27743,30074,30086,31968,32115,32177,32652,33108,33313,34193,35137,35611,37628,38477,40007,20171,20215,20491,20977,22607,24887,24894,24936,25913,27114,28433,30117,30342,30422,31623,33445,33995,63744,37799,
38283,21888,23458,22353,63745,31923,32697,37301,20520,21435,23621,24040,25298,25454,25818,25831,28192,28844,31067,36317,36382,63746,36989,37445,37624,20094,20214,20581,24062,24314,24838,26967,33137,34388,36423,37749,39467,20062,20625,26480,26688,20745,21133,21138,27298,30652,37392,40660,21163,24623,36850,20552,25001,25581,25802,26684,27268,28608,33160,35233,38548,22533,29309,29356,29956,32121,32365,32937,35211,35700,36963,40273,25225,27770,28500,32080,32570,35363,20860,24906,31645,35609,37463,37772,
20140,20435,20510,20670,20742,21185,21197,21375,22384,22659,24218,24465,24950,25004,25806,25964,26223,26299,26356,26775,28039,28805,28913,29855,29861,29898,30169,30828,30956,31455,31478,32069,32147,32789,32831,33051,33686,35686,36629,36885,37857,38915,38968,39514,39912,20418,21843,22586,22865,23395,23622,24760,25106,26690,26800,26856,28330,30028,30328,30926,31293,31995,32363,32380,35336,35489,35903,38542,40388,21476,21481,21578,21617,22266,22993,23396,23611,24235,25335,25911,25925,25970,26272,26543,
27073,27837,30204,30352,30590,31295,32660,32771,32929,33167,33510,33533,33776,34241,34865,34996,35493,63747,36764,37678,38599,39015,39640,40723,21741,26011,26354,26767,31296,35895,40288,22256,22372,23825,26118,26801,26829,28414,29736,34974,39908,27752,63748,39592,20379,20844,20849,21151,23380,24037,24656,24685,25329,25511,25915,29657,31354,34467,36002,38799,20018,23521,25096,26524,29916,31185,33747,35463,35506,36328,36942,37707,38982,24275,27112,34303,37101,63749,20896,23448,23532,24931,26874,27454,
28748,29743,29912,31649,32592,33733,35264,36011,38364,39208,21038,24669,25324,36866,20362,20809,21281,22745,24291,26336,27960,28826,29378,29654,31568,33009,37979,21350,25499,32619,20054,20608,22602,22750,24618,24871,25296,27088,39745,23439,32024,32945,36703,20132,20689,21676,21932,23308,23968,24039,25898,25934,26657,27211,29409,30350,30703,32094,32761,33184,34126,34527,36611,36686,37066,39171,39509,39851,19992,20037,20061,20167,20465,20855,21246,21312,21475,21477,21646,22036,22389,22434,23495,23943,
24272,25084,25304,25937,26552,26601,27083,27472,27590,27628,27714,28317,28792,29399,29590,29699,30655,30697,31350,32127,32777,33276,33285,33290,33503,34914,35635,36092,36544,36881,37041,37476,37558,39378,39493,40169,40407,40860,22283,23616,33738,38816,38827,40628,21531,31384,32676,35033,36557,37089,22528,23624,25496,31391,23470,24339,31353,31406,33422,36524,20518,21048,21240,21367,22280,25331,25458,27402,28099,30519,21413,29527,34152,36470,38357,26426,27331,28528,35437,36556,39243,63750,26231,27512,
36020,39740,63751,21483,22317,22862,25542,27131,29674,30789,31418,31429,31998,33909,35215,36211,36917,38312,21243,22343,30023,31584,33740,37406,63752,27224,20811,21067,21127,25119,26840,26997,38553,20677,21156,21220,25027,26020,26681,27135,29822,31563,33465,33771,35250,35641,36817,39241,63753,20170,22935,25810,26129,27278,29748,31105,31165,33449,34942,34943,35167,63754,37670,20235,21450,24613,25201,27762,32026,32102,20120,20834,30684,32943,20225,20238,20854,20864,21980,22120,22331,22522,22524,22804,
22855,22931,23492,23696,23822,24049,24190,24524,25216,26071,26083,26398,26399,26462,26827,26820,27231,27450,27683,27773,27778,28103,29592,29734,29738,29826,29859,30072,30079,30849,30959,31041,31047,31048,31098,31637,32E3,32186,32648,32774,32813,32908,35352,35663,35912,36215,37665,37668,39138,39249,39438,39439,39525,40594,32202,20342,21513,25326,26708,37329,21931,20794,63755,63756,23068,25062,63757,25295,25343,63758,63759,63760,63761,63762,63763,37027,63764,63765,63766,63767,63768,35582,63769,63770,
63771,63772,26262,63773,29014,63774,63775,38627,63776,25423,25466,21335,63777,26511,26976,28275,63778,30007,63779,63780,63781,32013,63782,63783,34930,22218,23064,63784,63785,63786,63787,63788,20035,63789,20839,22856,26608,32784,63790,22899,24180,25754,31178,24565,24684,25288,25467,23527,23511,21162,63791,22900,24361,24594,63792,63793,63794,29785,63795,63796,63797,63798,63799,63800,39377,63801,63802,63803,63804,63805,63806,63807,63808,63809,63810,63811,28611,63812,63813,33215,36786,24817,63814,63815,
33126,63816,63817,23615,63818,63819,63820,63821,63822,63823,63824,63825,23273,35365,26491,32016,63826,63827,63828,63829,63830,63831,33021,63832,63833,23612,27877,21311,28346,22810,33590,20025,20150,20294,21934,22296,22727,24406,26039,26086,27264,27573,28237,30701,31471,31774,32222,34507,34962,37170,37723,25787,28606,29562,30136,36948,21846,22349,25018,25812,26311,28129,28251,28525,28601,30192,32835,33213,34113,35203,35527,35674,37663,27795,30035,31572,36367,36957,21776,22530,22616,24162,25095,25758,
26848,30070,31958,34739,40680,20195,22408,22382,22823,23565,23729,24118,24453,25140,25825,29619,33274,34955,36024,38538,40667,23429,24503,24755,20498,20992,21040,22294,22581,22615,23566,23648,23798,23947,24230,24466,24764,25361,25481,25623,26691,26873,27330,28120,28193,28372,28644,29182,30428,30585,31153,31291,33796,35241,36077,36339,36424,36867,36884,36947,37117,37709,38518,38876,27602,28678,29272,29346,29544,30563,31167,31716,32411,35712,22697,24775,25958,26109,26302,27788,28958,29129,35930,38931,
20077,31361,20189,20908,20941,21205,21516,24999,26481,26704,26847,27934,28540,30140,30643,31461,33012,33891,37509,20828,26007,26460,26515,30168,31431,33651,63834,35910,36887,38957,23663,33216,33434,36929,36975,37389,24471,23965,27225,29128,30331,31561,34276,35588,37159,39472,21895,25078,63835,30313,32645,34367,34746,35064,37007,63836,27931,28889,29662,32097,33853,63837,37226,39409,63838,20098,21365,27396,27410,28734,29211,34349,40478,21068,36771,23888,25829,25900,27414,28651,31811,32412,34253,35172,
35261,25289,33240,34847,24266,26391,28010,29436,29701,29807,34690,37086,20358,23821,24480,33802,20919,25504,30053,20142,20486,20841,20937,26753,27153,31918,31921,31975,33391,35538,36635,37327,20406,20791,21237,21570,24300,24942,25150,26053,27354,28670,31018,34268,34851,38317,39522,39530,40599,40654,21147,26310,27511,28701,31019,36706,38722,24976,25088,25891,28451,29001,29833,32244,32879,34030,36646,36899,37706,20925,21015,21155,27916,28872,35010,24265,25986,27566,28610,31806,29557,20196,20278,22265,
63839,23738,23994,24604,29618,31533,32666,32718,32838,36894,37428,38646,38728,38936,40801,20363,28583,31150,37300,38583,21214,63840,25736,25796,27347,28510,28696,29200,30439,32769,34310,34396,36335,36613,38706,39791,40442,40565,30860,31103,32160,33737,37636,40575,40595,35542,22751,24324,26407,28711,29903,31840,32894,20769,28712,29282,30922,36034,36058,36084,38647,20102,20698,23534,24278,26009,29134,30274,30637,32842,34044,36988,39719,40845,22744,23105,23650,27155,28122,28431,30267,32047,32311,34078,
35128,37860,38475,21129,26066,26611,27060,27969,28316,28687,29705,29792,30041,30244,30827,35628,39006,20845,25134,38520,20374,20523,23833,28138,32184,36650,24459,24900,26647,63841,38534,21202,32907,20956,20940,26974,31260,32190,33777,38517,20442,21033,21400,21519,21774,23653,24743,26446,26792,28012,29313,29432,29702,29827,63842,30178,31852,32633,32696,33673,35023,35041,37324,37328,38626,39881,21533,28542,29136,29848,34298,36522,38563,40023,40607,26519,28107,29747,33256,38678,30764,31435,31520,31890,
25705,29802,30194,30908,30952,39340,39764,40635,23518,24149,28448,33180,33707,37E3,19975,21325,23081,24018,24398,24930,25405,26217,26364,28415,28459,28771,30622,33836,34067,34875,36627,39237,39995,21788,25273,26411,27819,33545,35178,38778,20129,22916,24536,24537,26395,32178,32596,33426,33579,33725,36638,37017,22475,22969,23186,23504,26151,26522,26757,27599,29028,32629,36023,36067,36993,39749,33032,35978,38476,39488,40613,23391,27667,29467,30450,30431,33804,20906,35219,20813,20885,21193,26825,27796,
30468,30496,32191,32236,38754,40629,28357,34065,20901,21517,21629,26126,26269,26919,28319,30399,30609,33559,33986,34719,37225,37528,40180,34946,20398,20882,21215,22982,24125,24917,25720,25721,26286,26576,27169,27597,27611,29279,29281,29761,30520,30683,32791,33468,33541,35584,35624,35980,26408,27792,29287,30446,30566,31302,40361,27519,27794,22818,26406,33945,21359,22675,22937,24287,25551,26164,26483,28218,29483,31447,33495,37672,21209,24043,25006,25035,25098,25287,25771,26080,26969,27494,27595,28961,
29687,30045,32326,33310,33538,34154,35491,36031,38695,40289,22696,40664,20497,21006,21563,21839,25991,27766,32010,32011,32862,34442,38272,38639,21247,27797,29289,21619,23194,23614,23883,24396,24494,26410,26806,26979,28220,28228,30473,31859,32654,34183,35598,36855,38753,40692,23735,24758,24845,25003,25935,26107,26108,27665,27887,29599,29641,32225,38292,23494,34588,35600,21085,21338,25293,25615,25778,26420,27192,27850,29632,29854,31636,31893,32283,33162,33334,34180,36843,38649,39361,20276,21322,21453,
21467,25292,25644,25856,26001,27075,27886,28504,29677,30036,30242,30436,30460,30928,30971,31020,32070,33324,34784,36820,38930,39151,21187,25300,25765,28196,28497,30332,36299,37297,37474,39662,39747,20515,20621,22346,22952,23592,24135,24439,25151,25918,26041,26049,26121,26507,27036,28354,30917,32033,32938,33152,33323,33459,33953,34444,35370,35607,37030,38450,40848,20493,20467,63843,22521,24472,25308,25490,26479,28227,28953,30403,32972,32986,35060,35061,35097,36064,36649,37197,38506,20271,20336,24091,
26575,26658,30333,30334,39748,24161,27146,29033,29140,30058,63844,32321,34115,34281,39132,20240,31567,32624,38309,20961,24070,26805,27710,27726,27867,29359,31684,33539,27861,29754,20731,21128,22721,25816,27287,29863,30294,30887,34327,38370,38713,63845,21342,24321,35722,36776,36783,37002,21029,30629,40009,40712,19993,20482,20853,23643,24183,26142,26170,26564,26821,28851,29953,30149,31177,31453,36647,39200,39432,20445,22561,22577,23542,26222,27493,27921,28282,28541,29668,29995,33769,35036,35091,35676,
36628,20239,20693,21264,21340,23443,24489,26381,31119,33145,33583,34068,35079,35206,36665,36667,39333,39954,26412,20086,20472,22857,23553,23791,23792,25447,26834,28925,29090,29739,32299,34028,34562,36898,37586,40179,19981,20184,20463,20613,21078,21103,21542,21648,22496,22827,23142,23386,23413,23500,24220,63846,25206,25975,26023,28014,28325,29238,31526,31807,32566,33104,33105,33178,33344,33433,33705,35331,36E3,36070,36091,36212,36282,37096,37340,38428,38468,39385,40167,21271,20998,21545,22132,22707,
22868,22894,24575,24996,25198,26128,27774,28954,30406,31881,31966,32027,33452,36033,38640,63847,20315,24343,24447,25282,23849,26379,26842,30844,32323,40300,19989,20633,21269,21290,21329,22915,23138,24199,24754,24970,25161,25209,26E3,26503,27047,27604,27606,27607,27608,27832,63848,29749,30202,30738,30865,31189,31192,31875,32203,32737,32933,33086,33218,33778,34586,35048,35513,35692,36027,37145,38750,39131,40763,22188,23338,24428,25996,27315,27567,27996,28657,28693,29277,29613,36007,36051,38971,24977,
27703,32856,39425,20045,20107,20123,20181,20282,20284,20351,20447,20735,21490,21496,21766,21987,22235,22763,22882,23057,23531,23546,23556,24051,24107,24473,24605,25448,26012,26031,26614,26619,26797,27515,27801,27863,28195,28681,29509,30722,31038,31040,31072,31169,31721,32023,32114,32902,33293,33678,34001,34503,35039,35408,35422,35613,36060,36198,36781,37034,39164,39391,40605,21066,63849,26388,63850,20632,21034,23665,25955,27733,29642,29987,30109,31639,33948,37240,38704,20087,25746,27578,29022,34217,
19977,63851,26441,26862,28183,33439,34072,34923,25591,28545,37394,39087,19978,20663,20687,20767,21830,21930,22039,23360,23577,23776,24120,24202,24224,24258,24819,26705,27233,28248,29245,29248,29376,30456,31077,31665,32724,35059,35316,35443,35937,36062,38684,22622,29885,36093,21959,63852,31329,32034,33394,29298,29983,29989,63853,31513,22661,22779,23996,24207,24246,24464,24661,25234,25471,25933,26257,26329,26360,26646,26866,29312,29790,31598,32110,32214,32626,32997,33298,34223,35199,35475,36893,37604,
40653,40736,22805,22893,24109,24796,26132,26227,26512,27728,28101,28511,30707,30889,33990,37323,37675,20185,20682,20808,21892,23307,23459,25159,25982,26059,28210,29053,29697,29764,29831,29887,30316,31146,32218,32341,32680,33146,33203,33337,34330,34796,35445,36323,36984,37521,37925,39245,39854,21352,23633,26964,27844,27945,28203,33292,34203,35131,35373,35498,38634,40807,21089,26297,27570,32406,34814,36109,38275,38493,25885,28041,29166,63854,22478,22995,23468,24615,24826,25104,26143,26207,29481,29689,
30427,30465,31596,32854,32882,33125,35488,37266,19990,21218,27506,27927,31237,31545,32048,63855,36016,21484,22063,22609,23477,23567,23569,24034,25152,25475,25620,26157,26803,27836,28040,28335,28703,28836,29138,29990,30095,30094,30233,31505,31712,31787,32032,32057,34092,34157,34311,35380,36877,36961,37045,37559,38902,39479,20439,23660,26463,28049,31903,32396,35606,36118,36895,23403,24061,25613,33984,36956,39137,29575,23435,24730,26494,28126,35359,35494,36865,38924,21047,63856,28753,30862,37782,34928,
37335,20462,21463,22013,22234,22402,22781,23234,23432,23723,23744,24101,24833,25101,25163,25480,25628,25910,25976,27193,27530,27700,27929,28465,29159,29417,29560,29703,29874,30246,30561,31168,31319,31466,31929,32143,32172,32353,32670,33065,33585,33936,34010,34282,34966,35504,35728,36664,36930,36995,37228,37526,37561,38539,38567,38568,38614,38656,38920,39318,39635,39706,21460,22654,22809,23408,23487,28113,28506,29087,29729,29881,32901,33789,24033,24455,24490,24642,26092,26642,26991,27219,27529,27957,
28147,29667,30462,30636,31565,32020,33059,33308,33600,34036,34147,35426,35524,37255,37662,38918,39348,25100,34899,36848,37477,23815,23847,23913,29791,33181,34664,28629,25342,32722,35126,35186,19998,20056,20711,21213,21319,25215,26119,32361,34821,38494,20365,21273,22070,22987,23204,23608,23630,23629,24066,24337,24643,26045,26159,26178,26558,26612,29468,30690,31034,32709,33940,33997,35222,35430,35433,35553,35925,35962,22516,23508,24335,24687,25325,26893,27542,28252,29060,31698,34645,35672,36606,39135,
39166,20280,20353,20449,21627,23072,23480,24892,26032,26216,29180,30003,31070,32051,33102,33251,33688,34218,34254,34563,35338,36523,36763,63857,36805,22833,23460,23526,24713,23529,23563,24515,27777,63858,28145,28683,29978,33455,35574,20160,21313,63859,38617,27663,20126,20420,20818,21854,23077,23784,25105,29273,33469,33706,34558,34905,35357,38463,38597,39187,40201,40285,22538,23731,23997,24132,24801,24853,25569,27138,28197,37122,37716,38990,39952,40823,23433,23736,25353,26191,26696,30524,38593,38797,
38996,39839,26017,35585,36555,38332,21813,23721,24022,24245,26263,30284,33780,38343,22739,25276,29390,40232,20208,22830,24591,26171,27523,31207,40230,21395,21696,22467,23830,24859,26326,28079,30861,33406,38552,38724,21380,25212,25494,28082,32266,33099,38989,27387,32588,40367,40474,20063,20539,20918,22812,24825,25590,26928,29242,32822,63860,37326,24369,63861,63862,32004,33509,33903,33979,34277,36493,63863,20335,63864,63865,22756,23363,24665,25562,25880,25965,26264,63866,26954,27171,27915,28673,29036,
30162,30221,31155,31344,63867,32650,63868,35140,63869,35731,37312,38525,63870,39178,22276,24481,26044,28417,30208,31142,35486,39341,39770,40812,20740,25014,25233,27277,33222,20547,22576,24422,28937,35328,35578,23420,34326,20474,20796,22196,22852,25513,28153,23978,26989,20870,20104,20313,63871,63872,63873,22914,63874,63875,27487,27741,63876,29877,30998,63877,33287,33349,33593,36671,36701,63878,39192,63879,63880,63881,20134,63882,22495,24441,26131,63883,63884,30123,32377,35695,63885,36870,39515,22181,
22567,23032,23071,23476,63886,24310,63887,63888,25424,25403,63889,26941,27783,27839,28046,28051,28149,28436,63890,28895,28982,29017,63891,29123,29141,63892,30799,30831,63893,31605,32227,63894,32303,63895,34893,36575,63896,63897,63898,37467,63899,40182,63900,63901,63902,24709,28037,63903,29105,63904,63905,38321,21421,63906,63907,63908,26579,63909,28814,28976,29744,33398,33490,63910,38331,39653,40573,26308,63911,29121,33865,63912,63913,22603,63914,63915,23992,24433,63916,26144,26254,27001,27054,27704,
27891,28214,28481,28634,28699,28719,29008,29151,29552,63917,29787,63918,29908,30408,31310,32403,63919,63920,33521,35424,36814,63921,37704,63922,38681,63923,63924,20034,20522,63925,21E3,21473,26355,27757,28618,29450,30591,31330,33454,34269,34306,63926,35028,35427,35709,35947,63927,37555,63928,38675,38928,20116,20237,20425,20658,21320,21566,21555,21978,22626,22714,22887,23067,23524,24735,63929,25034,25942,26111,26212,26791,27738,28595,28879,29100,29522,31613,34568,35492,39986,40711,23627,27779,29508,
29577,37434,28331,29797,30239,31337,32277,34314,20800,22725,25793,29934,29973,30320,32705,37013,38605,39252,28198,29926,31401,31402,33253,34521,34680,35355,23113,23436,23451,26785,26880,28003,29609,29715,29740,30871,32233,32747,33048,33109,33694,35916,38446,38929,26352,24448,26106,26505,27754,29579,20525,23043,27498,30702,22806,23916,24013,29477,30031,63930,63931,20709,20985,22575,22829,22934,23002,23525,63932,63933,23970,25303,25622,25747,25854,63934,26332,63935,27208,63936,29183,29796,63937,31368,
31407,32327,32350,32768,33136,63938,34799,35201,35616,36953,63939,36992,39250,24958,27442,28020,32287,35109,36785,20433,20653,20887,21191,22471,22665,23481,24248,24898,27029,28044,28263,28342,29076,29794,29992,29996,32883,33592,33993,36362,37780,37854,63940,20110,20305,20598,20778,21448,21451,21491,23431,23507,23588,24858,24962,26100,29275,29591,29760,30402,31056,31121,31161,32006,32701,33419,34261,34398,36802,36935,37109,37354,38533,38632,38633,21206,24423,26093,26161,26671,29020,31286,37057,38922,
20113,63941,27218,27550,28560,29065,32792,33464,34131,36939,38549,38642,38907,34074,39729,20112,29066,38596,20803,21407,21729,22291,22290,22435,23195,23236,23491,24616,24895,25588,27781,27961,28274,28304,29232,29503,29783,33489,34945,36677,36960,63942,38498,39E3,40219,26376,36234,37470,20301,20553,20702,21361,22285,22996,23041,23561,24944,26256,28205,29234,29771,32239,32963,33806,33894,34111,34655,34907,35096,35586,36949,38859,39759,20083,20369,20754,20842,63943,21807,21929,23418,23461,24188,24189,
24254,24736,24799,24840,24841,25540,25912,26377,63944,26580,26586,63945,26977,26978,27833,27943,63946,28216,63947,28641,29494,29495,63948,29788,30001,63949,30290,63950,63951,32173,33278,33848,35029,35480,35547,35565,36400,36418,36938,36926,36986,37193,37321,37742,63952,63953,22537,63954,27603,32905,32946,63955,63956,20801,22891,23609,63957,63958,28516,29607,32996,36103,63959,37399,38287,63960,63961,63962,63963,32895,25102,28700,32104,34701,63964,22432,24681,24903,27575,35518,37504,38577,20057,21535,
28139,34093,38512,38899,39150,25558,27875,37009,20957,25033,33210,40441,20381,20506,20736,23452,24847,25087,25836,26885,27589,30097,30691,32681,33380,34191,34811,34915,35516,35696,37291,20108,20197,20234,63965,63966,22839,23016,63967,24050,24347,24411,24609,63968,63969,63970,63971,29246,29669,63972,30064,30157,63973,31227,63974,32780,32819,32900,33505,33617,63975,63976,36029,36019,36999,63977,63978,39156,39180,63979,63980,28727,30410,32714,32716,32764,35610,20154,20161,20995,21360,63981,21693,22240,
23035,23493,24341,24525,28270,63982,63983,32106,33589,63984,34451,35469,63985,38765,38775,63986,63987,19968,20314,20350,22777,26085,28322,36920,37808,39353,20219,22764,22922,23001,24641,63988,63989,31252,63990,33615,36035,20837,21316,63991,63992,63993,20173,21097,23381,33471,20180,21050,21672,22985,23039,23376,23383,23388,24675,24904,28363,28825,29038,29574,29943,30133,30913,32043,32773,33258,33576,34071,34249,35566,36039,38604,20316,21242,22204,26027,26152,28796,28856,29237,32189,33421,37196,38592,
40306,23409,26855,27544,28538,30430,23697,26283,28507,31668,31786,34870,38620,19976,20183,21280,22580,22715,22767,22892,23559,24115,24196,24373,25484,26290,26454,27167,27299,27404,28479,29254,63994,29520,29835,31456,31911,33144,33247,33255,33674,33900,34083,34196,34255,35037,36115,37292,38263,38556,20877,21705,22312,23472,25165,26448,26685,26771,28221,28371,28797,32289,35009,36001,36617,40779,40782,29229,31631,35533,37658,20295,20302,20786,21632,22992,24213,25269,26485,26990,27159,27822,28186,29401,
29482,30141,31672,32053,33511,33785,33879,34295,35419,36015,36487,36889,37048,38606,40799,21219,21514,23265,23490,25688,25973,28404,29380,63995,30340,31309,31515,31821,32318,32735,33659,35627,36042,36196,36321,36447,36842,36857,36969,37841,20291,20346,20659,20840,20856,21069,21098,22625,22652,22880,23560,23637,24283,24731,25136,26643,27583,27656,28593,29006,29728,3E4,30008,30033,30322,31564,31627,31661,31686,32399,35438,36670,36681,37439,37523,37666,37931,38651,39002,39019,39198,20999,25130,25240,
27993,30308,31434,31680,32118,21344,23742,24215,28472,28857,31896,38673,39822,40670,25509,25722,34678,19969,20117,20141,20572,20597,21576,22979,23450,24128,24237,24311,24449,24773,25402,25919,25972,26060,26230,26232,26622,26984,27273,27491,27712,28096,28136,28191,28254,28702,28833,29582,29693,30010,30555,30855,31118,31243,31357,31934,32142,33351,35330,35562,35998,37165,37194,37336,37478,37580,37664,38662,38742,38748,38914,40718,21046,21137,21884,22564,24093,24351,24716,25552,26799,28639,31085,31532,
33229,34234,35069,35576,36420,37261,38500,38555,38717,38988,40778,20430,20806,20939,21161,22066,24340,24427,25514,25805,26089,26177,26362,26361,26397,26781,26839,27133,28437,28526,29031,29157,29226,29866,30522,31062,31066,31199,31264,31381,31895,31967,32068,32368,32903,34299,34468,35412,35519,36249,36481,36896,36973,37347,38459,38613,40165,26063,31751,36275,37827,23384,23562,21330,25305,29469,20519,23447,24478,24752,24939,26837,28121,29742,31278,32066,32156,32305,33131,36394,36405,37758,37912,20304,
22352,24038,24231,25387,32618,20027,20303,20367,20570,23005,32964,21610,21608,22014,22863,23449,24030,24282,26205,26417,26609,26666,27880,27954,28234,28557,28855,29664,30087,31820,32002,32044,32162,33311,34523,35387,35461,36208,36490,36659,36913,37198,37202,37956,39376,31481,31909,20426,20737,20934,22472,23535,23803,26201,27197,27994,28310,28652,28940,30063,31459,34850,36897,36981,38603,39423,33537,20013,20210,34886,37325,21373,27355,26987,27713,33914,22686,24974,26366,25327,28893,29969,30151,32338,
33976,35657,36104,20043,21482,21675,22320,22336,24535,25345,25351,25711,25903,26088,26234,26525,26547,27490,27744,27802,28460,30693,30757,31049,31063,32025,32930,33026,33267,33437,33463,34584,35468,63996,36100,36286,36978,30452,31257,31287,32340,32887,21767,21972,22645,25391,25634,26185,26187,26733,27035,27524,27941,28337,29645,29800,29857,30043,30137,30433,30494,30603,31206,32265,32285,33275,34095,34967,35386,36049,36587,36784,36914,37805,38499,38515,38663,20356,21489,23018,23241,24089,26702,29894,
30142,31209,31378,33187,34541,36074,36300,36845,26015,26389,63997,22519,28503,32221,36655,37878,38598,24501,25074,28548,19988,20376,20511,21449,21983,23919,24046,27425,27492,30923,31642,63998,36425,36554,36974,25417,25662,30528,31364,37679,38015,40810,25776,28591,29158,29864,29914,31428,31762,32386,31922,32408,35738,36106,38013,39184,39244,21049,23519,25830,26413,32046,20717,21443,22649,24920,24921,25082,26028,31449,35730,35734,20489,20513,21109,21809,23100,24288,24432,24884,25950,26124,26166,26274,
27085,28356,28466,29462,30241,31379,33081,33369,33750,33980,20661,22512,23488,23528,24425,25505,30758,32181,33756,34081,37319,37365,20874,26613,31574,36012,20932,22971,24765,34389,20508,63999,21076,23610,24957,25114,25299,25842,26021,28364,30240,33034,36448,38495,38587,20191,21315,21912,22825,24029,25797,27849,28154,29588,31359,33307,34214,36068,36368,36983,37351,38369,38433,38854,20984,21746,21894,24505,25764,28552,32180,36639,36685,37941,20681,23574,27838,28155,29979,30651,31805,31844,35449,35522,
22558,22974,24086,25463,29266,30090,30571,35548,36028,36626,24307,26228,28152,32893,33729,35531,38737,39894,64E3,21059,26367,28053,28399,32224,35558,36910,36958,39636,21021,21119,21736,24980,25220,25307,26786,26898,26970,27189,28818,28966,30813,30977,30990,31186,31245,32918,33400,33493,33609,34121,35970,36229,37218,37259,37294,20419,22225,29165,30679,34560,35320,23544,24534,26449,37032,21474,22618,23541,24740,24961,25696,32317,32880,34085,37507,25774,20652,23828,26368,22684,25277,25512,26894,27E3,
27166,28267,30394,31179,33467,33833,35535,36264,36861,37138,37195,37276,37648,37656,37786,38619,39478,39949,19985,30044,31069,31482,31569,31689,32302,33988,36441,36468,36600,36880,26149,26943,29763,20986,26414,40668,20805,24544,27798,34802,34909,34935,24756,33205,33795,36101,21462,21561,22068,23094,23601,28810,32736,32858,33030,33261,36259,37257,39519,40434,20596,20164,21408,24827,28204,23652,20360,20516,21988,23769,24159,24677,26772,27835,28100,29118,30164,30196,30305,31258,31305,32199,32251,32622,
33268,34473,36636,38601,39347,40786,21063,21189,39149,35242,19971,26578,28422,20405,23522,26517,27784,28024,29723,30759,37341,37756,34756,31204,31281,24555,20182,21668,21822,22702,22949,24816,25171,25302,26422,26965,33333,38464,39345,39389,20524,21331,21828,22396,64001,25176,64002,25826,26219,26589,28609,28655,29730,29752,35351,37944,21585,22022,22374,24392,24986,27470,28760,28845,32187,35477,22890,33067,25506,30472,32829,36010,22612,25645,27067,23445,24081,28271,64003,34153,20812,21488,22826,24608,
24907,27526,27760,27888,31518,32974,33492,36294,37040,39089,64004,25799,28580,25745,25860,20814,21520,22303,35342,24927,26742,64005,30171,31570,32113,36890,22534,27084,33151,35114,36864,38969,20600,22871,22956,25237,36879,39722,24925,29305,38358,22369,23110,24052,25226,25773,25850,26487,27874,27966,29228,29750,30772,32631,33453,36315,38935,21028,22338,26495,29256,29923,36009,36774,37393,38442,20843,21485,25420,20329,21764,24726,25943,27803,28031,29260,29437,31255,35207,35997,24429,28558,28921,33192,
24846,20415,20559,25153,29255,31687,32232,32745,36941,38829,39449,36022,22378,24179,26544,33805,35413,21536,23318,24163,24290,24330,25987,32954,34109,38281,38491,20296,21253,21261,21263,21638,21754,22275,24067,24598,25243,25265,25429,64006,27873,28006,30129,30770,32990,33071,33502,33889,33970,34957,35090,36875,37610,39165,39825,24133,26292,26333,28689,29190,64007,20469,21117,24426,24915,26451,27161,28418,29922,31080,34920,35961,39111,39108,39491,21697,31263,26963,35575,35914,39080,39342,24444,25259,
30130,30382,34987,36991,38466,21305,24380,24517,27852,29644,30050,30091,31558,33534,39325,20047,36924,19979,20309,21414,22799,24264,26160,27827,29781,33655,34662,36032,36944,38686,39957,22737,23416,34384,35604,40372,23506,24680,24717,26097,27735,28450,28579,28698,32597,32752,38289,38290,38480,38867,21106,36676,20989,21547,21688,21859,21898,27323,28085,32216,33382,37532,38519,40569,21512,21704,30418,34532,38308,38356,38492,20130,20233,23022,23270,24055,24658,25239,26477,26689,27782,28207,32568,32923,
33322,64008,64009,38917,20133,20565,21683,22419,22874,23401,23475,25032,26999,28023,28707,34809,35299,35442,35559,36994,39405,39608,21182,26680,20502,24184,26447,33607,34892,20139,21521,22190,29670,37141,38911,39177,39255,39321,22099,22687,34395,35377,25010,27382,29563,36562,27463,38570,39511,22869,29184,36203,38761,20436,23796,24358,25080,26203,27883,28843,29572,29625,29694,30505,30541,32067,32098,32291,33335,34898,64010,36066,37449,39023,23377,31348,34880,38913,23244,20448,21332,22846,23805,25406,
28025,29433,33029,33031,33698,37583,38960,20136,20804,21009,22411,24418,27842,28366,28677,28752,28847,29074,29673,29801,33610,34722,34913,36872,37026,37795,39336,20846,24407,24800,24935,26291,34137,36426,37295,38795,20046,20114,21628,22741,22778,22909,23733,24359,25142,25160,26122,26215,27627,28009,28111,28246,28408,28564,28640,28649,28765,29392,29733,29786,29920,30355,31068,31946,32286,32993,33446,33899,33983,34382,34399,34676,35703,35946,37804,38912,39013,24785,25110,37239,23130,26127,28151,28222,
29759,39746,24573,24794,31503,21700,24344,27742,27859,27946,28888,32005,34425,35340,40251,21270,21644,23301,27194,28779,30069,31117,31166,33457,33775,35441,35649,36008,38772,64011,25844,25899,30906,30907,31339,20024,21914,22864,23462,24187,24739,25563,27489,26213,26707,28185,29029,29872,32008,36996,39529,39973,27963,28369,29502,35905,38346,20976,24140,24488,24653,24822,24880,24908,26179,26180,27045,27841,28255,28361,28514,29004,29852,30343,31681,31783,33618,34647,36945,38541,40643,21295,22238,24315,
24458,24674,24724,25079,26214,26371,27292,28142,28590,28784,29546,32362,33214,33588,34516,35496,36036,21123,29554,23446,27243,37892,21742,22150,23389,25928,25989,26313,26783,28045,28102,29243,32948,37237,39501,20399,20505,21402,21518,21564,21897,21957,24127,24460,26429,29030,29661,36869,21211,21235,22628,22734,28932,29071,29179,34224,35347,26248,34216,21927,26244,29002,33841,21321,21913,27585,24409,24509,25582,26249,28999,35569,36637,40638,20241,25658,28875,30054,34407,24676,35662,40440,20807,20982,
21256,27958,33016,40657,26133,27427,28824,30165,21507,23673,32007,35350,27424,27453,27462,21560,24688,27965,32725,33288,20694,20958,21916,22123,22221,23020,23305,24076,24985,24984,25137,26206,26342,29081,29113,29114,29351,31143,31232,32690,35440,0];var ksc5601max=tabksc5601.length-1;sofo.utils.convert_ksc5601_to_ucs2=function(byte1,byte2){var tab_idx=(byte1-161)*94+byte2-161;var code_ucs2;if(tab_idx>=0&&tab_idx<ksc5601max){code_ucs2=tabksc5601[tab_idx];if(code_ucs2!=-1)return code_ucs2}return 0};
sofo.utils.ksc5601_to_ucs2=function(ksc5601){var iter;var ucs2=[];for(iter=0;iter<ksc5601.length;++iter){var byte1=ksc5601.charCodeAt(iter);var byte2;if(0<=byte1&&byte1<128)ucs2.push(String.fromCharCode(byte1));else if(iter+1==ksc5601.length)if(0<=byte1&&byte1<128)ucs2.push(String.fromCharCode(byte1));else if(byte1<256)ucs2.push("?");else ucs2.push("??");else{byte2=ksc5601.charCodeAt(iter+1);var code=sofo.utils.convert_ksc5601_to_ucs2(byte1,byte2);if(code!=0){ucs2.push(String.fromCharCode(code));
iter++}else if(byte1<256)ucs2.push("?");else ucs2.push("??")}}return ucs2.join("")};sofo.utils.ucs2_to_ksc5601=function(ucs2){var iter;var ksc5601=forge.util.createBuffer();for(iter=0;iter<ucs2.length;++iter){var byte1;var byte2;var code=ucs2.charCodeAt(iter);if(0<=code&&code<128)ksc5601.putByte(code);else{var idx=tabksc5601.indexOf(code);if(idx!=-1){var mod=Math.floor(idx/94);byte1=mod+161;byte2=idx-mod*94+161;ksc5601.putByte(byte1);ksc5601.putByte(byte2)}else{ksc5601.putByte("?".charCodeAt(0));
if(code>=256)ksc5601.putByte("?".charCodeAt(0))}}}return ksc5601}})();(function(){"storage";"";var storage=sofo.storage;var error=sofo.error;var asn1=forge.asn1;var pkcs12=forge.pkcs12;var crypto=forge.crypto;var pki=forge.pki;var random=forge.random;var util=forge.util;var mdsha1=forge.md.sha1;var mdsha256=forge.md.sha256;var storagetype=["local"];var storageCertId="AnySignWebCertStorage";var storageKey="CertandKey";storage.setStorageTypes=function(storageType){if(typeof storageType==="undefined")return;storagetype=storageType};storage.setItem=function(id,key,data){util.setItem(null,
id,key,data,storagetype)};storage.getItem=function(id,key){return util.getItem(null,id,key,storagetype)};storage.removeItem=function(id,key){util.removeItem(null,id,key,storagetype)};storage.clearItems=function(id){util.clearItems(null,id,storagetype)};storage.chunkToData=function(chunk){var convdata=chunk;var resultData=asn1.fromDer(util.createBuffer(convdata));return resultData};storage.dataToChunk=function(data){var convdata=data;var resultChunk=asn1.toDer(convdata);return resultChunk};storage.saveCertKey=
function(signCert,signKey,kmCert,kmKey,option){var storageList=[];var flagCheckSameCertId=false;try{storageList=this.getItem(storageCertId,storageKey);if(storageList===null)storageList=[];var id=storage.getCertFingerPrint(signCert);for(var nindex=0;nindex<storageList.length;nindex++)if(storageList[nindex].id===id){flagCheckSameCertId=true;break}if(flagCheckSameCertId!==true){var encCert=_encryptCertKey(signCert,signKey,kmCert,kmKey);if(!encCert){error.setError(error.ERROR_SAVECERT);return-1}storageList.push({id:id,
cert:encCert})}else if(option==1){var encCert=_encryptCertKey(signCert,signKey,kmCert,kmKey);if(!encCert){error.setError(error.ERROR_SAVECERT);return-1}storageList.splice(nindex,1,{id:id,cert:encCert})}else return 1;this.setItem(storageCertId,storageKey,storageList)}catch(e){error.setError(error.ERROR_SAVECERT,e);return-1}return 0};storage.changeCertPriKey=function(signCert,signKey,kmCert,kmKey){var storageList=[];var flagCheckSameCertId=false;try{storageList=this.getItem(storageCertId,storageKey);
if(storageList===null)storageList=[];var id=storage.getCertFingerPrint(signCert);var nindex;for(nindex=0;nindex<storageList.length;nindex++)if(storageList[nindex].id===id){flagCheckSameCertId=true;break}if(flagCheckSameCertId===true)storageList.splice(nindex,1,{id:id,cert:_encryptCertKey(signCert,signKey,kmCert?kmCert:null,kmKey?kmKey:null)});else{error.setError(error.ERROR_GETCERTIFICATE);return false}this.setItem(storageCertId,storageKey,storageList)}catch(e){error.setError(error.ERROR_CHANGECERTPASSWORD,
e);return false}return true};storage.deleteCert=function(index){var storageList=[];try{storageList=this.getItem(storageCertId,storageKey);for(var nindex=0;nindex<storageList.length;nindex++)if(nindex==index)storageList.splice(nindex,1);this.setItem(storageCertId,storageKey,storageList)}catch(e){error.setError(error.ERROR_DELETECERT,e);return false}return true};storage.getCertKey=function(id){var CertKeyData;var storageList=[];storageList=this.getItem(storageCertId,storageKey);if(typeof storageList!==
"undefined"&&storageList.length!==0)for(var nindex=0;nindex<storageList.length;nindex++){if(storageList[nindex].id===id){CertKeyData={signCert:pki.certificateFromAsn1(storage.chunkToData(storageList[nindex].cert),true),signKey:storage.chunkToData(storageList[nindex].key)};break}}else console.log("No CertandKey in WebStorage");return CertKeyData};storage.getCertKeyList=function(){var storageList=[];var CertKeyArray=[];var retry=true;try{while(retry){retry=false;CertKeyArray=this.getItem(storageCertId,
storageKey);if(!CertKeyArray)return storageList;if(typeof CertKeyArray!=="undefined"&&CertKeyArray.length!==0)for(var idx=0;idx<CertKeyArray.length;idx++){if(!CertKeyArray[idx].cert){storage.deleteCert(idx);retry=true;break}var CertKeySet=_decryptCertKey(CertKeyArray[idx].cert);if(!CertKeySet){storage.deleteCert(idx);retry=true;break}var signCert,signKey,kmCert,kmKey;for(var arrayKey in CertKeySet){if(arrayKey==="signCert")signCert=CertKeySet[arrayKey];if(arrayKey==="signKey")signKey=CertKeySet[arrayKey];
if(arrayKey==="kmCert")kmCert=CertKeySet[arrayKey];if(arrayKey==="kmKey")kmKey=CertKeySet[arrayKey]}if(typeof signCert!=="undefined"&&typeof signKey!=="undefined"&&typeof kmCert!=="undefined"&&typeof kmKey!=="undefined")storageList.push({signCert:signCert,signKey:signKey,kmCert:kmCert,kmKey:kmKey});else if(typeof signCert!=="undefined"&&typeof signKey!=="undefined")storageList.push({signCert:signCert,signKey:signKey})}if(retry)if(storageList.length>0)storageList.splice(0,storageList.length)}}catch(e){error.setError(error.ERROR_GETCERTTREE,
e);return storageList}if(storageList.length==0)error.setError(error.ERROR_GETCERTTREE);return storageList};storage.saveCertKeyfromPfxfile=function(pfxPassword){var sfJQuery=SofoAnySignJQuery;var gpfxpassword=pfxPassword;if(this.hiddenInputElement)sfJQuery(this.hiddenInputElement).remove();this.hiddenInputElement=document.createElement("input");var fileSelecter=this.hiddenInputElement;document.body.appendChild(fileSelecter);fileSelecter.type="file";sfJQuery(fileSelecter).offset({top:-1E3,right:0});
sfJQuery(fileSelecter).attr("accept",".pfx,.p12");sfJQuery(fileSelecter).change(function(fileSelecter){var pfxfileBinString=fileSelecter.target.files[0];var ppfxfile=new FileReader;ppfxfile.onload=function(pfxfileBinary){var pfxdata=ppfxfile.result;var fasn1=forge.asn1;var futil=forge.util;try{var pfxbuffer=fasn1.fromDer(futil.createBuffer(pfxdata));var CertKeyArray=storage.getCertKeyfromPKCS12(pfxbuffer,gpfxpassword);storage.saveCertKey(CertKeyArray[0].cert,CertKeyArray[0].key)}catch(ex){if(ex.message.indexOf("Invalid password")>
0)alert("wrong password");else alert("cert_import_failed")}};if(ppfxfile.readAsBinaryString)ppfxfile.readAsBinaryString(pfxfileBinString);else ppfxfile.readAsArrayBuffer(pfxfileBinString)}).click()};storage.getCertFingerPrint=function(cert){var getMessageDigest=mdsha1.create();var derCert=asn1.toDer(pki.certificateToAsn1(cert)).getBytes();getMessageDigest.start();getMessageDigest.update(derCert);var DigestCertificate=getMessageDigest.digest();return DigestCertificate.toHex()};storage.getCertListInfo=
function(cert){var CertInfo;var validityDateInfo=cert.validity.notAfter;var subject=cert.subject;var issuer=cert.issuer;var certFingerprint=this.getCertFingerPrint(cert);CertInfo={subject:this.getAttributeValue(subject.attributes,"CN"),id:certFingerprint};return CertInfo};storage.getAttributeValue=function(cert,key){for(var r=0;r<cert.length;r++){var i=cert[r];if(i.shortName===key)return getAttributeName(i.value,i.valueTagClass)}};function getAttributeName(value,tagClass){if(tagClass==12||tagClass==
19)return util.decodeUtf8(value);else throw new Error("tagClass ["+tagClass+"] is not supported");}storage.getCertKeyfromPKCS12=function(pkcs12der,password){var arrayCertKey=[];if(!pkcs12der||!password)throw new Error("invalid arguments for pkcs12.getKeyPair");var p12asn1data=pkcs12der.tagClass!==undefined?pkcs12der:asn1.fromDer(pkcs12der);var p12objectdata=pkcs12.pkcs12FromAsn1(p12asn1data,password);var tmpBagType=pki.oids.certBag;var CertBags=p12objectdata.getBags({bagType:tmpBagType})[tmpBagType];
var KeyBags=[];tmpBagType=pki.oids.keyBag;KeyBags=KeyBags.concat(p12objectdata.getBags({bagType:tmpBagType})[tmpBagType]);tmpBagType=pki.oids.pkcs8ShroudedKeyBag;KeyBags=KeyBags.concat(p12objectdata.getBags({bagType:tmpBagType})[tmpBagType]);for(var certidx=0;certidx<CertBags.length;certidx++){var CertObj=CertBags[certidx];for(var keyidx=0;keyidx<KeyBags.length;keyidx++){var KeyObj=KeyBags[keyidx];if(CertObj.attributes.localKeyId[0]==KeyObj.attributes.localKeyId[0])arrayCertKey.push({signKey:KeyObj.key,
signCert:CertObj.cert})}}return arrayCertKey};var certificateList=new Array;storage.saveMemCertKey=function(signCert,signKey,kmCert,kmKey){var certificate={signCert:null,signKey:null,kmCert:null,kmKey:null};if(certificateList.length>0)certificateList.splice(0,certificateList.length);certificate.signCert=signCert;certificate.signKey=signKey;certificate.kmCert=kmCert;certificate.kmKey=kmKey;certificateList.push(certificate)};storage.getMemCertKeyList=function(){return certificateList};storage.clearMemCertKeyList=
function(){delete certificateList;certificateList=null;certificateList=new Array};var xfsCertList=new Array;storage.saveXfsCertKey=function(signCert,signKey,kmCert,kmKey){var certificate={signCert:null,signKey:null,kmCert:null,kmKey:null};certificate.signCert=signCert;certificate.signKey=signKey;certificate.kmCert=kmCert;certificate.kmKey=kmKey;xfsCertList.push(certificate)};storage.deleteXfsCertKey=function(index){if(xfsCertList.length>index){xfsCertList.splice(index,1);return true}else return false};
storage.getXfsCertKeyList=function(){return xfsCertList};storage.clearXfsCertKeyList=function(){delete xfsCertList;xfsCertList=null;xfsCertList=new Array};var localStorageType=["local"];var localStorageId="AnySignLocalStorage";storage.setLocalStorage=function(key,data){util.setItem(null,localStorageId,key,data,localStorageType)};storage.getLocalStorage=function(key){return util.getItem(null,localStorageId,key,localStorageType)};var sessionStorageType=["session"];var sessionStorageId="AnySignSessionStorage";
storage.setSessionStorage=function(key,data,option){try{if(option==1)util.setItem(null,sessionStorageId,key,_encryptData(JSON.stringify(data)),sessionStorageType);else util.setItem(null,sessionStorageId,key,data,sessionStorageType)}catch(e){console.log("storage.setSessionStorage failed. ["+e+"]");return null}};storage.getSessionStorage=function(key,option){try{if(option==1){var enc=util.getItem(null,sessionStorageId,key,sessionStorageType);if(!enc)return null;var dec=_decryptData(enc);if(!dec)return null;
return JSON.parse(dec.getBytes())}else return util.getItem(null,sessionStorageId,key,sessionStorageType)}catch(e){console.log("storage.getSessionStorage failed. ["+e+"]");return null}};storage.deleteSessionStorage=function(key){util.removeItem(null,sessionStorageId,key,sessionStorageType)};var XW_SECUREINPUT_NATIVEINPUT=0;var XW_SECUREINPUT_XECUREKEYPADHTML5=13;function _decryptKeyword(aSecureInput,aKey){if(!aKey)return null;if(!aSecureInput)return aKey;var aType=-1;var aValue="";if(typeof aKey===
"string"){var aIndex=aKey.indexOf("$");if(aIndex==-1)return null;aType=parseInt(aKey.substring(0,aIndex));if(aKey.length>aIndex+1)aValue=aKey.substring(aIndex+1)}else if(typeof aKey==="object"){if(typeof aKey.type!=="number")return null;aType=aKey.type;if(aType==XW_SECUREINPUT_XECUREKEYPADHTML5){if(!aKey.keypad||aKey.keypad==null||aKey.keypad=="undefined")return null}else return null}else return null;var sInput=aSecureInput.split("$");var sType=0;var sData="";var find=false;for(var i=0;i<sInput.length;i++){var aIndex=
sInput[i].indexOf("|");if(aIndex==-1)sType=parseInt(sInput[i]);else{sType=parseInt(sInput[i].substring(0,aIndex));if(sInput[i].length>aIndex+1)sData=sInput[i].substring(aIndex+1)}if(sType==aType){find=true;break}}if(!find)return null;if(aType==XW_SECUREINPUT_NATIVEINPUT)return aValue;else if(aType==XW_SECUREINPUT_XECUREKEYPADHTML5)return aKey.keypad.get_input();else return null}storage.setCachedCert=function(aMediaID,aIssuerRDN,aCertSerial,aCert,aKeyword,aSecureInput){var cachedData={};cachedData.mediaID=
aMediaID;cachedData.issuerRDN=aIssuerRDN;cachedData.serialNumber=aCertSerial;cachedData.cert=aCert;cachedData.keyword=_decryptKeyword(aSecureInput,aKeyword);storage.setSessionStorage("cachedData",cachedData,1)};storage.getCachedCert=function(){var cachedCert={};var cachedData=storage.getSessionStorage("cachedData",1);if(cachedData){cachedCert.mediaID=cachedData.mediaID;cachedCert.issuerRDN=cachedData.issuerRDN;cachedCert.serialNumber=cachedData.serialNumber;cachedCert.cert=cachedData.cert;cachedCert.keyword=
cachedData.keyword;return cachedCert}else return null};var storageSecureID="";var storageFixedIV="anysignstorageiv";storage.setSecureID=function(input){storageSecureID=input};_encryptData=function(data){try{function _digest(input){return forge.md.sha256.create().update(input).digest().getBytes()}var tmp1=_digest(storageCertId+storageSecureID);var tmp2=_digest(_digest(tmp1.substr(0,16))+_digest(tmp1.substr(16,16)));var tmp3=_digest(window.location.protocol+"//"+window.location.host+tmp2);var cipher=
forge.seed.createEncryptionCipher(tmp3.substr(0,16),"CBC");cipher.start(storageFixedIV);cipher.update(forge.util.createBuffer(data));cipher.finish();return cipher.output}catch(e){console.log("encryption failed. ["+e+"]");return null}};_decryptData=function(data){try{function _digest(input){return forge.md.sha256.create().update(input).digest().getBytes()}var tmp1=_digest(storageCertId+storageSecureID);var tmp2=_digest(_digest(tmp1.substr(0,16))+_digest(tmp1.substr(16,16)));var tmp3=_digest(window.location.protocol+
"//"+window.location.host+tmp2);var cipher=forge.seed.createDecryptionCipher(tmp3.substr(0,16),"CBC");cipher.start(storageFixedIV);cipher.update(forge.util.createBuffer(data));cipher.finish();return cipher.output}catch(e){console.log("decryption failed. ["+e+"]");return null}};_encryptCertKey=function(signCert,signKey,kmCert,kmKey){var encset={type:null,data:null};var certset={signCert:null,signKey:null,kmCert:null,kmKey:null};try{certset.signCert=storage.dataToChunk(pki.certificateToAsn1(signCert));
certset.signKey=storage.dataToChunk(signKey);if(kmCert&&kmKey){certset.kmCert=storage.dataToChunk(pki.certificateToAsn1(kmCert));certset.kmKey=storage.dataToChunk(kmKey)}var enc=_encryptData(JSON.stringify(certset));if(!enc){console.log("CertKey encryption failed.");return null}encset.type="enc1";encset.data=enc;return encset}catch(e){console.log("CertKey encryption failed. ["+e+"]");return null}};_decryptCertKey=function(encData){var rval={signCert:null,signKey:null,kmCert:null,kmKey:null};try{if(encData.type!=
"enc1"){console.log("CertKey decryption failed. (1)");return null}var dec=_decryptData(encData.data);if(!dec){console.log("CertKey decryption failed. (2)");return null}var certset=JSON.parse(dec.getBytes());if(!certset||!certset.signCert||!certset.signKey){console.log("CertKey decryption failed. (3)");return null}rval.signCert=pki.certificateFromAsn1(storage.chunkToData(certset.signCert),true);rval.signKey=storage.chunkToData(certset.signKey);if(certset.kmCert&&certset.kmKey){rval.kmCert=pki.certificateFromAsn1(storage.chunkToData(certset.kmCert),
true);rval.kmKey=storage.chunkToData(certset.kmKey)}return rval}catch(e){console.log("CertKey decryption failed. ["+e+"]");return null}}})();(function(){"cmp";"";if(forge.kisa==undefined)forge.kisa={};var asn1=forge.asn1;var pki=forge.pki;var oids=forge.oids;var util=forge.util;var kisa=forge.kisa;var crmf={};var generator={};crmf.AttributeTypeAndValue={};crmf.AttributeTypeAndValue.toAsn1=function(obj){var asn;var value;asn=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[]);asn.value.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(obj.type).getBytes()));switch(obj.type){case kisa.EncryptedVID.oid:value=
kisa.EncryptedVID.toAsn1(obj.value);break;case kisa.OldCertReqMsg.oid:value=kisa.OldCertReqMsg.toAsn1(obj.value);break;case kisa.PKIArchiveOptions.oid:value=kisa.PKIArchiveOptions.toAsn1(obj.value);break;default:throw"not supported AttributeTypeAndValue oid:"+obj.type;}asn.value.push(value);return asn};crmf.CertResponse={};crmf.CertResponse.toObject=function(asn){var obj={};obj.certReqId=asn1.derToInteger(asn.value[0].value);obj.status=cmp.PKIStatusInfo.toObject(asn.value[1]);if(asn.value.length>
2)obj.certifiedKeyPair=cmp.CertifiedKeyPair.toObject(asn.value[2]);if(asn.value.length>3)obj.rspInfo=asn.value[3].value;return obj};crmf.CertRequest={};crmf.CertRequest.toAsn1=function(obj){var asn;asn=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[]);asn.value.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,asn1.integerToDer(obj.certReqId).getBytes()));asn.value.push(crmf.CertTemplate.toAsn1(obj.certTemplate));if("controls"in obj){var controlsAsn;var value;controlsAsn=asn1.create(asn1.Class.UNIVERSAL,
asn1.Type.SEQUENCE,true,[]);obj.controls.forEach(function(data){value=crmf.AttributeTypeAndValue.toAsn1(data);controlsAsn.value.push(value)});asn.value.push(controlsAsn)}return asn};crmf.CertTemplate={};crmf.CertTemplate.toAsn1=function(obj){var asn;asn=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[]);if(obj.version!=undefined)asn.value.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,asn1.integerToDer(obj.version).getBytes())]));
if(obj.serialNumber!=undefined)asn.value.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,1,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,asn1.integerToDer(obj.serialNumber).getBytes())]));if(obj.signingAlg!=undefined)asn.value.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,2,true,[pki.AlgorithmIdentifier.toAsn1(obj.signingAlg)]));if(obj.issuer!=undefined)asn.value.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,3,true,[pki.distinguishedNameToAsn1(obj.issuer)]));if(obj.validity!=undefined)asn.value.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,
4,true,[pki.Validity.toAsn1(obj.validity)]));if(obj.subject!=undefined)asn.value.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,5,true,[pki.distinguishedNameToAsn1(obj.subject)]));if(obj.publicKey!=undefined)asn.value.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,6,true,[obj.publicKey.value[0],obj.publicKey.value[1]]));if(obj.issuerUID!=undefined)asn.value.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,7,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.BITSTRING,false,String.fromCharCode(0)+obj.issuerUID)]));
if(obj.subjectUID!=undefined)asn.value.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,8,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.BITSTRING,false,String.fromCharCode(0)+obj.subjectUID)]));if(obj.extentions!=undefined){throw"not implemented";asn.value.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,9,true,[]))}return asn};crmf.EncryptedValue={};crmf.EncryptedValue.toAsn1=function(obj){var asn;var value;asn=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[]);if("symmAlg"in obj){value=kisa.SymmAlgorithms.toAsn1(obj.symmAlg);
asn.value.push(value)}if("encSymmKey"in obj){value=asn1.create(asn1.Class.CONTEXT_SPECIFIC,2,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.BITSTRING,false,String.fromCharCode(0)+obj.encSymmKey)]);asn.value.push(value)}if("keyAlg"in obj){value=kisa.EncryptedAlgorithmIdentifier.toAsn1(obj.keyAlg);asn.value.push(value)}if("encValue"in obj){value=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.BITSTRING,false,String.fromCharCode(0)+obj.encValue);asn.value.push(value)}return asn};crmf.EncryptedValue.toObject=
function(asn){var obj={};var value;asn.value.forEach(function(data){if(data.tagClass==asn1.Class.CONTEXT_SPECIFIC)switch(data.type){case 1:obj.symmAlgAndIV=cmp.InfoTypeAndValue.toObject(data);break;case 2:obj.encSymmKey=data.value.substring(1,data.value.length);break;case 3:obj.keyAlg=cmp.InfoTypeAndValue.toObject(data);break;default:throw"unknown EncryptedValue contextID"+data.type;}else obj.encValue=data.value.substring(1,data.value.length)});return obj};crmf.PBMParameter={};crmf.PBMParameter.toAsn1=
function(obj){return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTET_STRING,obj.salt),pki.AlgorithmIdentifier.toAsn1(obj.owf)])};crmf.POPOSigningKeyInput={};crmf.POPOSigningKeyInput.toAsn1=function(obj){var asn;var authInfo;asn=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[]);if(!("authInfo"in obj))throw"authInfo does not exist";if("sender"in obj.authInfo)authInfo=asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[pki.GeneralName.toAsn1(obj.authInfo.sender)]);
else if("publicKeyMAC"in obj.authInfo)authInfo=crmf.PKMACValue.toAsn1(obj.authInfo.publicKeyMAC);else throw"no choice for authInfo";asn.value.push(authInfo);asn.value.push(obj.publicKey);return asn};crmf.POPOSigningKey={};crmf.POPOSigningKey.toAsn1=function(obj){var asn;asn=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[]);if("poposkInput"in obj)asn.value.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,crmf.POPOSigningKeyInput.toAsn1(obj.poposkInput).value));asn.value.push(pki.AlgorithmIdentifier.toAsn1(obj.algorithmIdentifier));
asn.value.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.BITSTRING,false,String.fromCharCode(0)+obj.signature));return asn};crmf.ProofOfPossession={};crmf.ProofOfPossession.toAsn1=function(obj){var contextID=0;var value;if("raVerified"in obj){contextID=0;value=[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.NULL,false,"")]}else if("signature"in obj){contextID=1;value=crmf.POPOSigningKey.toAsn1(obj.signature).value}else if("keyEncipherment"in obj){contextID=2;value=obj.keyEncipherment}else if("keyAgreement"in
obj){contextID=3;value=obj.keyAgreement}else throw"proofOfPossession does not have any choice.";return asn1.create(asn1.Class.CONTEXT_SPECIFIC,contextID,true,value)};crmf.CertReqMsg={};crmf.CertReqMsg.toAsn1=function(obj){var asn;asn=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[crmf.CertRequest.toAsn1(obj.certReq)]);if("popo"in obj)asn.value.push(crmf.ProofOfPossession.toAsn1(obj.popo));if("regInfo"in obj&&obj.regInfo!=null)asn.value.push(crmf.RegInfo.toAsn1(obj.regInfo));return asn};
crmf.SubsequentMessage={};crmf.SubsequentMessage.encrCert=0;crmf.SubsequentMessage.challengeResp=1;crmf.PKMACValue={};crmf.PKMACValue.toAsn1=function(obj){return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[pki.AlgorithmIdentifier.toAsn1(obj.algId),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.BITSTRING,false,String.fromCharCode(0)+obj.value)])};crmf.POPOPrivKey={};crmf.POPOPrivKey.toAsn1=function(obj){var value;var contextID;if("thisMessage"in obj)contextID=0;else if("subsequentMessage"in
obj)contextID=1;else if("dhMAC"in obj)contextID=2;else if("agreeMAC"in obj){contextID=3;value=crmf.PKMACValue.toAsn1(obj.agreeMAC)}else if("encryptedKey"in obj){contextID=4;throw'not support entry "encryptedKey" in POPOPrivKey';}else throw"cannot found any supported entry in POPOPrivKey";return asn1.create(asn1.Class.CONTEXT_SPECIFIC,contextID,true,[value])};crmf.RegInfo={};crmf.RegInfo.toAsn1=function(obj){var asn;asn=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[]);obj.forEach(function(data){asn.value.push(crmf.AttributeTypeAndValue.toAsn1(data))});
return asn};crmf.CertRequestValidator={name:"CertRequest",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.SEQUENCE,value:[{name:"CertRequest.certReqId",tagClass:asn1.Class.UNIVERSAL,type:asn1.Type.INTEGER,constructed:false}]};var generalName={directoryName:{attributes:[{type:oids["countryName"],value:"KR"},{type:oids["commonName"],value:"haha"}]}};oid={};oid.id_it="1.3.6.1.5.5.7.4";oid.id_it_caProtEncCert=oid.id_it+".1";cmp={};cmp.oids={};cmp.oids.it_ca_ProtEncCert="1.3.6.1.5.5.7.4.1";cmp.oids.it_ca_SignKeyPairTypes=
"1.3.6.1.5.5.7.4.2";cmp.oids.algorithemKCDSA1="1.2.410.200004.1.21";cmp.oids.passwordBasedMac="1.2.840.113533.7.66.13";cmp.CertifiedKeyPair={};cmp.CertifiedKeyPair.toObject=function(asn){var obj={};obj.certOrEncCert=cmp.CertOrEncCert.toObject(asn.value[0]);if(asn.value.length>1)throw"this message has not supported entries in CertifiedKeyPair.";return obj};cmp.CertOrEncCert={};cmp.CertOrEncCert.toObject=function(asn){var obj={};if(asn.type==0)obj.certificate=pki.certificateFromAsn1(asn.value[0],true);
else obj.encryptedCert=crmf.EncryptedValue.toObject(asn.value[0]);return obj};cmp.CertRepMessage={};cmp.CertRepMessage.toObject=function(asn){var obj=[];var caPubs;var response;caPubs=asn.value[0];response=asn.value[0];if(caPubs.type==1){obj.caPubs=[];caPubs=caPubs.value[0];caPubs.value.forEach(function(certAsn){var cert;obj.caPubs.push(pki.certificateFromAsn1(certAsn),true)});response=asn.value[1]}obj.response=[];response.value.forEach(function(data){obj.response.push(crmf.CertResponse.toObject(data))});
return obj};cmp.oid=oid;cmp.ErrorMsgContent={};cmp.ErrorMsgContent.toObject=function(asn){var obj={};obj.pKIStatusInfo=cmp.PKIStatusInfo.toObject(asn.value[0]);if(asn.value.length>1)obj.errorCode=asn.value[1].value.charCodeAt(0);if(asn.value.length>2)obj.errorDetails=cmp.PKIFreeText.toObject(asn.value[2]);return obj};cmp.GenRepContent={};cmp.GenRepContent.toObject=function(asn){var obj=[];asn.value.forEach(function(data){obj.push(cmp.InfoTypeAndValue.toObject(data))});return obj};cmp.InfoTypeAndValue=
{};cmp.InfoTypeAndValue.toAsn1=function(obj){var asn;var value;asn=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[]);value=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(obj.infoType).getBytes());asn.value.push(value);switch(obj.infoType){case oid.id_it_caProtEncCert:value=undefined;break;default:throw"not supported oid for InfoTypeAndValue";}asn.value.push(value);return asn};cmp.InfoTypeAndValue.toObject=function(asn){var obj={};obj.infoType=asn1.derToOid(asn.value[0].value);
if(asn.value.length>1)obj.infoValue=asn1.toDer(asn.value[1]);return obj};cmp.PKIBody={};cmp.PKIBody.toAsn1=function(obj){var asn;var value;var contextID;if(obj.hasOwnProperty("ir")){value=obj.ir;contextID=0;asn=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[]);value.forEach(function(data){asn.value.push(crmf.CertReqMsg.toAsn1(data))})}else if(obj.hasOwnProperty("kur")){value=obj.kur;contextID=7;asn=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[]);value.forEach(function(data){asn.value.push(crmf.CertReqMsg.toAsn1(data))})}else if(obj.hasOwnProperty("conf")){value=
obj.conf;contextID=19;asn=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.NULL,false,"")}else if(obj.hasOwnProperty("genm")){value=obj.genm;contextID=21;asn=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[]);if(value!=undefined)value.forEach(function(data){asn.value.push(cmp.InfoTypeAndValue.toAsn1(data))})}else throw"not supported PKIBody type";return asn1.create(asn1.Class.CONTEXT_SPECIFIC,contextID,true,[asn])};cmp.PKIBody.toObject=function(asn){var obj={};switch(asn.type){case 1:obj.ip=forge.cmp.CertRepMessage.toObject(asn.value[0]);
break;case 8:obj.kup=forge.cmp.CertRepMessage.toObject(asn.value[0]);break;case 19:obj.conf={};break;case 22:obj.genp=forge.cmp.GenRepContent.toObject(asn.value[0]);break;case 23:obj.error=forge.cmp.ErrorMsgContent.toObject(asn.value[0]);break;default:throw"not supported CMP message type:"+asn.type;}return obj};cmp.PKIFailureInfo={};cmp.PKIFailureInfo.toObject=function(asn){return 0};cmp.PKIFreeText={};cmp.PKIFreeText.toAsn1=function(obj){var asn;var value;asn=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,
true,[]);obj.forEach(function(data){value=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.UTF8,false,util.encodeUtf8(data));asn.value.push(value)});return asn};cmp.PKIFreeText.toObject=function(asn){var obj=[];var value;asn.value.forEach(function(data){value=data.value;obj.push(value)});return obj};cmp.PKISenderNonce={};cmp.PKISenderNonce.toObject=function(asn){var value;value=forge.util.createBuffer();value.putBytes(asn.value);return value};cmp.PKIRecipNonce={};cmp.PKIRecipNonce.toObject=function(asn){var value;
value=forge.util.createBuffer();value.putBytes(asn.value);return value};cmp.PKIHeader={};cmp.PKIHeader.cmp1999=1;cmp.PKIHeader.cmp2000=2;cmp.PKIHeader.toAsn1=function(obj){var asn;var value;asn=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,asn1.integerToDer(obj.pvno).getBytes()),pki.GeneralName.toAsn1(obj.sender),pki.GeneralName.toAsn1(obj.recipient)]);if("messageTime"in obj){value=asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,
[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.GENERALIZEDTIME,false,asn1.dateToGeneralizedTime(obj.messageTime))]);asn.value.push(value)}if("protectionAlg"in obj){value=asn1.create(asn1.Class.CONTEXT_SPECIFIC,1,true,[pki.AlgorithmIdentifier.toAsn1(obj.protectionAlg)]);asn.value.push(value)}if("senderKID"in obj){value=asn1.create(asn1.Class.CONTEXT_SPECIFIC,2,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,obj.senderKID)]);asn.value.push(value)}if("recipKID"in obj){value=asn1.create(asn1.Class.CONTEXT_SPECIFIC,
3,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,obj.recipKID)]);asn.value.push(value)}if("transactionID"in obj){value=asn1.create(asn1.Class.CONTEXT_SPECIFIC,4,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,obj.transactionID)]);asn.value.push(value)}if("senderNonce"in obj){value=asn1.create(asn1.Class.CONTEXT_SPECIFIC,5,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,obj.senderNonce)]);asn.value.push(value)}if("recipNonce"in obj){value=asn1.create(asn1.Class.CONTEXT_SPECIFIC,
6,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,obj.recipNonce)]);asn.value.push(value)}if("freeText"in obj){value=asn1.create(asn1.Class.CONTEXT_SPECIFIC,7,true,[cmp.PKIFreeText.toAsn1(obj.freeText)]);asn.value.push(value)}if("generalInfo"in obj){value=asn1.create(asn1.Class.CONTEXT_SPECIFIC,8,true,[cmp.PKIFreeText.toAsn1(obj.freeText)]);asn.value.push(value)}return asn};cmp.PKIHeader.toObject=function(asn){var obj={};var iter;var value;obj.pvno=asn.value[0].value.charCodeAt(0);
obj.sender=asn.value[1].value;obj.recipient=asn.value[2].value;for(iter=3;iter<asn.value.length;++iter){value=asn.value[iter];switch(value.type){case 7:obj.freeText=cmp.PKIFreeText.toObject(value.value[0]);break;case 5:obj.senderNonce=value.value[0].value;break;case 6:obj.recipNonce=value.value[0].value;break}}return obj};cmp.PKIMessage={};cmp.PKIMessage.toAsn1=function(obj){var asn;asn=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[cmp.PKIHeader.toAsn1(obj.header),cmp.PKIBody.toAsn1(obj.body)]);
if("protection"in obj){var value;value=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.BITSTRING,false,String.fromCharCode(0)+obj.protection);value=asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[value]);asn.value.push(value)}return asn};cmp.PKIMessage.toObject=function(asn){var obj={};obj.header=cmp.PKIHeader.toObject(asn.value[0]);obj.body=cmp.PKIBody.toObject(asn.value[1]);return obj};cmp.PKIStatus={};cmp.PKIStatus.accepted=0;cmp.PKIStatus.grantedWithMods=1;cmp.PKIStatus.rejection=2;cmp.PKIStatus.waiting=
3;cmp.PKIStatus.revocationWarning=4;cmp.PKIStatus.revocationNotification=5;cmp.PKIStatus.keyUpdateWarning=6;cmp.PKIStatusInfo={};cmp.PKIStatusInfo.toObject=function(asn){var obj={};var value="";obj.status=asn.value[0].value.charCodeAt(0);if(asn.value.length>1)obj.statusString=cmp.PKIFreeText.toObject(asn.value[1]);if(asn.value.length>2)obj.failInfo=cmp.PKIFailureInfo.toObject(asn.value[2]);switch(obj.status){case cmp.PKIStatus.accepted:value="granted";case cmp.PKIStatus.grantedWithMods:value="grantedWithMods";
case cmp.PKIStatus.rejection:value="rejection";case cmp.PKIStatus.waiting:value="waiting";case cmp.PKIStatus.revocationWarning:value="revocationWarning";case cmp.PKIStatus.revocationNotification:value="revocationNotification";case cmp.PKIStatus.keyUpdateWarning:value="keyUpdateWarning";default:}obj.asnReason=value;return obj};cmp.ProtectedPart={};cmp.ProtectedPart.toAsn1=function(obj){return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[cmp.PKIHeader.toAsn1(obj.header),cmp.PKIBody.toAsn1(obj.body)])};
forge.crmf=crmf;forge.cmp=cmp})();
(function(){var asn1;var pki;var kisa;var oids;asn1=forge.asn1;pki=forge.pki;oids=forge.oids;var PKI=sofo.pki;if(forge.kisa==undefined)forge.kisa={};kisa=forge.kisa;if(forge.yessign==undefined)forge.yessign={};yessign=forge.yessign;asn1.dateToGeneralizedTime=function(date){var rval="";var format=[];format.push(""+date.getUTCFullYear());format.push(""+(date.getUTCMonth()+1));format.push(""+date.getUTCDate());format.push(""+date.getUTCHours());format.push(""+date.getUTCMinutes());format.push(""+date.getUTCSeconds());
for(var i=0;i<format.length;++i){if(format[i].length<2)rval+="0";rval+=format[i]}rval+="Z";return rval};pki.GeneralName={};pki.GeneralName.toAsn1=function(obj){var asn;var value;if("rfc822Name"in obj){contextID=1;value=obj.rfc822Name;asn=asn1.create(asn1.Class.CONTEXT_SPECIFIC,contextID,false,value)}else if("directoryName"in obj){contextID=4;value=PKI.distinguishedNameToAsn1(obj.directoryName);asn=asn1.create(asn1.Class.CONTEXT_SPECIFIC,contextID,true,[value])}else throw"not supported generalname";
return asn};pki.AlgorithmIdentifier={};pki.AlgorithmIdentifier.toAsn1=function(obj){var asn;var value;if(obj.hasOwnProperty("algorithm")==false)throw"AlgorithmIdentifier.algorithm does not defined as OID";asn=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(obj.algorithm).getBytes())]);if("parameters"in obj){value=obj.parameters;if(value==null)value=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.NULL,false,"");asn.value.push(value)}return asn};
pki.AlgorithmIdentifier.toObject=function(asn){var obj={};var oid;oid=asn1.derToOid(asn.value[0].value);obj.algorithm=oid;return obj};pki.Validity={};pki.Validity.toAsn1=function(obj){return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.UTCTIME,false,asn1.dateToUtcTime(obj.notBefore)),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.UTCTIME,false,asn1.dateToUtcTime(obj.notAfter))])};SymmAlgorithms={};SymmAlgorithms.oid="1.2.840.113549.3.7";SymmAlgorithms.toAsn1=
function(obj){var asn;var value;if(obj.hasOwnProperty("algorithm")==false)throw"SymmAlgorithms.algorithm does not defined as OID";asn=asn1.create(asn1.Class.CONTEXT_SPECIFIC,1,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(obj.algorithm).getBytes())]);if("parameters"in obj){value=obj.parameters;if(value==null)value=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.NULL,false,"");else value=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,obj.parameters);asn.value.push(value)}return asn};
EncryptedAlgorithmIdentifier={};EncryptedAlgorithmIdentifier.toAsn1=function(obj){var asn;var value;if(obj.hasOwnProperty("algorithm")==false)throw"SymmAlgorithms.algorithm does not defined as OID";asn=asn1.create(asn1.Class.CONTEXT_SPECIFIC,3,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OID,false,asn1.oidToDer(obj.algorithm).getBytes())]);if("parameters"in obj){value=obj.parameters;if(value==null)value=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.NULL,false,"");else value=asn1.create(asn1.Class.UNIVERSAL,
asn1.Type.OCTETSTRING,false,obj.parameters);asn.value.push(value)}return asn};EncryptedVID={};EncryptedVID.oid="1.2.410.200004.10.1.1.2";EncryptedVID.toAsn1=function(obj){var asn;var value;asn=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[]);value=asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,asn1.integerToDer(obj.version).getBytes())]);asn.value.push(value);if("vidHashAlg"in obj){value=asn1.create(asn1.Class.CONTEXT_SPECIFIC,
1,true,[pki.AlgorithmIdentifier.toAsn1(obj.vidHashAlg)]);asn.value.push(value)}value=asn1.create(asn1.Class.CONTEXT_SPECIFIC,2,true,[pki.AlgorithmIdentifier.toAsn1(obj.vidEncAlg)]);asn.value.push(value);value=asn1.create(asn1.Class.CONTEXT_SPECIFIC,3,true,[IssuerAndSerialNumber.toAsn1(obj.certID)]);asn.value.push(value);value=asn1.create(asn1.Class.CONTEXT_SPECIFIC,4,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,false,obj.encryptedVID)]);asn.value.push(value);return asn};OldCertReqMsg=
{};OldCertReqMsg.oid="1.3.6.1.5.5.7.5.1.5";OldCertReqMsg.toAsn1=function(obj){var asn;var value;asn=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[]);value=asn1.create(asn1.Class.CONTEXT_SPECIFIC,4,true,[pki.distinguishedNameToAsn1(obj.certID.issuer)]);value.value.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,asn1.integerToDer(obj.certID.serialNumber).getBytes()));asn.value.push(value);return asn};IssuerAndSerialNumber={};IssuerAndSerialNumber.toAsn1=function(obj){var asn;
asn=asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[]);asn.value.push(pki.distinguishedNameToAsn1(obj.issuer));asn.value.push(asn1.create(asn1.Class.UNIVERSAL,asn1.Type.INTEGER,false,asn1.integerToDer(obj.serialNumber).getBytes()));return asn};HashContent={};HashContent.toAsn1=function(obj){return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.PRINTABLESTRING,false,obj.idn),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.BITSTRING,false,String.fromCharCode(0)+
obj.randomNum)])};EncryptContent={};EncryptContent.toAsn1=function(obj){return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[VID.toAsn1(obj.vid),asn1.create(asn1.Class.UNIVERSAL,asn1.Type.BITSTRING,false,String.fromCharCode(0)+obj.randomNum)])};VID={};VID.toAsn1=function(obj){return asn1.create(asn1.Class.UNIVERSAL,asn1.Type.SEQUENCE,true,[pki.AlgorithmIdentifier.toAsn1(obj.hashAlg),asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[asn1.create(asn1.Class.UNIVERSAL,asn1.Type.OCTETSTRING,
false,obj.virtualID)])])};PKIArchiveOptions={};PKIArchiveOptions.oid="1.3.6.1.5.5.7.5.1.4";PKIArchiveOptions.toAsn1=function(obj){var asn;asn=asn1.create(asn1.Class.CONTEXT_SPECIFIC,0,true,[forge.crmf.EncryptedValue.toAsn1(obj)]);return asn};kisa.EncryptedVID=EncryptedVID;kisa.EncryptContent=EncryptContent;yessign.VIDCertificate={};yessign.VIDCertificate.oid="1.2.410.200005.1.10.1";kisa.OldCertReqMsg=OldCertReqMsg;kisa.PKIArchiveOptions=PKIArchiveOptions;kisa.SymmAlgorithms=SymmAlgorithms;kisa.EncryptedAlgorithmIdentifier=
EncryptedAlgorithmIdentifier;oids["1.2.410.200004.1.15"]="seedCBCWithSHA1";oids["seedCBCWithSHA1"]="1.2.410.200004.1.15";oids["1.2.410.200004.1.4"]="seedCBC";oids["seedCBC"]="1.2.410.200004.1.4";oids["vid"]="1.2.410.200004.10.1.1.1";oids["1.2.410.200004.10.1.1.1"]="vid";oids["randomNum"]="1.2.410.200004.10.1.1.3";oids["1.2.410.200004.10.1.1.3"]="randomNum"})();
(function(){var cmp=sofo.cmp;var PKI=sofo.pki;var Crypto=sofo.crypto;var error=sofo.error;var asn1=forge.asn1;var rsa=forge.pki.rsa;cmp.catype={YESSIGN_CA:"yessign",XECURE_CA:"xecureca"};cmp.caPkeyId={PKEYID_RSA:"rsa",PKEYID_KCDSA:"kcdsa"};cmp.getCmpClient=function(type,pKeyId,url){switch(type){case cmp.catype.YESSIGN_CA:return new cmp.client.YesSign(url,pKeyId);case cmp.catype.XECURE_CA:return new cmp.client.XecureCA(url,pKeyId)}return new cmp.client.Standard(url)};cmp.getWebCMPType=function(aCAtype){switch(aCAtype){case 1:case 11:return cmp.catype.YESSIGN_CA;
case 101:case 102:return cmp.catype.XECURE_CA}return null};cmp.getWebCMPpKeyID=function(aCAtype){switch(aCAtype){case 1:case 11:case 101:return cmp.caPkeyId.PKEYID_RSA;case 102:return cmp.caPkeyId.PKEYID_KCDSA}return null};Standard=function(url){};Standard.generateProtection=function(header,body,authCode){var asn;var mac;var pp;asn=forge.cmp.ProtectedPart.toAsn1({header:header,body:body});pp=asn1.toDer(asn);mac=Standard.calculatePasswordBasedMac(pp,"aaaaabbbbb",authCode,2,forge.md.sha1.create(),Crypto.cmac.create(),
forge.des);return mac.getBytes()};Standard.generateProtectionBySign=function(header,body,signCert,signKey,keyword){var asn;var signedData;var pp;asn=forge.cmp.ProtectedPart.toAsn1({header:header,body:body});pp=asn1.toDer(asn);signedData=PKI.PrivateKeySignData(signKey,keyword,pp.getBytes(),signCert.publicKey);return signedData};Standard.calculatePasswordBasedMac=function(pp,secret,salt,iterationCount,owf,cmac,cipher){var K="";var buffer;var iter=0;buffer=forge.util.createBuffer();buffer.putBytes(secret);
buffer.putBytes(salt);K=buffer.getBytes();for(iter=0;iter<iterationCount;++iter){owf.start();owf.update(K);K=owf.digest().getBytes()}cmac.start(cipher,K);cmac.update(pp);return cmac.getMac()};YesSign=function(url,pkeyId){this.url=url;this.pKeyId=pkeyId};YesSign.prototype.setKeyGenerator=function(generator){this.keyGenerator=generator};YesSign.prototype.generateKeyPair=function(args,extractable,usage,resultCallback){var keypairset;if(this.hasOwnProperty("keyGenerator"))this.keyGenerator(args,extractable,
usage,resultCallback);else{keypairset=rsa.generateKeyPair({bits:2048,e:65537});resultCallback(keypairset)}};YesSign.prototype.issue=function(refNum,authCode,resultCallback){var self=this;var asn;var message;var data;var messageType;var dogenm=true;var doir=true;var CMPtransactionID;if(refNum==undefined)throw"reference number is not defined.";if(authCode==undefined)throw"authentication code is not defined.";if(resultCallback==undefined)throw"resultCallback is not defined.";CMPtransactionID=forge.random.getBytesSync(16);
function doConf(resultCallback){try{self.conf(refNum,authCode,CMPtransactionID,function(asn){if(asn===error){resultCallback(asn);return}data=asn1.toDer(asn).getBytes();HTTPTransfer.send(self.url,HTTPTransfer.pkiReq,data,function(version,flags,messageType,result){if(version===error){resultCallback(version);return}if(result!=undefined)try{}catch(ex){error.setError(error.ERROR_REQUESTCERT,ex);resultCallback(error);return}resultCallback(self.certAndKey)})})}catch(ex){error.setError(error.ERROR_REQUESTCERT,
ex);resultCallback(error)}}function doIRIP(resultCallback){try{self.ir(refNum,authCode,CMPtransactionID,function(asn){if(asn===error){resultCallback(asn);return}data=asn1.toDer(asn).getBytes();HTTPTransfer.send(self.url,HTTPTransfer.pkiReq,data,function(version,flags,messageType,result){if(version===error){resultCallback(version);return}try{self.decodeMessage(result)}catch(ex){error.setError(error.ERROR_REQUESTCERT,ex);resultCallback(error);return}doConf(resultCallback)})})}catch(ex){error.setError(error.ERROR_REQUESTCERT,
ex);resultCallback(error)}}function doGENM(resultCallback){asn=self.genm(refNum,CMPtransactionID);data=asn1.toDer(asn).getBytes();HTTPTransfer.send(self.url,HTTPTransfer.pkiReq,data,function(version,flags,messageType,result){if(version===error){resultCallback(version);return}try{self.decodeMessage(result);doIRIP(resultCallback)}catch(ex){error.setError(error.ERROR_REQUESTCERT,ex);resultCallback(error)}})}doGENM(resultCallback)};YesSign.prototype.update=function(oldSignCert,oldSignKey,oldKmCert,oldKmKey,
oldCertSerialNum,oldKeyword,resultCallback){var self=this;self.oldCert=oldSignCert;self.oldKey=oldSignKey;self.oldKMCert=oldKmCert;self.oldKMKey=oldKmKey;self.certSerial=parseInt("0x"+oldCertSerialNum).toString();var asn;var message;var data;var messageType;var dogenm=true;var doir=true;var CMPtransactionID;var refNum="23456";var authCode="9319205181606408713";if(refNum==undefined)throw"reference number is not defined.";if(authCode==undefined)throw"authentication code is not defined.";if(resultCallback==
undefined)throw"resultCallback is not defined.";CMPtransactionID=forge.random.getBytesSync(16);function doConf(resultCallback){try{self.conf(refNum,authCode,CMPtransactionID,function(asn){if(asn===error){resultCallback(asn);return}data=asn1.toDer(asn).getBytes();HTTPTransfer.send(self.url,HTTPTransfer.pkiReq,data,function(version,flags,messageType,result){if(version===error){resultCallback(version);return}if(result!=undefined)try{}catch(ex){error.setError(error.ERROR_RENEWCERT,ex);resultCallback(error);
return}resultCallback(self.certAndKey)})})}catch(ex){error.setError(error.ERROR_RENEWCERT,ex);resultCallback(error)}}function doKurKup(resultCallback){try{self.kur(self.oldCert,self.oldKey,oldKeyword,CMPtransactionID,function(asn){if(asn===error){resultCallback(asn);return}data=asn1.toDer(asn).getBytes();HTTPTransfer.send(self.url,HTTPTransfer.pkiReq,data,function(version,flags,messageType,result){if(version===error){resultCallback(version);return}try{self.decodeMessage(result)}catch(ex){error.setError(error.ERROR_RENEWCERT,
ex);resultCallback(error);return}doConf(resultCallback)})})}catch(ex){error.setError(error.ERROR_RENEWCERT,ex);resultCallback(error)}}function doGENM(resultCallback){asn=self.genmkur(self.certSerial,self.oldCert,CMPtransactionID);data=asn1.toDer(asn).getBytes();HTTPTransfer.send(self.url,HTTPTransfer.pkiReq,data,function(version,flags,messageType,result){if(version===error){resultCallback(version);return}try{self.decodeMessage(result);doKurKup(resultCallback)}catch(ex){error.setError(error.ERROR_RENEWCERT,
ex);resultCallback(error)}})}doGENM(resultCallback)};YesSign.prototype.decodeMessage=function(message){var asn;var obj;asn=asn1.fromDer(message);obj=forge.cmp.PKIMessage.toObject(asn);if("error"in obj.body){var statusInfo;var msg;statusInfo=obj.body.error.pKIStatusInfo;if(statusInfo.statusString!=undefined){var iter=0;for(iter=0;iter<statusInfo.statusString.length;++iter)statusInfo.statusString[iter]=cmputil.euckrToUTF8(statusInfo.statusString[iter]);msg="recieved CMP Error Message from CA:"+statusInfo.statusString.join();
console.log(msg);throw msg;}}else if("genp"in obj.body)this.parseGenp(obj.body.genp);else if("ip"in obj.body){this.parseIp(obj.body.ip);this.parseIpHeader(obj.header)}else if("kup"in obj.body){this.parseIp(obj.body.kup);this.parseIpHeader(obj.header)}else if("conf"in obj.body);else throw"unknown cmp message";};YesSign.prototype.genm=function(refNum,CMPtransactionID){var asn;var message;message={};message.header={pvno:forge.cmp.PKIHeader.cmp1999,sender:{rfc822Name:" "},recipient:{rfc822Name:" "},senderKID:refNum,
transactionID:CMPtransactionID};message.body={};message.body.genm=[{infoType:forge.cmp.oid.id_it_caProtEncCert}];return forge.cmp.PKIMessage.toAsn1(message)};YesSign.prototype.genmkur=function(serialNum,oldCert,CMPtransactionID){var asn;var message;message={};message.header={pvno:forge.cmp.PKIHeader.cmp1999,sender:{directoryName:oldCert.subject},recipient:{rfc822Name:" "},senderKID:serialNum,transactionID:CMPtransactionID};message.body={};message.body.genm=[{infoType:forge.cmp.oid.id_it_caProtEncCert}];
return forge.cmp.PKIMessage.toAsn1(message)};YesSign.prototype.parseGenp=function(genp){var self=this;genp.forEach(function(data){if(data.infoType==forge.cmp.oids.it_ca_ProtEncCert)self.CAProtocolEncryptionCertificate=forge.pki.certificateFromAsn1(asn1.fromDer(data.infoValue));else if(data.infoType==forge.yessign.VIDCertificate.oid)self.VIDEncryptionCertificate=forge.pki.certificateFromAsn1(asn1.fromDer(data.infoValue))})};YesSign.prototype.ir=function(refNum,authCode,CMPtransactionID,resultCallback){var self=
this;var message;var crm;this.keyPair=[];message={};this.senderNonce=forge.random.getBytesSync(16);message.header={pvno:forge.cmp.PKIHeader.cmp1999,sender:{rfc822Name:" "},recipient:{rfc822Name:" "},messageTime:new Date,protectionAlg:{algorithm:forge.cmp.oids.passwordBasedMac},senderKID:refNum,senderNonce:this.senderNonce,transactionID:CMPtransactionID};message.body={};message.body.ir=[];var args={name:"RSASSA-PKCS1-v1_5",modulusLength:2048,publicExponent:new Array([1,0,1]),hash:{name:"SHA-256"}};
this.generateKeyPair(args,true,["sign"],function(keyPair){if(keyPair===error){keyPair.pushReason("generateKeyPair failed");resultCallback(keyPair);return}self.keyPair.push({publicKey:keyPair.publicKey,privateKey:keyPair.privateKey});self.generateCertReqMsg(0,keyPair.publicKey,keyPair.privateKey,null,function(crm){if(crm===error){crm.pushReason("failed to generateCertReqMsg(0)");resultCallback(crm);return}message.body.ir.push(crm);message.protection=Standard.generateProtection(message.header,message.body,
authCode);resultCallback(forge.cmp.PKIMessage.toAsn1(message))})})};YesSign.prototype.parseIp=function(ip){var self=this;var caPubs;caPubs=ip.caPubs;this.certAndKey=[];ip.response.forEach(function(response,certReqId){var certifiedKeyPair;var certOrEncCert;var encryptedCert;var cert;if(response.status.status!=0){for(iter=0;iter<response.status.statusString.length;++iter)response.status.statusString[iter]=cmputil.euckrToUTF8(response.status.statusString[iter]);throw"CMP response is error:"+response.status.statusString.join();
}certifiedKeyPair=response.certifiedKeyPair;certOrEncCert=certifiedKeyPair.certOrEncCert;if("encryptedCert"in certOrEncCert){encryptedCert=certOrEncCert.encryptedCert;var symmKey;var iv;var des;symmKey=self.keyPair[certReqId].privateKey.decrypt(encryptedCert.encSymmKey);iv="01234567";des=forge.des.startDecrypting(symmKey,iv);des.update(forge.util.createBuffer(encryptedCert.encValue));des.finish()}else if("certificate"in certOrEncCert)cert=certOrEncCert.certificate;self.certAndKey.push({certificate:cert,
privateKey:self.keyPair[certReqId].privateKey,vid:self.keyPair[certReqId].vid})})};YesSign.prototype.parseIpHeader=function(ipHeader){if("senderNonce"in ipHeader)this.senderNonce=ipHeader.senderNonce;if("recipNonce"in ipHeader)this.recipNonce=ipHeader.recipNonce};YesSign.prototype.conf=function(refNum,authCode,CMPtransactionID,resultCallback){var asn;var message;message={};message.header={pvno:forge.cmp.PKIHeader.cmp1999,sender:{rfc822Name:" "},recipient:{rfc822Name:" "},messageTime:new Date,protectionAlg:{algorithm:forge.cmp.oids.passwordBasedMac},
senderKID:refNum,senderNonce:this.recipNonce,recipNonce:this.senderNonce,transactionID:CMPtransactionID};message.body={};message.body.conf=[];message.protection=Standard.generateProtection(message.header,message.body,authCode);resultCallback(forge.cmp.PKIMessage.toAsn1(message))};YesSign.prototype.kur=function(oldCert,oldKey,oldKeyword,CMPtransactionID,resultCallback){var self=this;var message;var crm;this.keyPair=[];message={};this.senderNonce=forge.random.getBytesSync(16);message.header={pvno:forge.cmp.PKIHeader.cmp1999,
sender:{directoryName:oldCert.subject},recipient:{rfc822Name:" "},messageTime:new Date,protectionAlg:{algorithm:forge.oids["sha256WithRSAEncryption"]},senderNonce:this.senderNonce,transactionID:CMPtransactionID};message.body={};message.body.kur=[];var args={name:"RSASSA-PKCS1-v1_5",modulusLength:2048,publicExponent:new Array([1,0,1]),hash:{name:"SHA-256"}};this.generateKeyPair(args,true,["sign"],function(keyPair){if(keyPair===error){keyPair.pushReason("generateKeyPair failed");resultCallback(keyPair);
return}self.keyPair.push({publicKey:keyPair.publicKey,privateKey:keyPair.privateKey});self.generateCertReqMsg(0,keyPair.publicKey,keyPair.privateKey,self.oldCert,function(crm){if(crm===error){crm.pushReason("failed to generateCertReqMsg(0)");resultCallback(crm);return}message.body.kur.push(crm);message.protection=Standard.generateProtectionBySign(message.header,message.body,oldCert,oldKey,oldKeyword);resultCallback(forge.cmp.PKIMessage.toAsn1(message))})})};YesSign.prototype.generateCertReqMsg=function(certReqId,
publicKey,privateKey,oldCert,resultCallback){var self=this;var obj={};var cr={};var ct={};var ctl={};var oldCertId={};var publicKeyAsn;self.exportKeyInfo(publicKey,function(publicKeyBytes){if(publicKeyBytes===error){publicKeyBytes.pushReason("failed to export publicKey");resultCallback(publicKeyBytes)}publicKeyAsn=publicKeyBytes;obj.certReq=cr;cr.certReqId=certReqId;cr.certTemplate=ct;ct.publicKey=publicKeyAsn;if(oldCert!=null){cr.controls=[];oldCertId.certID={issuer:oldCert.issuer,serialNumber:asn1.derToInteger(forge.util.hexToBytes(oldCert.serialNumber))};
ctl.type=forge.kisa.OldCertReqMsg.oid;ctl.value=oldCertId;cr.controls.push(ctl)}var signatureAlgorithm=forge.oids["sha256WithRSAEncryption"];YesSign.generatePOPO(signatureAlgorithm,publicKeyAsn,privateKey,function(popo){if(popo===error){popo.pushReason("failed to generate ProofOfPosession");resultCallback(popo);return}obj.popo=popo;obj.regInfo=self.generateRegInfo(certReqId);resultCallback(obj)})})};YesSign.prototype.exportKeyInfo=function(publicKey,resultCallback){resultCallback(sofo.pki.publicKeyToAsn1(publicKey))};
YesSign.prototype.generateRegInfo=function(certReqId){var obj=[];if(certReqId!=0)return null;this.keyPair[certReqId].vid=forge.random.getBytesSync(20);obj.push(YesSign.generateVID("1234561234567",this.keyPair[certReqId].vid,this.VIDEncryptionCertificate));return obj};YesSign.calculateVID=function(ss,r,hash){var hc;var vid;hc={idn:ss,randomNum:r};vid=asn1.toDer(HashContent.toAsn1(hc)).getBytes();hash.start();hash.update(vid);vid=hash.digest().getBytes();hash.start();hash.update(vid);vid=hash.digest().getBytes();
return vid};YesSign.generateVID=function(ssn,random,cert){var obj={};var asn;var vid;var encryptedVID={};var encryptedValue;var encryptContent={};vid={hashAlg:{algorithm:forge.oids["sha256"]}};vid.virtualID=this.calculateVID(ssn,random,forge.md.sha256.create());asn=asn1.toDer(forge.kisa.EncryptContent.toAsn1({vid:vid,randomNum:random}));encryptedValue=cert.publicKey.encrypt(asn.getBytes());encryptedVID.version=0;encryptedVID.vidHashAlg={algorithm:vid.hashAlg.algorithm};encryptedVID.vidEncAlg={algorithm:forge.oids["rsaEncryption"],
parameters:null};encryptedVID.certID={issuer:cert.issuer,serialNumber:asn1.derToInteger(forge.util.hexToBytes(cert.serialNumber))};encryptedVID.encryptedVID=encryptedValue;obj.type=forge.kisa.EncryptedVID.oid;obj.value=encryptedVID;return obj};YesSign.generatePOPO=function(signatureAlgorithm,publicKey,privateKey,resultCallback){var obj={};var poposkInput={};var poposk={};var asn;var der;var signature;poposkInput={authInfo:{sender:{rfc822Name:" "}},publicKey:publicKey};asn=forge.crmf.POPOSigningKeyInput.toAsn1(poposkInput);
der=asn1.toDer(asn).getBytes();var md=forge.sha256.create();md.update(der);signature=privateKey.sign(md,"RSASSA-PKCS1-V1_5");if(signature===error){signature.pushReason("failed to generate POPSigningKey");resultCallback(signature);return}poposk.poposkInput=poposkInput;poposk.algorithmIdentifier={algorithm:signatureAlgorithm};poposk.signature=signature;obj.signature=poposk;resultCallback(obj)};XecureCA=function(url,pkeyId){this.url=url;this.pKeyId=pkeyId};XecureCA.prototype.setKeyGenerator=function(generator){this.keyGenerator=
generator};XecureCA.prototype.generateKeyPair=function(args,extractable,usage,pKeyId,keypairsetNum,resultCallback){var keypairset=[];if(this.hasOwnProperty("keyGenerator"))this.keyGenerator(args,extractable,usage,resultCallback);else{var iter;for(iter=0;iter<keypairsetNum;iter++)if(pKeyId==cmp.caPkeyId.PKEYID_RSA||iter>0)keypairset.push(rsa.generateKeyPair({bits:2048,e:65537}));else if(pKeyId==cmp.caPkeyId.PKEYID_KCDSA)keypairset.push(forge.kcdsa.generateKeyPair(this.KCDSAKeyParams));resultCallback(keypairset)}};
XecureCA.prototype.issue=function(refNum,authCode,resultCallback){var self=this;var asn;var message;var data;var messageType;var dogenm=true;var doir=true;var CMPtransactionID;if(refNum==undefined)throw"reference number is not defined.";if(authCode==undefined)throw"authentication code is not defined.";if(resultCallback==undefined)throw"resultCallback is not defined.";CMPtransactionID=forge.random.getBytesSync(16);function doConf(resultCallback){try{self.conf(refNum,authCode,CMPtransactionID,function(asn){if(asn===
error){resultCallback(asn);return}data=asn1.toDer(asn).getBytes();HTTPTransfer.send(self.url,HTTPTransfer.pkiReq,data,function(version,flags,messageType,result){if(version===error){resultCallback(version);return}if(result!=undefined)try{}catch(ex){error.setError(error.ERROR_REQUESTCERT,ex);resultCallback(error);return}resultCallback(self.certAndKey)})})}catch(ex){error.setError(error.ERROR_REQUESTCERT,ex);resultCallback(error)}}function doIRIP(resultCallback){try{self.ir(refNum,authCode,CMPtransactionID,
self.pKeyId,function(asn){if(asn===error){resultCallback(asn);return}data=asn1.toDer(asn).getBytes();HTTPTransfer.send(self.url,HTTPTransfer.pkiReq,data,function(version,flags,messageType,result){if(version===error){resultCallback(version);return}try{self.decodeMessage(result)}catch(ex){error.setError(error.ERROR_REQUESTCERT,ex);resultCallback(error);return}doConf(resultCallback)})})}catch(ex){error.setError(error.ERROR_REQUESTCERT,ex);resultCallback(error)}}function doGENM(resultCallback){asn=self.genm(refNum,
CMPtransactionID);data=asn1.toDer(asn).getBytes();HTTPTransfer.send(self.url,HTTPTransfer.pkiReq,data,function(version,flags,messageType,result){if(version===error){resultCallback(version);return}try{self.decodeMessage(result);doIRIP(resultCallback)}catch(ex){error.setError(error.ERROR_REQUESTCERT,ex);resultCallback(error)}})}doGENM(resultCallback)};XecureCA.prototype.update=function(oldSignCert,oldSignKey,oldKmCert,oldKmKey,oldCertSerialNum,oldKeyword,resultCallback){var self=this;if(oldSignCert==
undefined||oldSignKey==undefined||oldKmCert==undefined||oldKmKey==undefined){error.setError("Renew(old) Cert or Key (KMCert) is invalid.");resultCallback(error)}self.oldCert=oldSignCert;self.oldKey=oldSignKey;self.oldKMCert=oldKmCert;self.oldKMKey=oldKmKey;self.certSerial=oldCertSerialNum;var asn;var message;var data;var messageType;var dogenm=true;var doir=true;var CMPtransactionID;var refNum="23456";var authCode="9319205181606408713";if(refNum==undefined)throw"reference number is not defined.";
if(authCode==undefined)throw"authentication code is not defined.";if(resultCallback==undefined)throw"resultCallback is not defined.";CMPtransactionID=forge.random.getBytesSync(16);function doConf(resultCallback){try{self.conf(refNum,authCode,CMPtransactionID,function(asn){if(asn===error){resultCallback(asn);return}data=asn1.toDer(asn).getBytes();HTTPTransfer.send(self.url,HTTPTransfer.pkiReq,data,function(version,flags,messageType,result){if(version===error){resultCallback(version);return}if(result!=
undefined)try{}catch(ex){error.setError(error.ERROR_RENEWCERT,ex);resultCallback(error);return}resultCallback(self.certAndKey)})})}catch(ex){error.setError(error.ERROR_RENEWCERT,ex);resultCallback(error)}}function doKurKup(resultCallback){try{self.kur(self.oldCert,self.oldKey,self.oldKMCert,self.oldKMKey,oldKeyword,CMPtransactionID,self.pKeyId,function(asn){if(asn===error){resultCallback(asn);return}data=asn1.toDer(asn).getBytes();HTTPTransfer.send(self.url,HTTPTransfer.pkiReq,data,function(version,
flags,messageType,result){if(version===error){resultCallback(version);return}try{self.decodeMessage(result)}catch(ex){error.setError(error.ERROR_RENEWCERT,ex);resultCallback(error);return}doConf(resultCallback)})})}catch(ex){error.setError(error.ERROR_RENEWCERT,ex);resultCallback(error)}}function doGENM(resultCallback){asn=self.genmkur(self.certSerial,self.oldCert,CMPtransactionID);data=asn1.toDer(asn).getBytes();HTTPTransfer.send(self.url,HTTPTransfer.pkiReq,data,function(version,flags,messageType,
result){if(version===error){resultCallback(version);return}try{self.decodeMessage(result);doKurKup(resultCallback)}catch(ex){error.setError(error.ERROR_RENEWCERT,ex);resultCallback(error)}})}doGENM(resultCallback)};XecureCA.prototype.decodeMessage=function(message){var asn;var obj;asn=asn1.fromDer(message);obj=forge.cmp.PKIMessage.toObject(asn);if("error"in obj.body){var statusInfo;var msg;statusInfo=obj.body.error.pKIStatusInfo;if(statusInfo.statusString!=undefined){var iter=0;for(iter=0;iter<statusInfo.statusString.length;++iter)statusInfo.statusString[iter]=
cmputil.euckrToUTF8(statusInfo.statusString[iter]);msg="recieved CMP Error Message from CA:"+statusInfo.statusString.join();console.log(msg);throw msg;}}else if("genp"in obj.body){this.parseGenp(obj.body.genp);this.parseGenpHeader(obj.header)}else if("ip"in obj.body){this.parseIp(obj.body.ip);this.parseIpHeader(obj.header)}else if("kup"in obj.body){this.parseIp(obj.body.kup);this.parseIpHeader(obj.header)}else if("conf"in obj.body);else throw"unknown cmp message";};XecureCA.prototype.genm=function(refNum,
CMPtransactionID){var asn;var recipIDNum="0000";this.senderNonce=forge.random.getBytesSync(16);var message;message={};message.header={pvno:0,sender:{rfc822Name:" "},recipient:{rfc822Name:"PKI"},senderKID:refNum,recipKID:recipIDNum,senderNonce:this.senderNonce,transactionID:CMPtransactionID};message.body={};message.body.genm=undefined;return forge.cmp.PKIMessage.toAsn1(message)};XecureCA.prototype.genmkur=function(serialNum,oldCert,CMPtransactionID){var asn;var message;message={};this.senderNonce=
forge.random.getBytesSync(16);message.header={pvno:0,sender:{directoryName:oldCert.subject},recipient:{rfc822Name:" "},senderKID:serialNum,recipKID:forge.pki.getPublicKeyFingerprint(oldCert.publicKey,{type:"SubjectPublicKeyInfo",encoding:"binary"}),senderNonce:this.senderNonce,transactionID:CMPtransactionID};message.body={};message.body.genm=undefined;return forge.cmp.PKIMessage.toAsn1(message)};XecureCA.prototype.parseGenp=function(genp){var self=this;genp.forEach(function(data){if(data.infoType==
forge.cmp.oids.it_ca_ProtEncCert)self.CAProtocolEncryptionCertificate=forge.pki.certificateFromAsn1(asn1.fromDer(data.infoValue));else if(data.infoType==forge.cmp.oids.it_ca_SignKeyPairTypes){self.SignKeyPairTypes=true;var asnSignKeyPairData=asn1.fromDer(data.infoValue);var signKeyPairData=[];asnSignKeyPairData.value.forEach(function(data){signKeyPairData.push(forge.cmp.InfoTypeAndValue.toObject(data))});signKeyPairData.forEach(function(data){if(data.infoType==forge.cmp.oids.algorithemKCDSA1)self.KCDSAKeyParams=
forge.kcdsa.keyParameterFromAsn1(asn1.fromDer(data.infoValue))})}else if(data.infoType==forge.yessign.VIDCertificate.oid)self.VIDEncryptionCertificate=forge.pki.certificateFromAsn1(asn1.fromDer(data.infoValue))})};XecureCA.prototype.ir=function(refNum,authCode,CMPtransactionID,pKeyId,resultCallback){var self=this;var message;var crm;var args;this.keyPair=[];message={};message.header={pvno:forge.cmp.PKIHeader.cmp1999,sender:{rfc822Name:" "},recipient:{rfc822Name:" "},messageTime:new Date,protectionAlg:{algorithm:forge.cmp.oids.passwordBasedMac},
senderKID:refNum,senderNonce:this.recipNonce,recipNonce:this.senderNonce,transactionID:CMPtransactionID};message.body={};message.body.ir=[];if(pKeyId==cmp.caPkeyId.PKEYID_RSA)args={name:"RSASSA-PKCS1-v1_5",modulusLength:2048,publicExponent:new Array([1,0,1]),hash:{name:"SHA-256"}};this.generateKeyPair(args,true,["sign"],pKeyId,2,function(keyPair){var certReqId=0;if(keyPair===error){keyPair.pushReason("generateKeyPair failed");resultCallback(keyPair);return}keyPair.forEach(function(keypairset){self.keyPair.push({publicKey:keypairset.publicKey,
privateKey:keypairset.privateKey})});self.generateCertReqMsg(certReqId,self.keyPair[certReqId].publicKey,self.keyPair[certReqId].privateKey,null,function(crm){if(crm===error){crm.pushReason("failed to generateCertReqMsg(0)");resultCallback(crm);return}message.body.ir.push(crm);certReqId=1;self.generateCertReqMsg(certReqId,self.keyPair[certReqId].publicKey,self.keyPair[certReqId].privateKey,null,function(crm){if(crm===error){crm.pushReason("failed to generateCertReqMsg(1)");resultCallback(crm);return}message.body.ir.push(crm);
message.protection=Standard.generateProtection(message.header,message.body,authCode);resultCallback(forge.cmp.PKIMessage.toAsn1(message))})})})};XecureCA.prototype.parseIp=function(ip){var self=this;var caPubs;caPubs=ip.caPubs;this.certAndKey=[];ip.response.forEach(function(response,certReqId){var certifiedKeyPair;var certOrEncCert;var encryptedCert;var cert;if(response.status.status!=0){for(iter=0;iter<response.status.statusString.length;++iter)response.status.statusString[iter]=cmputil.euckrToUTF8(response.status.statusString[iter]);
throw"CMP response is error:"+response.status.statusString.join();}certifiedKeyPair=response.certifiedKeyPair;certOrEncCert=certifiedKeyPair.certOrEncCert;if("encryptedCert"in certOrEncCert){encryptedCert=certOrEncCert.encryptedCert;var symmKey;symmKey=self.keyPair[certReqId].privateKey.decrypt(encryptedCert.encSymmKey);symmIV=encryptedCert.symmAlgAndIV.infoValue.getBytes().substr(2);var des=forge.des.startDecrypting(symmKey,symmIV);des.update(forge.util.createBuffer(encryptedCert.encValue));des.finish();
var decryptedKMCert=des.output;cert=forge.pki.certificateFromAsn1(asn1.fromDer(decryptedKMCert.getBytes()))}else if("certificate"in certOrEncCert)cert=certOrEncCert.certificate;self.certAndKey.push({certificate:cert,privateKey:self.keyPair[certReqId].privateKey,vid:self.keyPair[certReqId].vid})})};XecureCA.prototype.parseGenpHeader=function(genpHeader){if("senderNonce"in genpHeader)this.senderNonce=genpHeader.senderNonce;if("recipNonce"in genpHeader)this.recipNonce=genpHeader.recipNonce};XecureCA.prototype.parseIpHeader=
function(ipHeader){if("senderNonce"in ipHeader)this.senderNonce=ipHeader.senderNonce;if("recipNonce"in ipHeader)this.recipNonce=ipHeader.recipNonce};XecureCA.prototype.conf=function(refNum,authCode,CMPtransactionID,resultCallback){var asn;var message;message={};message.header={pvno:forge.cmp.PKIHeader.cmp1999,sender:{rfc822Name:" "},recipient:{rfc822Name:" "},messageTime:new Date,protectionAlg:{algorithm:forge.cmp.oids.passwordBasedMac},senderKID:refNum,senderNonce:this.recipNonce,recipNonce:this.senderNonce,
transactionID:CMPtransactionID};message.body={};message.body.conf=[];message.protection=Standard.generateProtection(message.header,message.body,authCode);resultCallback(forge.cmp.PKIMessage.toAsn1(message))};XecureCA.prototype.kur=function(oldCert,oldKey,oldKMCert,oldKMKey,oldKeyword,CMPtransactionID,pKeyId,resultCallback){var self=this;var message;var crm;this.keyPair=[];message={};message.header={pvno:0,sender:{directoryName:oldCert.subject},recipient:{rfc822Name:" "},messageTime:new Date,protectionAlg:{algorithm:pKeyId==
cmp.caPkeyId.PKEYID_RSA?forge.oids["sha256WithRSAEncryption"]:forge.oids["kcdsa1WithHAS160"]},senderNonce:this.recipNonce,recipNonce:this.senderNonce,transactionID:CMPtransactionID};message.body={};message.body.kur=[];if(pKeyId==cmp.caPkeyId.PKEYID_RSA)var args={name:"RSASSA-PKCS1-v1_5",modulusLength:2048,publicExponent:new Array([1,0,1]),hash:{name:"SHA-256"}};this.generateKeyPair(args,true,["sign"],pKeyId,2,function(keyPair){var certReqId=0;if(keyPair===error){keyPair.pushReason("generateKeyPair failed");
resultCallback(keyPair);return}keyPair.forEach(function(keypairset){self.keyPair.push({publicKey:keypairset.publicKey,privateKey:keypairset.privateKey})});self.generateCertReqMsg(certReqId,self.keyPair[certReqId].publicKey,self.keyPair[certReqId].privateKey,self.oldCert,function(crm){if(crm===error){crm.pushReason("failed to generateCertReqMsg(0)");resultCallback(crm);return}message.body.kur.push(crm);if(self.oldKMCert==undefined||self.oldKMKey==undefined){message.protection=Standard.generateProtectionBySign(message.header,
message.body,oldCert,oldKey,oldKeyword);resultCallback(forge.cmp.PKIMessage.toAsn1(message))}else{certReqId=1;self.generateCertReqMsg(certReqId,self.keyPair[certReqId].publicKey,self.keyPair[certReqId].privateKey,self.oldKMCert,function(crm){if(crm===error){crm.pushReason("failed to generateCertReqMsg(1)");resultCallback(crm);return}message.body.kur.push(crm);message.protection=Standard.generateProtectionBySign(message.header,message.body,oldCert,oldKey,oldKeyword);resultCallback(forge.cmp.PKIMessage.toAsn1(message))})}})})};
XecureCA.prototype.generateCertReqMsg=function(certReqId,publicKey,privateKey,oldCert,resultCallback){var self=this;var obj={};var cr={};var ct={};var kmct={};var ctl={};var oldCertId={};var EncryptedValue={};var symmIV={};var symmKey={};var symmKeyLength;var publicKeyAsn;if(certReqId==0)self.exportKeyInfo(publicKey,function(publicKeyBytes){if(publicKeyBytes===error){publicKeyBytes.pushReason("failed to export publicKey");resultCallback(publicKeyBytes)}publicKeyAsn=publicKeyBytes;obj.certReq=cr;cr.certReqId=
certReqId;cr.certTemplate=ct;ct.publicKey=publicKeyAsn;if(oldCert!=null){cr.controls=[];oldCertId.certID={issuer:oldCert.issuer,serialNumber:asn1.derToInteger(forge.util.hexToBytes(oldCert.serialNumber))};ctl.type=forge.kisa.OldCertReqMsg.oid;ctl.value=oldCertId;cr.controls.push(ctl)}if(privateKey.kcdsa)var signatureAlgorithm=forge.oids["kcdsa1WithHAS160"];else var signatureAlgorithm=forge.oids["sha256WithRSAEncryption"];XecureCA.generatePOPO(signatureAlgorithm,publicKeyAsn,privateKey,publicKey,function(popo){if(popo===
error){popo.pushReason("failed to generate ProofOfPosession");resultCallback(popo);return}obj.popo=popo;obj.regInfo=self.generateRegInfo(certReqId);resultCallback(obj)})});else if(certReqId==1)self.exportKeyInfo(publicKey,function(publicKeyBytes){if(publicKeyBytes===error){publicKeyBytes.pushReason("failed to export publicKey");resultCallback(publicKeyBytes)}publicKeyAsn=publicKeyBytes;obj.certReq=cr;cr.certReqId=certReqId;cr.certTemplate=ct;ct.publicKey=publicKeyAsn;cr.controls=[];if(oldCert!=null){oldCertId.certID=
{issuer:oldCert.issuer,serialNumber:asn1.derToInteger(forge.util.hexToBytes(oldCert.serialNumber))};ctl.type=forge.kisa.OldCertReqMsg.oid;ctl.value=oldCertId;cr.controls.push(ctl)}symmIV=forge.random.getBytesSync(8);var valueSymmIV=parseInt("0x04").toString()+symmIV.length.toString()+symmIV;EncryptedValue.symmAlg={algorithm:forge.kisa.SymmAlgorithms.oid,parameters:valueSymmIV};symmKeyLength=24;symmKey=forge.random.getBytesSync(symmKeyLength);var symmCipher=forge.cipher.createCipher("3DES-CBC",symmKey);
symmCipher.start({iv:symmIV});symmCipher.update(forge.util.createBuffer(asn1.toDer(forge.pki.privateKeyToAsn1(privateKey)).getBytes()));symmCipher.finish();var encryptedPrivateKey=symmCipher.output;var cert=self.CAProtocolEncryptionCertificate;var encSymmKeyValue=cert.publicKey.encrypt(symmKey);EncryptedValue.encSymmKey=encSymmKeyValue;EncryptedValue.encValue=encryptedPrivateKey.getBytes();kmct.type=forge.kisa.PKIArchiveOptions.oid;kmct.value=EncryptedValue;EncryptedValue.keyAlg={algorithm:forge.oids["rsaEncryption"]};
cr.controls.push(kmct);resultCallback(obj)})};XecureCA.prototype.exportKeyInfo=function(publicKey,resultCallback){var self=this;resultCallback(sofo.pki.publicKeyToAsn1(publicKey))};XecureCA.prototype.generateRegInfo=function(certReqId){var obj=[];if(certReqId!=0)return null;this.keyPair[certReqId].vid=forge.random.getBytesSync(20);if(this.SignKeyPairTypes!==null&&typeof this.SignKeyPairTypes!=="undefined")obj.push(XecureCA.generateVID("1234561234567",this.keyPair[certReqId].vid,this.CAProtocolEncryptionCertificate));
else obj.push(XecureCA.generateVID("1234561234567",this.keyPair[certReqId].vid,this.VIDEncryptionCertificate));return obj};XecureCA.calculateVID=function(ss,r,hash){var hc;var vid;hc={idn:ss,randomNum:r};vid=asn1.toDer(HashContent.toAsn1(hc)).getBytes();hash.start();hash.update(vid);vid=hash.digest().getBytes();hash.start();hash.update(vid);vid=hash.digest().getBytes();return vid};XecureCA.generateVID=function(ssn,random,cert){var obj={};var asn;var vid;var encryptedVID={};var encryptedValue;var encryptContent=
{};vid={hashAlg:{algorithm:forge.oids["sha256"]}};vid.virtualID=this.calculateVID(ssn,random,forge.md.sha256.create());asn=asn1.toDer(forge.kisa.EncryptContent.toAsn1({vid:vid,randomNum:random}));encryptedValue=cert.publicKey.encrypt(asn.getBytes());encryptedVID.version=0;encryptedVID.vidHashAlg={algorithm:vid.hashAlg.algorithm};encryptedVID.vidEncAlg={algorithm:forge.oids["rsaEncryption"],parameters:null};encryptedVID.certID={issuer:cert.issuer,serialNumber:asn1.derToInteger(forge.util.hexToBytes(cert.serialNumber))};
encryptedVID.encryptedVID=encryptedValue;obj.type=forge.kisa.EncryptedVID.oid;obj.value=encryptedVID;return obj};XecureCA.generatePOPO=function(signatureAlgorithm,publicKeyAsn,privateKey,publicKey,resultCallback){var obj={};var poposkInput={};var poposk={};var asn;var der;var signature;poposkInput={authInfo:{sender:{rfc822Name:" "}},publicKey:publicKeyAsn};asn=forge.crmf.POPOSigningKeyInput.toAsn1(poposkInput);der=asn1.toDer(asn).getBytes();if(privateKey.kcdsa){var signatureAsn=privateKey.sign("has160",
der,publicKey.y);signature=asn1.toDer(signatureAsn).getBytes()}else{var md=forge.sha256.create();md.update(der);signature=privateKey.sign(md,"RSASSA-PKCS1-V1_5")}if(signature===error){signature.pushReason("failed to generate POPSigningKey");resultCallback(signature);return}poposk.poposkInput=poposkInput;poposk.algorithmIdentifier={algorithm:signatureAlgorithm};poposk.signature=signature;obj.signature=poposk;resultCallback(obj)};XecureCA.generateKMCertReqMsg=function(signatureAlgorithm,publicKey,privateKey,
resultCallback){var obj={};var poposkInput={};var poposk={};var asn;var der;var signature;poposkInput={authInfo:{sender:{rfc822Name:" "}},publicKey:publicKey};asn=forge.crmf.POPOSigningKeyInput.toAsn1(poposkInput);der=asn1.toDer(asn).getBytes();var md=forge.sha256.create();md.update(der);signature=privateKey.sign(md,"RSASSA-PKCS1-V1_5");if(signature===error){signature.pushReason("failed to generate POPSigningKey");resultCallback(signature);return}poposk.poposkInput=poposkInput;poposk.algorithmIdentifier=
{algorithm:signatureAlgorithm};poposk.signature=signature;obj.signature=poposk;resultCallback(obj)};cmp.client={};cmp.client.Standard=Standard;cmp.client.YesSign=YesSign;cmp.client.XecureCA=XecureCA;HTTPTransfer=function(){};HTTPTransfer.pkiReq=0;HTTPTransfer.pkiRep=5;HTTPTransfer.errorMsgRep=6;HTTPTransfer.send=function(url,messageType,data,recvCallback){var xhr=new XMLHttpRequest;var message;message=forge.util.createBuffer();message.putInt32(data.length+3);message.putByte(16);message.putByte(0);
message.putByte(messageType);message.putBytes(data);xhr.open("POST",url,true);xhr.onreadystatechange=function(){if(xhr.readyState==4){var result;var message;var fullLength;var version;var flags;var messageType;var value;if(xhr.status!=200){if(xhr.status==545){recvCallback(545);return}error.setError("WebCMP HTTPTransfer(XHR) recieved status code:["+xhr.status+"] with status message:["+xhr.statusText+"]");recvCallback(error);return}message=forge.util.createBuffer(forge.util.decode64(decodeURIComponent(xhr.responseText)));
fullLength=message.getInt32();version=message.getByte();flags=message.getByte();messageType=message.getByte();value=message.getBytes();recvCallback(version,flags,messageType,value)}};message=forge.util.encode64(message.getBytes());try{xhr.send(message)}catch(ex){error.setError(error.ERROR_REQUESTCERT,ex);recvCallback(error)}};var cmputil={};cmputil.tableKSC5601=[12288,12289,12290,183,8229,8230,168,12291,173,8213,8741,65340,8764,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,
12303,12304,12305,177,215,247,8800,8804,8805,8734,8756,176,8242,8243,8451,8491,65504,65505,65509,9794,9792,8736,8869,8978,8706,8711,8801,8786,167,8251,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8594,8592,8593,8595,8596,12307,8810,8811,8730,8765,8733,8757,8747,8748,8712,8715,8838,8839,8834,8835,8746,8745,8743,8744,65506,8658,8660,8704,8707,180,65374,711,728,733,730,729,184,731,161,191,720,8750,8721,8719,164,8457,8240,9665,9664,9655,9654,9828,9824,9825,9829,9831,9827,8857,9672,
9635,9680,9681,9618,9636,9637,9640,9639,9638,9641,9832,9743,9742,9756,9758,182,8224,8225,8597,8599,8601,8598,8600,9837,9833,9834,9836,12927,12828,8470,13255,8482,13250,13272,8481,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,65281,65282,65283,65284,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,
65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65510,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,12593,12594,12595,12596,12597,12598,12599,12600,12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616,12617,12618,12619,12620,12621,12622,12623,12624,
12625,12626,12627,12628,12629,12630,12631,12632,12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,12647,12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663,12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679,12680,12681,12682,12683,12684,12685,12686,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,-1,-1,-1,-1,-1,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,-1,-1,-1,-1,-1,
-1,-1,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,-1,-1,-1,-1,-1,-1,-1,-1,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,-1,-1,-1,-1,-1,-1,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,9490,9489,9498,9497,9494,9493,9486,9485,9502,9503,9505,9506,9510,9511,9513,9514,9517,9518,9521,9522,9525,
9526,9529,9530,9533,9534,9536,9537,9539,9540,9541,9542,9543,9544,9545,9546,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,13205,13206,13207,8467,13208,13252,13219,13220,13221,13222,13209,13210,13211,13212,13213,13214,13215,13216,13217,13218,13258,13197,13198,13199,13263,13192,13193,13256,13223,13224,13232,13233,13234,13235,13236,13237,13238,13239,13240,13241,13184,13185,13186,13187,13188,13242,13243,13244,13245,13246,13247,13200,13201,13202,13203,13204,8486,13248,13249,
13194,13195,13196,13270,13253,13229,13230,13231,13275,13225,13226,13227,13228,13277,13264,13267,13251,13257,13276,13254,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,198,208,170,294,-1,306,-1,319,321,216,338,186,222,358,330,-1,12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911,12912,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,9424,9425,9426,9427,9428,9429,9430,9431,9432,9433,9434,9435,9436,9437,9438,9439,9440,9441,9442,9443,9444,9445,
9446,9447,9448,9449,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,189,8531,8532,188,190,8539,8540,8541,8542,230,273,240,295,305,307,312,320,322,248,339,223,254,359,331,329,12800,12801,12802,12803,12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819,12820,12821,12822,12823,12824,12825,12826,12827,9372,9373,9374,9375,9376,9377,9378,9379,9380,9381,9382,9383,9384,9385,9386,9387,9388,9389,9390,9391,9392,9393,9394,9395,9396,9397,9332,
9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,185,178,179,8308,8319,8321,8322,8323,8324,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,
12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,
12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,-1,-1,-1,-1,-1,-1,-1,-1,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,
1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,44032,44033,44036,44039,44040,44041,44042,44048,44049,44050,44051,44052,
44053,44054,44055,44057,44058,44059,44060,44061,44064,44068,44076,44077,44079,44080,44081,44088,44089,44092,44096,44107,44109,44116,44120,44124,44144,44145,44148,44151,44152,44154,44160,44161,44163,44164,44165,44166,44169,44170,44171,44172,44176,44180,44188,44189,44191,44192,44193,44200,44201,44202,44204,44207,44208,44216,44217,44219,44220,44221,44225,44228,44232,44236,44245,44247,44256,44257,44260,44263,44264,44266,44268,44271,44272,44273,44275,44277,44278,44284,44285,44288,44292,44294,44300,44301,
44303,44305,44312,44316,44320,44329,44332,44333,44340,44341,44344,44348,44356,44357,44359,44361,44368,44372,44376,44385,44387,44396,44397,44400,44403,44404,44405,44406,44411,44412,44413,44415,44417,44418,44424,44425,44428,44432,44444,44445,44452,44471,44480,44481,44484,44488,44496,44497,44499,44508,44512,44516,44536,44537,44540,44543,44544,44545,44552,44553,44555,44557,44564,44592,44593,44596,44599,44600,44602,44608,44609,44611,44613,44614,44618,44620,44621,44622,44624,44628,44630,44636,44637,44639,
44640,44641,44645,44648,44649,44652,44656,44664,44665,44667,44668,44669,44676,44677,44684,44732,44733,44734,44736,44740,44748,44749,44751,44752,44753,44760,44761,44764,44776,44779,44781,44788,44792,44796,44807,44808,44813,44816,44844,44845,44848,44850,44852,44860,44861,44863,44865,44866,44867,44872,44873,44880,44892,44893,44900,44901,44921,44928,44932,44936,44944,44945,44949,44956,44984,44985,44988,44992,44999,45E3,45001,45003,45005,45006,45012,45020,45032,45033,45040,45041,45044,45048,45056,45057,
45060,45068,45072,45076,45084,45085,45096,45124,45125,45128,45130,45132,45134,45139,45140,45141,45143,45145,45149,45180,45181,45184,45188,45196,45197,45199,45201,45208,45209,45210,45212,45215,45216,45217,45218,45224,45225,45227,45228,45229,45230,45231,45233,45235,45236,45237,45240,45244,45252,45253,45255,45256,45257,45264,45265,45268,45272,45280,45285,45320,45321,45323,45324,45328,45330,45331,45336,45337,45339,45340,45341,45347,45348,45349,45352,45356,45364,45365,45367,45368,45369,45376,45377,45380,
45384,45392,45393,45396,45397,45400,45404,45408,45432,45433,45436,45440,45442,45448,45449,45451,45453,45458,45459,45460,45464,45468,45480,45516,45520,45524,45532,45533,45535,45544,45545,45548,45552,45561,45563,45565,45572,45573,45576,45579,45580,45588,45589,45591,45593,45600,45620,45628,45656,45660,45664,45672,45673,45684,45685,45692,45700,45701,45705,45712,45713,45716,45720,45721,45722,45728,45729,45731,45733,45734,45738,45740,45744,45748,45768,45769,45772,45776,45778,45784,45785,45787,45789,45794,
45796,45797,45798,45800,45803,45804,45805,45806,45807,45811,45812,45813,45815,45816,45817,45818,45819,45823,45824,45825,45828,45832,45840,45841,45843,45844,45845,45852,45908,45909,45910,45912,45915,45916,45918,45919,45924,45925,45927,45929,45931,45934,45936,45937,45940,45944,45952,45953,45955,45956,45957,45964,45968,45972,45984,45985,45992,45996,46020,46021,46024,46027,46028,46030,46032,46036,46037,46039,46041,46043,46045,46048,46052,46056,46076,46096,46104,46108,46112,46120,46121,46123,46132,46160,
46161,46164,46168,46176,46177,46179,46181,46188,46208,46216,46237,46244,46248,46252,46261,46263,46265,46272,46276,46280,46288,46293,46300,46301,46304,46307,46308,46310,46316,46317,46319,46321,46328,46356,46357,46360,46363,46364,46372,46373,46375,46376,46377,46378,46384,46385,46388,46392,46400,46401,46403,46404,46405,46411,46412,46413,46416,46420,46428,46429,46431,46432,46433,46496,46497,46500,46504,46506,46507,46512,46513,46515,46516,46517,46523,46524,46525,46528,46532,46540,46541,46543,46544,46545,
46552,46572,46608,46609,46612,46616,46629,46636,46644,46664,46692,46696,46748,46749,46752,46756,46763,46764,46769,46804,46832,46836,46840,46848,46849,46853,46888,46889,46892,46895,46896,46904,46905,46907,46916,46920,46924,46932,46933,46944,46948,46952,46960,46961,46963,46965,46972,46973,46976,46980,46988,46989,46991,46992,46993,46994,46998,46999,47E3,47001,47004,47008,47016,47017,47019,47020,47021,47028,47029,47032,47047,47049,47084,47085,47088,47092,47100,47101,47103,47104,47105,47111,47112,47113,
47116,47120,47128,47129,47131,47133,47140,47141,47144,47148,47156,47157,47159,47160,47161,47168,47172,47185,47187,47196,47197,47200,47204,47212,47213,47215,47217,47224,47228,47245,47272,47280,47284,47288,47296,47297,47299,47301,47308,47312,47316,47325,47327,47329,47336,47337,47340,47344,47352,47353,47355,47357,47364,47384,47392,47420,47421,47424,47428,47436,47439,47441,47448,47449,47452,47456,47464,47465,47467,47469,47476,47477,47480,47484,47492,47493,47495,47497,47498,47501,47502,47532,47533,47536,
47540,47548,47549,47551,47553,47560,47561,47564,47566,47567,47568,47569,47570,47576,47577,47579,47581,47582,47585,47587,47588,47589,47592,47596,47604,47605,47607,47608,47609,47610,47616,47617,47624,47637,47672,47673,47676,47680,47682,47688,47689,47691,47693,47694,47699,47700,47701,47704,47708,47716,47717,47719,47720,47721,47728,47729,47732,47736,47747,47748,47749,47751,47756,47784,47785,47787,47788,47792,47794,47800,47801,47803,47805,47812,47816,47832,47833,47868,47872,47876,47885,47887,47889,47896,
47900,47904,47913,47915,47924,47925,47926,47928,47931,47932,47933,47934,47940,47941,47943,47945,47949,47951,47952,47956,47960,47969,47971,47980,48008,48012,48016,48036,48040,48044,48052,48055,48064,48068,48072,48080,48083,48120,48121,48124,48127,48128,48130,48136,48137,48139,48140,48141,48143,48145,48148,48149,48150,48151,48152,48155,48156,48157,48158,48159,48164,48165,48167,48169,48173,48176,48177,48180,48184,48192,48193,48195,48196,48197,48201,48204,48205,48208,48221,48260,48261,48264,48267,48268,
48270,48276,48277,48279,48281,48282,48288,48289,48292,48295,48296,48304,48305,48307,48308,48309,48316,48317,48320,48324,48333,48335,48336,48337,48341,48344,48348,48372,48373,48374,48376,48380,48388,48389,48391,48393,48400,48404,48420,48428,48448,48456,48457,48460,48464,48472,48473,48484,48488,48512,48513,48516,48519,48520,48521,48522,48528,48529,48531,48533,48537,48538,48540,48548,48560,48568,48596,48597,48600,48604,48617,48624,48628,48632,48640,48643,48645,48652,48653,48656,48660,48668,48669,48671,
48708,48709,48712,48716,48718,48724,48725,48727,48729,48730,48731,48736,48737,48740,48744,48746,48752,48753,48755,48756,48757,48763,48764,48765,48768,48772,48780,48781,48783,48784,48785,48792,48793,48808,48848,48849,48852,48855,48856,48864,48867,48868,48869,48876,48897,48904,48905,48920,48921,48923,48924,48925,48960,48961,48964,48968,48976,48977,48981,49044,49072,49093,49100,49101,49104,49108,49116,49119,49121,49212,49233,49240,49244,49248,49256,49257,49296,49297,49300,49304,49312,49313,49315,49317,
49324,49325,49327,49328,49331,49332,49333,49334,49340,49341,49343,49344,49345,49349,49352,49353,49356,49360,49368,49369,49371,49372,49373,49380,49381,49384,49388,49396,49397,49399,49401,49408,49412,49416,49424,49429,49436,49437,49438,49439,49440,49443,49444,49446,49447,49452,49453,49455,49456,49457,49462,49464,49465,49468,49472,49480,49481,49483,49484,49485,49492,49493,49496,49500,49508,49509,49511,49512,49513,49520,49524,49528,49541,49548,49549,49550,49552,49556,49558,49564,49565,49567,49569,49573,
49576,49577,49580,49584,49597,49604,49608,49612,49620,49623,49624,49632,49636,49640,49648,49649,49651,49660,49661,49664,49668,49676,49677,49679,49681,49688,49689,49692,49695,49696,49704,49705,49707,49709,49711,49713,49714,49716,49736,49744,49745,49748,49752,49760,49765,49772,49773,49776,49780,49788,49789,49791,49793,49800,49801,49808,49816,49819,49821,49828,49829,49832,49836,49837,49844,49845,49847,49849,49884,49885,49888,49891,49892,49899,49900,49901,49903,49905,49910,49912,49913,49915,49916,49920,
49928,49929,49932,49933,49939,49940,49941,49944,49948,49956,49957,49960,49961,49989,50024,50025,50028,50032,50034,50040,50041,50044,50045,50052,50056,50060,50112,50136,50137,50140,50143,50144,50146,50152,50153,50157,50164,50165,50168,50184,50192,50212,50220,50224,50228,50236,50237,50248,50276,50277,50280,50284,50292,50293,50297,50304,50324,50332,50360,50364,50409,50416,50417,50420,50424,50426,50431,50432,50433,50444,50448,50452,50460,50472,50473,50476,50480,50488,50489,50491,50493,50500,50501,50504,
50505,50506,50508,50509,50510,50515,50516,50517,50519,50520,50521,50525,50526,50528,50529,50532,50536,50544,50545,50547,50548,50549,50556,50557,50560,50564,50567,50572,50573,50575,50577,50581,50583,50584,50588,50592,50601,50612,50613,50616,50617,50619,50620,50621,50622,50628,50629,50630,50631,50632,50633,50634,50636,50638,50640,50641,50644,50648,50656,50657,50659,50661,50668,50669,50670,50672,50676,50678,50679,50684,50685,50686,50687,50688,50689,50693,50694,50695,50696,50700,50704,50712,50713,50715,
50716,50724,50725,50728,50732,50733,50734,50736,50739,50740,50741,50743,50745,50747,50752,50753,50756,50760,50768,50769,50771,50772,50773,50780,50781,50784,50796,50799,50801,50808,50809,50812,50816,50824,50825,50827,50829,50836,50837,50840,50844,50852,50853,50855,50857,50864,50865,50868,50872,50873,50874,50880,50881,50883,50885,50892,50893,50896,50900,50908,50909,50912,50913,50920,50921,50924,50928,50936,50937,50941,50948,50949,50952,50956,50964,50965,50967,50969,50976,50977,50980,50984,50992,50993,
50995,50997,50999,51004,51005,51008,51012,51018,51020,51021,51023,51025,51026,51027,51028,51029,51030,51031,51032,51036,51040,51048,51051,51060,51061,51064,51068,51069,51070,51075,51076,51077,51079,51080,51081,51082,51086,51088,51089,51092,51094,51095,51096,51098,51104,51105,51107,51108,51109,51110,51116,51117,51120,51124,51132,51133,51135,51136,51137,51144,51145,51148,51150,51152,51160,51165,51172,51176,51180,51200,51201,51204,51208,51210,51216,51217,51219,51221,51222,51228,51229,51232,51236,51244,
51245,51247,51249,51256,51260,51264,51272,51273,51276,51277,51284,51312,51313,51316,51320,51322,51328,51329,51331,51333,51334,51335,51339,51340,51341,51348,51357,51359,51361,51368,51388,51389,51396,51400,51404,51412,51413,51415,51417,51424,51425,51428,51445,51452,51453,51456,51460,51461,51462,51468,51469,51471,51473,51480,51500,51508,51536,51537,51540,51544,51552,51553,51555,51564,51568,51572,51580,51592,51593,51596,51600,51608,51609,51611,51613,51648,51649,51652,51655,51656,51658,51664,51665,51667,
51669,51670,51673,51674,51676,51677,51680,51682,51684,51687,51692,51693,51695,51696,51697,51704,51705,51708,51712,51720,51721,51723,51724,51725,51732,51736,51753,51788,51789,51792,51796,51804,51805,51807,51808,51809,51816,51837,51844,51864,51900,51901,51904,51908,51916,51917,51919,51921,51923,51928,51929,51936,51948,51956,51976,51984,51988,51992,52E3,52001,52033,52040,52041,52044,52048,52056,52057,52061,52068,52088,52089,52124,52152,52180,52196,52199,52201,52236,52237,52240,52244,52252,52253,52257,
52258,52263,52264,52265,52268,52270,52272,52280,52281,52283,52284,52285,52286,52292,52293,52296,52300,52308,52309,52311,52312,52313,52320,52324,52326,52328,52336,52341,52376,52377,52380,52384,52392,52393,52395,52396,52397,52404,52405,52408,52412,52420,52421,52423,52425,52432,52436,52452,52460,52464,52481,52488,52489,52492,52496,52504,52505,52507,52509,52516,52520,52524,52537,52572,52576,52580,52588,52589,52591,52593,52600,52616,52628,52629,52632,52636,52644,52645,52647,52649,52656,52676,52684,52688,
52712,52716,52720,52728,52729,52731,52733,52740,52744,52748,52756,52761,52768,52769,52772,52776,52784,52785,52787,52789,52824,52825,52828,52831,52832,52833,52840,52841,52843,52845,52852,52853,52856,52860,52868,52869,52871,52873,52880,52881,52884,52888,52896,52897,52899,52900,52901,52908,52909,52929,52964,52965,52968,52971,52972,52980,52981,52983,52984,52985,52992,52993,52996,53E3,53008,53009,53011,53013,53020,53024,53028,53036,53037,53039,53040,53041,53048,53076,53077,53080,53084,53092,53093,53095,
53097,53104,53105,53108,53112,53120,53125,53132,53153,53160,53168,53188,53216,53217,53220,53224,53232,53233,53235,53237,53244,53248,53252,53265,53272,53293,53300,53301,53304,53308,53316,53317,53319,53321,53328,53332,53336,53344,53356,53357,53360,53364,53372,53373,53377,53412,53413,53416,53420,53428,53429,53431,53433,53440,53441,53444,53448,53449,53456,53457,53459,53460,53461,53468,53469,53472,53476,53484,53485,53487,53488,53489,53496,53517,53552,53553,53556,53560,53562,53568,53569,53571,53572,53573,
53580,53581,53584,53588,53596,53597,53599,53601,53608,53612,53628,53636,53640,53664,53665,53668,53672,53680,53681,53683,53685,53690,53692,53696,53720,53748,53752,53767,53769,53776,53804,53805,53808,53812,53820,53821,53823,53825,53832,53852,53860,53888,53889,53892,53896,53904,53905,53909,53916,53920,53924,53932,53937,53944,53945,53948,53951,53952,53954,53960,53961,53963,53972,53976,53980,53988,53989,54E3,54001,54004,54008,54016,54017,54019,54021,54028,54029,54030,54032,54036,54038,54044,54045,54047,
54048,54049,54053,54056,54057,54060,54064,54072,54073,54075,54076,54077,54084,54085,54140,54141,54144,54148,54156,54157,54159,54160,54161,54168,54169,54172,54176,54184,54185,54187,54189,54196,54200,54204,54212,54213,54216,54217,54224,54232,54241,54243,54252,54253,54256,54260,54268,54269,54271,54273,54280,54301,54336,54340,54364,54368,54372,54381,54383,54392,54393,54396,54399,54400,54402,54408,54409,54411,54413,54420,54441,54476,54480,54484,54492,54495,54504,54508,54512,54520,54523,54525,54532,54536,
54540,54548,54549,54551,54588,54589,54592,54596,54604,54605,54607,54609,54616,54617,54620,54624,54629,54632,54633,54635,54637,54644,54645,54648,54652,54660,54661,54663,54664,54665,54672,54693,54728,54729,54732,54736,54738,54744,54745,54747,54749,54756,54757,54760,54764,54772,54773,54775,54777,54784,54785,54788,54792,54800,54801,54803,54804,54805,54812,54816,54820,54829,54840,54841,54844,54848,54853,54856,54857,54859,54861,54865,54868,54869,54872,54876,54887,54889,54896,54897,54900,54915,54917,54924,
54925,54928,54932,54941,54943,54945,54952,54956,54960,54969,54971,54980,54981,54984,54988,54993,54996,54999,55001,55008,55012,55016,55024,55029,55036,55037,55040,55044,55057,55064,55065,55068,55072,55080,55081,55083,55085,55092,55093,55096,55100,55108,55111,55113,55120,55121,55124,55126,55127,55128,55129,55136,55137,55139,55141,55145,55148,55152,55156,55164,55165,55169,55176,55177,55180,55184,55192,55193,55195,55197,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,20285,20339,20551,20729,21152,21487,21621,21733,22025,23233,23478,26247,26550,26551,26607,27468,29634,30146,31292,33499,33540,34903,34952,35382,36040,36303,36603,36838,39381,21051,21364,21508,24682,24932,27580,29647,33050,35258,35282,38307,20355,21002,22718,22904,23014,24178,24185,25031,25536,26438,
26604,26751,28567,30286,30475,30965,31240,31487,31777,32925,33390,33393,35563,38291,20075,21917,26359,28212,30883,31469,33883,35088,34638,38824,21208,22350,22570,23884,24863,25022,25121,25954,26577,27204,28187,29976,30131,30435,30640,32058,37039,37969,37970,40853,21283,23724,30002,32987,37440,38296,21083,22536,23004,23713,23831,24247,24378,24394,24951,27743,30074,30086,31968,32115,32177,32652,33108,33313,34193,35137,35611,37628,38477,40007,20171,20215,20491,20977,22607,24887,24894,24936,25913,27114,
28433,30117,30342,30422,31623,33445,33995,63744,37799,38283,21888,23458,22353,63745,31923,32697,37301,20520,21435,23621,24040,25298,25454,25818,25831,28192,28844,31067,36317,36382,63746,36989,37445,37624,20094,20214,20581,24062,24314,24838,26967,33137,34388,36423,37749,39467,20062,20625,26480,26688,20745,21133,21138,27298,30652,37392,40660,21163,24623,36850,20552,25001,25581,25802,26684,27268,28608,33160,35233,38548,22533,29309,29356,29956,32121,32365,32937,35211,35700,36963,40273,25225,27770,28500,
32080,32570,35363,20860,24906,31645,35609,37463,37772,20140,20435,20510,20670,20742,21185,21197,21375,22384,22659,24218,24465,24950,25004,25806,25964,26223,26299,26356,26775,28039,28805,28913,29855,29861,29898,30169,30828,30956,31455,31478,32069,32147,32789,32831,33051,33686,35686,36629,36885,37857,38915,38968,39514,39912,20418,21843,22586,22865,23395,23622,24760,25106,26690,26800,26856,28330,30028,30328,30926,31293,31995,32363,32380,35336,35489,35903,38542,40388,21476,21481,21578,21617,22266,22993,
23396,23611,24235,25335,25911,25925,25970,26272,26543,27073,27837,30204,30352,30590,31295,32660,32771,32929,33167,33510,33533,33776,34241,34865,34996,35493,63747,36764,37678,38599,39015,39640,40723,21741,26011,26354,26767,31296,35895,40288,22256,22372,23825,26118,26801,26829,28414,29736,34974,39908,27752,63748,39592,20379,20844,20849,21151,23380,24037,24656,24685,25329,25511,25915,29657,31354,34467,36002,38799,20018,23521,25096,26524,29916,31185,33747,35463,35506,36328,36942,37707,38982,24275,27112,
34303,37101,63749,20896,23448,23532,24931,26874,27454,28748,29743,29912,31649,32592,33733,35264,36011,38364,39208,21038,24669,25324,36866,20362,20809,21281,22745,24291,26336,27960,28826,29378,29654,31568,33009,37979,21350,25499,32619,20054,20608,22602,22750,24618,24871,25296,27088,39745,23439,32024,32945,36703,20132,20689,21676,21932,23308,23968,24039,25898,25934,26657,27211,29409,30350,30703,32094,32761,33184,34126,34527,36611,36686,37066,39171,39509,39851,19992,20037,20061,20167,20465,20855,21246,
21312,21475,21477,21646,22036,22389,22434,23495,23943,24272,25084,25304,25937,26552,26601,27083,27472,27590,27628,27714,28317,28792,29399,29590,29699,30655,30697,31350,32127,32777,33276,33285,33290,33503,34914,35635,36092,36544,36881,37041,37476,37558,39378,39493,40169,40407,40860,22283,23616,33738,38816,38827,40628,21531,31384,32676,35033,36557,37089,22528,23624,25496,31391,23470,24339,31353,31406,33422,36524,20518,21048,21240,21367,22280,25331,25458,27402,28099,30519,21413,29527,34152,36470,38357,
26426,27331,28528,35437,36556,39243,63750,26231,27512,36020,39740,63751,21483,22317,22862,25542,27131,29674,30789,31418,31429,31998,33909,35215,36211,36917,38312,21243,22343,30023,31584,33740,37406,63752,27224,20811,21067,21127,25119,26840,26997,38553,20677,21156,21220,25027,26020,26681,27135,29822,31563,33465,33771,35250,35641,36817,39241,63753,20170,22935,25810,26129,27278,29748,31105,31165,33449,34942,34943,35167,63754,37670,20235,21450,24613,25201,27762,32026,32102,20120,20834,30684,32943,20225,
20238,20854,20864,21980,22120,22331,22522,22524,22804,22855,22931,23492,23696,23822,24049,24190,24524,25216,26071,26083,26398,26399,26462,26827,26820,27231,27450,27683,27773,27778,28103,29592,29734,29738,29826,29859,30072,30079,30849,30959,31041,31047,31048,31098,31637,32E3,32186,32648,32774,32813,32908,35352,35663,35912,36215,37665,37668,39138,39249,39438,39439,39525,40594,32202,20342,21513,25326,26708,37329,21931,20794,63755,63756,23068,25062,63757,25295,25343,63758,63759,63760,63761,63762,63763,
37027,63764,63765,63766,63767,63768,35582,63769,63770,63771,63772,26262,63773,29014,63774,63775,38627,63776,25423,25466,21335,63777,26511,26976,28275,63778,30007,63779,63780,63781,32013,63782,63783,34930,22218,23064,63784,63785,63786,63787,63788,20035,63789,20839,22856,26608,32784,63790,22899,24180,25754,31178,24565,24684,25288,25467,23527,23511,21162,63791,22900,24361,24594,63792,63793,63794,29785,63795,63796,63797,63798,63799,63800,39377,63801,63802,63803,63804,63805,63806,63807,63808,63809,63810,
63811,28611,63812,63813,33215,36786,24817,63814,63815,33126,63816,63817,23615,63818,63819,63820,63821,63822,63823,63824,63825,23273,35365,26491,32016,63826,63827,63828,63829,63830,63831,33021,63832,63833,23612,27877,21311,28346,22810,33590,20025,20150,20294,21934,22296,22727,24406,26039,26086,27264,27573,28237,30701,31471,31774,32222,34507,34962,37170,37723,25787,28606,29562,30136,36948,21846,22349,25018,25812,26311,28129,28251,28525,28601,30192,32835,33213,34113,35203,35527,35674,37663,27795,30035,
31572,36367,36957,21776,22530,22616,24162,25095,25758,26848,30070,31958,34739,40680,20195,22408,22382,22823,23565,23729,24118,24453,25140,25825,29619,33274,34955,36024,38538,40667,23429,24503,24755,20498,20992,21040,22294,22581,22615,23566,23648,23798,23947,24230,24466,24764,25361,25481,25623,26691,26873,27330,28120,28193,28372,28644,29182,30428,30585,31153,31291,33796,35241,36077,36339,36424,36867,36884,36947,37117,37709,38518,38876,27602,28678,29272,29346,29544,30563,31167,31716,32411,35712,22697,
24775,25958,26109,26302,27788,28958,29129,35930,38931,20077,31361,20189,20908,20941,21205,21516,24999,26481,26704,26847,27934,28540,30140,30643,31461,33012,33891,37509,20828,26007,26460,26515,30168,31431,33651,63834,35910,36887,38957,23663,33216,33434,36929,36975,37389,24471,23965,27225,29128,30331,31561,34276,35588,37159,39472,21895,25078,63835,30313,32645,34367,34746,35064,37007,63836,27931,28889,29662,32097,33853,63837,37226,39409,63838,20098,21365,27396,27410,28734,29211,34349,40478,21068,36771,
23888,25829,25900,27414,28651,31811,32412,34253,35172,35261,25289,33240,34847,24266,26391,28010,29436,29701,29807,34690,37086,20358,23821,24480,33802,20919,25504,30053,20142,20486,20841,20937,26753,27153,31918,31921,31975,33391,35538,36635,37327,20406,20791,21237,21570,24300,24942,25150,26053,27354,28670,31018,34268,34851,38317,39522,39530,40599,40654,21147,26310,27511,28701,31019,36706,38722,24976,25088,25891,28451,29001,29833,32244,32879,34030,36646,36899,37706,20925,21015,21155,27916,28872,35010,
24265,25986,27566,28610,31806,29557,20196,20278,22265,63839,23738,23994,24604,29618,31533,32666,32718,32838,36894,37428,38646,38728,38936,40801,20363,28583,31150,37300,38583,21214,63840,25736,25796,27347,28510,28696,29200,30439,32769,34310,34396,36335,36613,38706,39791,40442,40565,30860,31103,32160,33737,37636,40575,40595,35542,22751,24324,26407,28711,29903,31840,32894,20769,28712,29282,30922,36034,36058,36084,38647,20102,20698,23534,24278,26009,29134,30274,30637,32842,34044,36988,39719,40845,22744,
23105,23650,27155,28122,28431,30267,32047,32311,34078,35128,37860,38475,21129,26066,26611,27060,27969,28316,28687,29705,29792,30041,30244,30827,35628,39006,20845,25134,38520,20374,20523,23833,28138,32184,36650,24459,24900,26647,63841,38534,21202,32907,20956,20940,26974,31260,32190,33777,38517,20442,21033,21400,21519,21774,23653,24743,26446,26792,28012,29313,29432,29702,29827,63842,30178,31852,32633,32696,33673,35023,35041,37324,37328,38626,39881,21533,28542,29136,29848,34298,36522,38563,40023,40607,
26519,28107,29747,33256,38678,30764,31435,31520,31890,25705,29802,30194,30908,30952,39340,39764,40635,23518,24149,28448,33180,33707,37E3,19975,21325,23081,24018,24398,24930,25405,26217,26364,28415,28459,28771,30622,33836,34067,34875,36627,39237,39995,21788,25273,26411,27819,33545,35178,38778,20129,22916,24536,24537,26395,32178,32596,33426,33579,33725,36638,37017,22475,22969,23186,23504,26151,26522,26757,27599,29028,32629,36023,36067,36993,39749,33032,35978,38476,39488,40613,23391,27667,29467,30450,
30431,33804,20906,35219,20813,20885,21193,26825,27796,30468,30496,32191,32236,38754,40629,28357,34065,20901,21517,21629,26126,26269,26919,28319,30399,30609,33559,33986,34719,37225,37528,40180,34946,20398,20882,21215,22982,24125,24917,25720,25721,26286,26576,27169,27597,27611,29279,29281,29761,30520,30683,32791,33468,33541,35584,35624,35980,26408,27792,29287,30446,30566,31302,40361,27519,27794,22818,26406,33945,21359,22675,22937,24287,25551,26164,26483,28218,29483,31447,33495,37672,21209,24043,25006,
25035,25098,25287,25771,26080,26969,27494,27595,28961,29687,30045,32326,33310,33538,34154,35491,36031,38695,40289,22696,40664,20497,21006,21563,21839,25991,27766,32010,32011,32862,34442,38272,38639,21247,27797,29289,21619,23194,23614,23883,24396,24494,26410,26806,26979,28220,28228,30473,31859,32654,34183,35598,36855,38753,40692,23735,24758,24845,25003,25935,26107,26108,27665,27887,29599,29641,32225,38292,23494,34588,35600,21085,21338,25293,25615,25778,26420,27192,27850,29632,29854,31636,31893,32283,
33162,33334,34180,36843,38649,39361,20276,21322,21453,21467,25292,25644,25856,26001,27075,27886,28504,29677,30036,30242,30436,30460,30928,30971,31020,32070,33324,34784,36820,38930,39151,21187,25300,25765,28196,28497,30332,36299,37297,37474,39662,39747,20515,20621,22346,22952,23592,24135,24439,25151,25918,26041,26049,26121,26507,27036,28354,30917,32033,32938,33152,33323,33459,33953,34444,35370,35607,37030,38450,40848,20493,20467,63843,22521,24472,25308,25490,26479,28227,28953,30403,32972,32986,35060,
35061,35097,36064,36649,37197,38506,20271,20336,24091,26575,26658,30333,30334,39748,24161,27146,29033,29140,30058,63844,32321,34115,34281,39132,20240,31567,32624,38309,20961,24070,26805,27710,27726,27867,29359,31684,33539,27861,29754,20731,21128,22721,25816,27287,29863,30294,30887,34327,38370,38713,63845,21342,24321,35722,36776,36783,37002,21029,30629,40009,40712,19993,20482,20853,23643,24183,26142,26170,26564,26821,28851,29953,30149,31177,31453,36647,39200,39432,20445,22561,22577,23542,26222,27493,
27921,28282,28541,29668,29995,33769,35036,35091,35676,36628,20239,20693,21264,21340,23443,24489,26381,31119,33145,33583,34068,35079,35206,36665,36667,39333,39954,26412,20086,20472,22857,23553,23791,23792,25447,26834,28925,29090,29739,32299,34028,34562,36898,37586,40179,19981,20184,20463,20613,21078,21103,21542,21648,22496,22827,23142,23386,23413,23500,24220,63846,25206,25975,26023,28014,28325,29238,31526,31807,32566,33104,33105,33178,33344,33433,33705,35331,36E3,36070,36091,36212,36282,37096,37340,
38428,38468,39385,40167,21271,20998,21545,22132,22707,22868,22894,24575,24996,25198,26128,27774,28954,30406,31881,31966,32027,33452,36033,38640,63847,20315,24343,24447,25282,23849,26379,26842,30844,32323,40300,19989,20633,21269,21290,21329,22915,23138,24199,24754,24970,25161,25209,26E3,26503,27047,27604,27606,27607,27608,27832,63848,29749,30202,30738,30865,31189,31192,31875,32203,32737,32933,33086,33218,33778,34586,35048,35513,35692,36027,37145,38750,39131,40763,22188,23338,24428,25996,27315,27567,
27996,28657,28693,29277,29613,36007,36051,38971,24977,27703,32856,39425,20045,20107,20123,20181,20282,20284,20351,20447,20735,21490,21496,21766,21987,22235,22763,22882,23057,23531,23546,23556,24051,24107,24473,24605,25448,26012,26031,26614,26619,26797,27515,27801,27863,28195,28681,29509,30722,31038,31040,31072,31169,31721,32023,32114,32902,33293,33678,34001,34503,35039,35408,35422,35613,36060,36198,36781,37034,39164,39391,40605,21066,63849,26388,63850,20632,21034,23665,25955,27733,29642,29987,30109,
31639,33948,37240,38704,20087,25746,27578,29022,34217,19977,63851,26441,26862,28183,33439,34072,34923,25591,28545,37394,39087,19978,20663,20687,20767,21830,21930,22039,23360,23577,23776,24120,24202,24224,24258,24819,26705,27233,28248,29245,29248,29376,30456,31077,31665,32724,35059,35316,35443,35937,36062,38684,22622,29885,36093,21959,63852,31329,32034,33394,29298,29983,29989,63853,31513,22661,22779,23996,24207,24246,24464,24661,25234,25471,25933,26257,26329,26360,26646,26866,29312,29790,31598,32110,
32214,32626,32997,33298,34223,35199,35475,36893,37604,40653,40736,22805,22893,24109,24796,26132,26227,26512,27728,28101,28511,30707,30889,33990,37323,37675,20185,20682,20808,21892,23307,23459,25159,25982,26059,28210,29053,29697,29764,29831,29887,30316,31146,32218,32341,32680,33146,33203,33337,34330,34796,35445,36323,36984,37521,37925,39245,39854,21352,23633,26964,27844,27945,28203,33292,34203,35131,35373,35498,38634,40807,21089,26297,27570,32406,34814,36109,38275,38493,25885,28041,29166,63854,22478,
22995,23468,24615,24826,25104,26143,26207,29481,29689,30427,30465,31596,32854,32882,33125,35488,37266,19990,21218,27506,27927,31237,31545,32048,63855,36016,21484,22063,22609,23477,23567,23569,24034,25152,25475,25620,26157,26803,27836,28040,28335,28703,28836,29138,29990,30095,30094,30233,31505,31712,31787,32032,32057,34092,34157,34311,35380,36877,36961,37045,37559,38902,39479,20439,23660,26463,28049,31903,32396,35606,36118,36895,23403,24061,25613,33984,36956,39137,29575,23435,24730,26494,28126,35359,
35494,36865,38924,21047,63856,28753,30862,37782,34928,37335,20462,21463,22013,22234,22402,22781,23234,23432,23723,23744,24101,24833,25101,25163,25480,25628,25910,25976,27193,27530,27700,27929,28465,29159,29417,29560,29703,29874,30246,30561,31168,31319,31466,31929,32143,32172,32353,32670,33065,33585,33936,34010,34282,34966,35504,35728,36664,36930,36995,37228,37526,37561,38539,38567,38568,38614,38656,38920,39318,39635,39706,21460,22654,22809,23408,23487,28113,28506,29087,29729,29881,32901,33789,24033,
24455,24490,24642,26092,26642,26991,27219,27529,27957,28147,29667,30462,30636,31565,32020,33059,33308,33600,34036,34147,35426,35524,37255,37662,38918,39348,25100,34899,36848,37477,23815,23847,23913,29791,33181,34664,28629,25342,32722,35126,35186,19998,20056,20711,21213,21319,25215,26119,32361,34821,38494,20365,21273,22070,22987,23204,23608,23630,23629,24066,24337,24643,26045,26159,26178,26558,26612,29468,30690,31034,32709,33940,33997,35222,35430,35433,35553,35925,35962,22516,23508,24335,24687,25325,
26893,27542,28252,29060,31698,34645,35672,36606,39135,39166,20280,20353,20449,21627,23072,23480,24892,26032,26216,29180,30003,31070,32051,33102,33251,33688,34218,34254,34563,35338,36523,36763,63857,36805,22833,23460,23526,24713,23529,23563,24515,27777,63858,28145,28683,29978,33455,35574,20160,21313,63859,38617,27663,20126,20420,20818,21854,23077,23784,25105,29273,33469,33706,34558,34905,35357,38463,38597,39187,40201,40285,22538,23731,23997,24132,24801,24853,25569,27138,28197,37122,37716,38990,39952,
40823,23433,23736,25353,26191,26696,30524,38593,38797,38996,39839,26017,35585,36555,38332,21813,23721,24022,24245,26263,30284,33780,38343,22739,25276,29390,40232,20208,22830,24591,26171,27523,31207,40230,21395,21696,22467,23830,24859,26326,28079,30861,33406,38552,38724,21380,25212,25494,28082,32266,33099,38989,27387,32588,40367,40474,20063,20539,20918,22812,24825,25590,26928,29242,32822,63860,37326,24369,63861,63862,32004,33509,33903,33979,34277,36493,63863,20335,63864,63865,22756,23363,24665,25562,
25880,25965,26264,63866,26954,27171,27915,28673,29036,30162,30221,31155,31344,63867,32650,63868,35140,63869,35731,37312,38525,63870,39178,22276,24481,26044,28417,30208,31142,35486,39341,39770,40812,20740,25014,25233,27277,33222,20547,22576,24422,28937,35328,35578,23420,34326,20474,20796,22196,22852,25513,28153,23978,26989,20870,20104,20313,63871,63872,63873,22914,63874,63875,27487,27741,63876,29877,30998,63877,33287,33349,33593,36671,36701,63878,39192,63879,63880,63881,20134,63882,22495,24441,26131,
63883,63884,30123,32377,35695,63885,36870,39515,22181,22567,23032,23071,23476,63886,24310,63887,63888,25424,25403,63889,26941,27783,27839,28046,28051,28149,28436,63890,28895,28982,29017,63891,29123,29141,63892,30799,30831,63893,31605,32227,63894,32303,63895,34893,36575,63896,63897,63898,37467,63899,40182,63900,63901,63902,24709,28037,63903,29105,63904,63905,38321,21421,63906,63907,63908,26579,63909,28814,28976,29744,33398,33490,63910,38331,39653,40573,26308,63911,29121,33865,63912,63913,22603,63914,
63915,23992,24433,63916,26144,26254,27001,27054,27704,27891,28214,28481,28634,28699,28719,29008,29151,29552,63917,29787,63918,29908,30408,31310,32403,63919,63920,33521,35424,36814,63921,37704,63922,38681,63923,63924,20034,20522,63925,21E3,21473,26355,27757,28618,29450,30591,31330,33454,34269,34306,63926,35028,35427,35709,35947,63927,37555,63928,38675,38928,20116,20237,20425,20658,21320,21566,21555,21978,22626,22714,22887,23067,23524,24735,63929,25034,25942,26111,26212,26791,27738,28595,28879,29100,
29522,31613,34568,35492,39986,40711,23627,27779,29508,29577,37434,28331,29797,30239,31337,32277,34314,20800,22725,25793,29934,29973,30320,32705,37013,38605,39252,28198,29926,31401,31402,33253,34521,34680,35355,23113,23436,23451,26785,26880,28003,29609,29715,29740,30871,32233,32747,33048,33109,33694,35916,38446,38929,26352,24448,26106,26505,27754,29579,20525,23043,27498,30702,22806,23916,24013,29477,30031,63930,63931,20709,20985,22575,22829,22934,23002,23525,63932,63933,23970,25303,25622,25747,25854,
63934,26332,63935,27208,63936,29183,29796,63937,31368,31407,32327,32350,32768,33136,63938,34799,35201,35616,36953,63939,36992,39250,24958,27442,28020,32287,35109,36785,20433,20653,20887,21191,22471,22665,23481,24248,24898,27029,28044,28263,28342,29076,29794,29992,29996,32883,33592,33993,36362,37780,37854,63940,20110,20305,20598,20778,21448,21451,21491,23431,23507,23588,24858,24962,26100,29275,29591,29760,30402,31056,31121,31161,32006,32701,33419,34261,34398,36802,36935,37109,37354,38533,38632,38633,
21206,24423,26093,26161,26671,29020,31286,37057,38922,20113,63941,27218,27550,28560,29065,32792,33464,34131,36939,38549,38642,38907,34074,39729,20112,29066,38596,20803,21407,21729,22291,22290,22435,23195,23236,23491,24616,24895,25588,27781,27961,28274,28304,29232,29503,29783,33489,34945,36677,36960,63942,38498,39E3,40219,26376,36234,37470,20301,20553,20702,21361,22285,22996,23041,23561,24944,26256,28205,29234,29771,32239,32963,33806,33894,34111,34655,34907,35096,35586,36949,38859,39759,20083,20369,
20754,20842,63943,21807,21929,23418,23461,24188,24189,24254,24736,24799,24840,24841,25540,25912,26377,63944,26580,26586,63945,26977,26978,27833,27943,63946,28216,63947,28641,29494,29495,63948,29788,30001,63949,30290,63950,63951,32173,33278,33848,35029,35480,35547,35565,36400,36418,36938,36926,36986,37193,37321,37742,63952,63953,22537,63954,27603,32905,32946,63955,63956,20801,22891,23609,63957,63958,28516,29607,32996,36103,63959,37399,38287,63960,63961,63962,63963,32895,25102,28700,32104,34701,63964,
22432,24681,24903,27575,35518,37504,38577,20057,21535,28139,34093,38512,38899,39150,25558,27875,37009,20957,25033,33210,40441,20381,20506,20736,23452,24847,25087,25836,26885,27589,30097,30691,32681,33380,34191,34811,34915,35516,35696,37291,20108,20197,20234,63965,63966,22839,23016,63967,24050,24347,24411,24609,63968,63969,63970,63971,29246,29669,63972,30064,30157,63973,31227,63974,32780,32819,32900,33505,33617,63975,63976,36029,36019,36999,63977,63978,39156,39180,63979,63980,28727,30410,32714,32716,
32764,35610,20154,20161,20995,21360,63981,21693,22240,23035,23493,24341,24525,28270,63982,63983,32106,33589,63984,34451,35469,63985,38765,38775,63986,63987,19968,20314,20350,22777,26085,28322,36920,37808,39353,20219,22764,22922,23001,24641,63988,63989,31252,63990,33615,36035,20837,21316,63991,63992,63993,20173,21097,23381,33471,20180,21050,21672,22985,23039,23376,23383,23388,24675,24904,28363,28825,29038,29574,29943,30133,30913,32043,32773,33258,33576,34071,34249,35566,36039,38604,20316,21242,22204,
26027,26152,28796,28856,29237,32189,33421,37196,38592,40306,23409,26855,27544,28538,30430,23697,26283,28507,31668,31786,34870,38620,19976,20183,21280,22580,22715,22767,22892,23559,24115,24196,24373,25484,26290,26454,27167,27299,27404,28479,29254,63994,29520,29835,31456,31911,33144,33247,33255,33674,33900,34083,34196,34255,35037,36115,37292,38263,38556,20877,21705,22312,23472,25165,26448,26685,26771,28221,28371,28797,32289,35009,36001,36617,40779,40782,29229,31631,35533,37658,20295,20302,20786,21632,
22992,24213,25269,26485,26990,27159,27822,28186,29401,29482,30141,31672,32053,33511,33785,33879,34295,35419,36015,36487,36889,37048,38606,40799,21219,21514,23265,23490,25688,25973,28404,29380,63995,30340,31309,31515,31821,32318,32735,33659,35627,36042,36196,36321,36447,36842,36857,36969,37841,20291,20346,20659,20840,20856,21069,21098,22625,22652,22880,23560,23637,24283,24731,25136,26643,27583,27656,28593,29006,29728,3E4,30008,30033,30322,31564,31627,31661,31686,32399,35438,36670,36681,37439,37523,
37666,37931,38651,39002,39019,39198,20999,25130,25240,27993,30308,31434,31680,32118,21344,23742,24215,28472,28857,31896,38673,39822,40670,25509,25722,34678,19969,20117,20141,20572,20597,21576,22979,23450,24128,24237,24311,24449,24773,25402,25919,25972,26060,26230,26232,26622,26984,27273,27491,27712,28096,28136,28191,28254,28702,28833,29582,29693,30010,30555,30855,31118,31243,31357,31934,32142,33351,35330,35562,35998,37165,37194,37336,37478,37580,37664,38662,38742,38748,38914,40718,21046,21137,21884,
22564,24093,24351,24716,25552,26799,28639,31085,31532,33229,34234,35069,35576,36420,37261,38500,38555,38717,38988,40778,20430,20806,20939,21161,22066,24340,24427,25514,25805,26089,26177,26362,26361,26397,26781,26839,27133,28437,28526,29031,29157,29226,29866,30522,31062,31066,31199,31264,31381,31895,31967,32068,32368,32903,34299,34468,35412,35519,36249,36481,36896,36973,37347,38459,38613,40165,26063,31751,36275,37827,23384,23562,21330,25305,29469,20519,23447,24478,24752,24939,26837,28121,29742,31278,
32066,32156,32305,33131,36394,36405,37758,37912,20304,22352,24038,24231,25387,32618,20027,20303,20367,20570,23005,32964,21610,21608,22014,22863,23449,24030,24282,26205,26417,26609,26666,27880,27954,28234,28557,28855,29664,30087,31820,32002,32044,32162,33311,34523,35387,35461,36208,36490,36659,36913,37198,37202,37956,39376,31481,31909,20426,20737,20934,22472,23535,23803,26201,27197,27994,28310,28652,28940,30063,31459,34850,36897,36981,38603,39423,33537,20013,20210,34886,37325,21373,27355,26987,27713,
33914,22686,24974,26366,25327,28893,29969,30151,32338,33976,35657,36104,20043,21482,21675,22320,22336,24535,25345,25351,25711,25903,26088,26234,26525,26547,27490,27744,27802,28460,30693,30757,31049,31063,32025,32930,33026,33267,33437,33463,34584,35468,63996,36100,36286,36978,30452,31257,31287,32340,32887,21767,21972,22645,25391,25634,26185,26187,26733,27035,27524,27941,28337,29645,29800,29857,30043,30137,30433,30494,30603,31206,32265,32285,33275,34095,34967,35386,36049,36587,36784,36914,37805,38499,
38515,38663,20356,21489,23018,23241,24089,26702,29894,30142,31209,31378,33187,34541,36074,36300,36845,26015,26389,63997,22519,28503,32221,36655,37878,38598,24501,25074,28548,19988,20376,20511,21449,21983,23919,24046,27425,27492,30923,31642,63998,36425,36554,36974,25417,25662,30528,31364,37679,38015,40810,25776,28591,29158,29864,29914,31428,31762,32386,31922,32408,35738,36106,38013,39184,39244,21049,23519,25830,26413,32046,20717,21443,22649,24920,24921,25082,26028,31449,35730,35734,20489,20513,21109,
21809,23100,24288,24432,24884,25950,26124,26166,26274,27085,28356,28466,29462,30241,31379,33081,33369,33750,33980,20661,22512,23488,23528,24425,25505,30758,32181,33756,34081,37319,37365,20874,26613,31574,36012,20932,22971,24765,34389,20508,63999,21076,23610,24957,25114,25299,25842,26021,28364,30240,33034,36448,38495,38587,20191,21315,21912,22825,24029,25797,27849,28154,29588,31359,33307,34214,36068,36368,36983,37351,38369,38433,38854,20984,21746,21894,24505,25764,28552,32180,36639,36685,37941,20681,
23574,27838,28155,29979,30651,31805,31844,35449,35522,22558,22974,24086,25463,29266,30090,30571,35548,36028,36626,24307,26228,28152,32893,33729,35531,38737,39894,64E3,21059,26367,28053,28399,32224,35558,36910,36958,39636,21021,21119,21736,24980,25220,25307,26786,26898,26970,27189,28818,28966,30813,30977,30990,31186,31245,32918,33400,33493,33609,34121,35970,36229,37218,37259,37294,20419,22225,29165,30679,34560,35320,23544,24534,26449,37032,21474,22618,23541,24740,24961,25696,32317,32880,34085,37507,
25774,20652,23828,26368,22684,25277,25512,26894,27E3,27166,28267,30394,31179,33467,33833,35535,36264,36861,37138,37195,37276,37648,37656,37786,38619,39478,39949,19985,30044,31069,31482,31569,31689,32302,33988,36441,36468,36600,36880,26149,26943,29763,20986,26414,40668,20805,24544,27798,34802,34909,34935,24756,33205,33795,36101,21462,21561,22068,23094,23601,28810,32736,32858,33030,33261,36259,37257,39519,40434,20596,20164,21408,24827,28204,23652,20360,20516,21988,23769,24159,24677,26772,27835,28100,
29118,30164,30196,30305,31258,31305,32199,32251,32622,33268,34473,36636,38601,39347,40786,21063,21189,39149,35242,19971,26578,28422,20405,23522,26517,27784,28024,29723,30759,37341,37756,34756,31204,31281,24555,20182,21668,21822,22702,22949,24816,25171,25302,26422,26965,33333,38464,39345,39389,20524,21331,21828,22396,64001,25176,64002,25826,26219,26589,28609,28655,29730,29752,35351,37944,21585,22022,22374,24392,24986,27470,28760,28845,32187,35477,22890,33067,25506,30472,32829,36010,22612,25645,27067,
23445,24081,28271,64003,34153,20812,21488,22826,24608,24907,27526,27760,27888,31518,32974,33492,36294,37040,39089,64004,25799,28580,25745,25860,20814,21520,22303,35342,24927,26742,64005,30171,31570,32113,36890,22534,27084,33151,35114,36864,38969,20600,22871,22956,25237,36879,39722,24925,29305,38358,22369,23110,24052,25226,25773,25850,26487,27874,27966,29228,29750,30772,32631,33453,36315,38935,21028,22338,26495,29256,29923,36009,36774,37393,38442,20843,21485,25420,20329,21764,24726,25943,27803,28031,
29260,29437,31255,35207,35997,24429,28558,28921,33192,24846,20415,20559,25153,29255,31687,32232,32745,36941,38829,39449,36022,22378,24179,26544,33805,35413,21536,23318,24163,24290,24330,25987,32954,34109,38281,38491,20296,21253,21261,21263,21638,21754,22275,24067,24598,25243,25265,25429,64006,27873,28006,30129,30770,32990,33071,33502,33889,33970,34957,35090,36875,37610,39165,39825,24133,26292,26333,28689,29190,64007,20469,21117,24426,24915,26451,27161,28418,29922,31080,34920,35961,39111,39108,39491,
21697,31263,26963,35575,35914,39080,39342,24444,25259,30130,30382,34987,36991,38466,21305,24380,24517,27852,29644,30050,30091,31558,33534,39325,20047,36924,19979,20309,21414,22799,24264,26160,27827,29781,33655,34662,36032,36944,38686,39957,22737,23416,34384,35604,40372,23506,24680,24717,26097,27735,28450,28579,28698,32597,32752,38289,38290,38480,38867,21106,36676,20989,21547,21688,21859,21898,27323,28085,32216,33382,37532,38519,40569,21512,21704,30418,34532,38308,38356,38492,20130,20233,23022,23270,
24055,24658,25239,26477,26689,27782,28207,32568,32923,33322,64008,64009,38917,20133,20565,21683,22419,22874,23401,23475,25032,26999,28023,28707,34809,35299,35442,35559,36994,39405,39608,21182,26680,20502,24184,26447,33607,34892,20139,21521,22190,29670,37141,38911,39177,39255,39321,22099,22687,34395,35377,25010,27382,29563,36562,27463,38570,39511,22869,29184,36203,38761,20436,23796,24358,25080,26203,27883,28843,29572,29625,29694,30505,30541,32067,32098,32291,33335,34898,64010,36066,37449,39023,23377,
31348,34880,38913,23244,20448,21332,22846,23805,25406,28025,29433,33029,33031,33698,37583,38960,20136,20804,21009,22411,24418,27842,28366,28677,28752,28847,29074,29673,29801,33610,34722,34913,36872,37026,37795,39336,20846,24407,24800,24935,26291,34137,36426,37295,38795,20046,20114,21628,22741,22778,22909,23733,24359,25142,25160,26122,26215,27627,28009,28111,28246,28408,28564,28640,28649,28765,29392,29733,29786,29920,30355,31068,31946,32286,32993,33446,33899,33983,34382,34399,34676,35703,35946,37804,
38912,39013,24785,25110,37239,23130,26127,28151,28222,29759,39746,24573,24794,31503,21700,24344,27742,27859,27946,28888,32005,34425,35340,40251,21270,21644,23301,27194,28779,30069,31117,31166,33457,33775,35441,35649,36008,38772,64011,25844,25899,30906,30907,31339,20024,21914,22864,23462,24187,24739,25563,27489,26213,26707,28185,29029,29872,32008,36996,39529,39973,27963,28369,29502,35905,38346,20976,24140,24488,24653,24822,24880,24908,26179,26180,27045,27841,28255,28361,28514,29004,29852,30343,31681,
31783,33618,34647,36945,38541,40643,21295,22238,24315,24458,24674,24724,25079,26214,26371,27292,28142,28590,28784,29546,32362,33214,33588,34516,35496,36036,21123,29554,23446,27243,37892,21742,22150,23389,25928,25989,26313,26783,28045,28102,29243,32948,37237,39501,20399,20505,21402,21518,21564,21897,21957,24127,24460,26429,29030,29661,36869,21211,21235,22628,22734,28932,29071,29179,34224,35347,26248,34216,21927,26244,29002,33841,21321,21913,27585,24409,24509,25582,26249,28999,35569,36637,40638,20241,
25658,28875,30054,34407,24676,35662,40440,20807,20982,21256,27958,33016,40657,26133,27427,28824,30165,21507,23673,32007,35350,27424,27453,27462,21560,24688,27965,32725,33288,20694,20958,21916,22123,22221,23020,23305,24076,24985,24984,25137,26206,26342,29081,29113,29114,29351,31143,31232,32690,35440,0];cmputil.euckrToUTF8=function(euckr){var iter;var utf8=[];for(iter=0;iter<euckr.length;++iter){var byte1;var byte2;byte1=euckr.charCodeAt(iter);if(0<=byte1&&byte1<128)utf8.push(String.fromCharCode(byte1));
else{var tableIndex=0;var cc;iter++;byte2=euckr.charCodeAt(iter);tableIndex=(byte1-161)*94+byte2-161;if(tableIndex<0||util.tableKSC5601.length<tableIndex){cc="?";yt.console.log("unknown euckr code ("+byte1+":"+byte2+")")}else cc=util.tableKSC5601[tableIndex];utf8.push(String.fromCharCode(cc))}}return utf8.join("")};cmputil.encodeEUCKR=function(utf8){var iter;var euckr=[];for(iter=0;iter<utf8.length;++iter){var ut;var byte1;var byte2;ut=utf8.charCodeAt(iter);if(0<=ut&&ut<128)euckr.push(String.fromCharCode(ut));
else{var tableIndex=0;var mod;tableIndex=util.tableKSC5601.indexOf(ut);if(tableIndex==-1){yt.console.log("unknown euckr code ("+ut+")");euckr.push("?");continue}mod=Math.floor(tableIndex/94);byte1=mod+161;byte2=tableIndex-mod*94+161;euckr.push(String.fromCharCode(byte1));euckr.push(String.fromCharCode(byte2))}}return euckr.join("")}})();(function(){var error=sofo.error||{};var err={key:0,code:0,msg_koKR:"",msg_enUS:"",internal:""};var errmap=[];error.ERROR_0=0;errmap[error.ERROR_0]={code:0,msg_koKR:"",msg_enUS:""};error.ERROR_1=1;errmap[error.ERROR_1]={code:1,msg_koKR:"error 1",msg_enUS:"error 1"};error.ERROR_INCORRECT_PWD=10000013;errmap[error.ERROR_INCORRECT_PWD]={code:128,msg_koKR:"\uc778\uc99d\uc11c \uc554\ud638\ub97c 3\ud68c\uc774\uc0c1 \uc2e4\ud328\ud558\uc600\uc2b5\ub2c8\ub2e4.",msg_enUS:"The certificate password failed more than three times."};
error.ERROR_DIFFRENT_PASSWORD=10000015;errmap[error.ERROR_DIFFRENT_PASSWORD]={code:0,msg_koKR:"\uc785\ub825\ud558\uc2e0 \ube44\ubc00\ubc88\ud638\uac00 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.",msg_enUS:"The passwords entered do not match."};error.ERROR_INPUT_LENGTH=10000016;errmap[error.ERROR_INPUT_LENGTH]={code:0,msg_koKR:"\ube44\ubc00\ubc88\ud638\ub294 \ucd5c\uc18c 8\uc790 \uc774\uc0c1 \ucd5c\ub300 16\uc790 \uc774\ud558\uc785\ub2c8\ub2e4.",msg_enUS:"Password is 16 characters or less more than 8 characters."};
error.ERROR_INCORRECT_PARAM=10000111;errmap[error.ERROR_INCORRECT_PARAM]={code:-800,msg_koKR:"\uc785\ub825\uac12\uc774 \uc62c\ubc14\ub974\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.",msg_enUS:"Incorrect Input parameters."};error.ERROR_PASSWORD_IS_WRONG=10000124;errmap[error.ERROR_PASSWORD_IS_WRONG]={code:0,msg_koKR:"\ube44\ubc00\ubc88\ud638\ub294 \ubb38\uc790\uc640 \uc22b\uc790\ub97c \uc870\ud569\ud574\uc57c \ud569\ub2c8\ub2e4.",msg_enUS:"The password needs to be at least 8 characters long and it must be alphanumeric."};
error.ERROR_CONFIRMED_PASSWORD_DOES_NOT_MATCH=10000135;errmap[error.ERROR_CONFIRMED_PASSWORD_DOES_NOT_MATCH]={code:0,msg_koKR:"\uc0c8 \ube44\ubc00\ubc88\ud638\uac00 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.",msg_enUS:"The passwords do not match."};error.ERROR_PASSWORD_MIX_DISIT_ALPHA_PUNCT=10000143;errmap[error.ERROR_PASSWORD_MIX_DISIT_ALPHA_PUNCT]={code:-1,msg_koKR:"\ube44\ubc00\ubc88\ud638\ub294 \ubb38\uc790/\uc22b\uc790/\ud2b9\uc218\uae30\ud638\ub97c \uc870\ud569\ud574\uc57c \ud569\ub2c8\ub2e4.",
msg_enUS:"The password is must be combined to characters/numbers/special characters."};error.ERROR_PASSWORD_NOT_ALLOW_CHARACTER=10000144;errmap[error.ERROR_PASSWORD_NOT_ALLOW_CHARACTER]={code:-1,msg_koKR:"\ube44\ubc00\ubc88\ud638\uc5d0\ub294 \ud2b9\uc218\ubb38\uc790 ' \" \\ |\ub97c \uc0ac\uc6a9\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.",msg_enUS:"The following special characters are not available. ' \" \\ |"};error.ERROR_INPUT_LENGTH_10=10000145;errmap[error.ERROR_INPUT_LENGTH_10]={code:-1,msg_koKR:"\ube44\ubc00\ubc88\ud638\ub294 \ucd5c\uc18c 10\uc790 \uc774\uc0c1 \ucd5c\ub300 56\uc790 \uc774\ud558\uc785\ub2c8\ub2e4.",
msg_enUS:"The password length should be from 10 to 56-characters"};error.ERROR_NOT_SUPPORTED_MEDIA=10000150;errmap[error.ERROR_NOT_SUPPORTED_MEDIA]={code:-2010,msg_koKR:"\uc9c0\uc6d0\ud558\uc9c0 \uc54a\ub294 \uc800\uc7a5\ub9e4\uccb4\uc785\ub2c8\ub2e4.",msg_enUS:"Unsupported media"};error.ERROR_REQUESTCERT=21000001;errmap[error.ERROR_REQUESTCERT]={code:0,msg_koKR:"\uc778\uc99d\uc11c \ubc1c\uae09 \uc694\uad6c\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.",msg_enUS:"fail to generate cert request !"};error.ERROR_RENEWCERT=
21000002;errmap[error.ERROR_RENEWCERT]={code:0,msg_koKR:"\uc778\uc99d\uc11c \uac31\uc2e0 \uc694\uad6c\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.",msg_enUS:"fail to generate cert renew !"};error.ERROR_RECOVERCERT=21000003;errmap[error.ERROR_RECOVERCERT]={code:0,msg_koKR:"\uc778\uc99d\uc11c \ubcf5\uad6c \uc694\uad6c\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.",msg_enUS:"fail to generate cert restore !"};error.ERROR_REVOKECERT=21000004;errmap[error.ERROR_REVOKECERT]={code:0,msg_koKR:"\uc778\uc99d\uc11c \ud3d0\uae30 \uc694\uad6c\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.",
msg_enUS:"fail to revoke cert !"};error.ERROR_DELETECERT=21000005;errmap[error.ERROR_DELETECERT]={code:0,msg_koKR:"\uc778\uc99d\uc11c \uc0ad\uc81c \uc694\uad6c\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.",msg_enUS:"fail to delete cert !"};error.ERROR_CHANGECERTPASSWORD=21000006;errmap[error.ERROR_CHANGECERTPASSWORD]={code:0,msg_koKR:"\uc778\uc99d\uc11c \ube44\ubc00\ubc88\ud638 \ubcc0\uacbd \uc694\uad6c\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.",msg_enUS:"fail to change password of certificate !"};
error.ERROR_EXPORTCERT=21000007;errmap[error.ERROR_EXPORTCERT]={code:0,msg_koKR:"\uc778\uc99d\uc11c \ub0b4\ubcf4\ub0b4\uae30 \uc694\uad6c\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.",msg_enUS:"fail to export certificate !"};error.ERROR_SAVECERT=21000009;errmap[error.ERROR_SAVECERT]={code:0,msg_koKR:"\uc778\uc99d\uc11c \ubcf5\uc0ac \uc694\uad6c\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.",msg_enUS:"failed to copy certificate !"};error.ERROR_PFX_CERT_IMPORT_FAIL=21000015;errmap[error.ERROR_PFX_CERT_IMPORT_FAIL]=
{code:-1,msg_koKR:"PFX \uc778\uc99d\uc11c \uac00\uc838\uc624\uae30 \uc694\uad6c\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.",msg_enUS:"fail to PFX import certificate."};error.ERROR_USE_CERT_FAIL=21000016;errmap[error.ERROR_USE_CERT_FAIL]={code:-1,msg_koKR:"\uc0ac\uc6a9\ud560 \uc218 \uc5c6\ub294 \uc778\uc99d\uc11c \uc785\ub2c8\ub2e4.",msg_enUS:"Not use certificate."};error.ERROR_ENCRYPT_PRIKEY=21000801;errmap[error.ERROR_ENCRYPT_PRIKEY]={code:0,msg_koKR:"\uac1c\uc778\ud0a4 \uc554\ud638\ud654\uc5d0 \uc2e4\ud328\ud558\uc600\uc2b5\ub2c8\ub2e4.",
msg_enUS:"Fail to encrypt the private key."};error.ERROR_DECRYPT_PRIKEY=21000802;errmap[error.ERROR_DECRYPT_PRIKEY]={code:0,msg_koKR:"\uac1c\uc778\ud0a4 \ubcf5\ud638\ud654\uc5d0 \uc2e4\ud328\ud558\uc600\uc2b5\ub2c8\ub2e4.",msg_enUS:"Fail to decrypt the private key."};error.ERROR_VERIFYCERT=22000001;errmap[error.ERROR_VERIFYCERT]={code:0,msg_koKR:"\uc778\uc99d\uc11c \uac80\uc99d \uc694\uad6c\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.",msg_enUS:"Failed to verify the certificate request."};error.ERROR_VERIFYCERTOWNER=
22000002;errmap[error.ERROR_VERIFYCERTOWNER]={code:0,msg_koKR:"\uc778\uc99d\uc11c \uc18c\uc720\uc790 \uac80\uc99d \uc694\uad6c\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.",msg_enUS:"Failed to verify the certificate owner"};error.ERROR_GETCERT=22000004;errmap[error.ERROR_GETCERT]={code:-1,msg_koKR:"\uc778\uc99d\uc11c \ucc3e\uae30\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.",msg_enUS:"Failed to find certificate."};error.ERROR_GETCERTTREE=22000005;errmap[error.ERROR_GETCERTTREE]={code:0,msg_koKR:"\uc778\uc99d\uc11c \ud2b8\ub9ac \ucc3e\uae30\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.",
msg_enUS:"Failed to certificate tree search."};error.ERROR_VERIFYPASSWORD=22000006;errmap[error.ERROR_VERIFYPASSWORD]={code:0,msg_koKR:"\uc778\uc99d\uc11c \ube44\ubc00\ubc88\ud638 \uac80\uc99d \uc694\uad6c\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.",msg_enUS:"Failed password verification certificate required."};error.ERROR_GETCERTIFICATE=22000007;errmap[error.ERROR_GETCERTIFICATE]={code:0,msg_koKR:"\uc778\uc99d\uc11c \ucc3e\uae30\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.",msg_enUS:"Failed to find certificate"};
error.ERROR_INCORRECT_PASSWORD=22000013;errmap[error.ERROR_INCORRECT_PASSWORD]={code:-1312,msg_koKR:"\uc778\uc99d\uc11c \uc554\ud638\uac00 \uc62c\ubc14\ub974\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc778\uc99d\uc11c \uc554\ud638\ub294 \ub300\ubb38\uc790 \uc18c\ubb38\uc790\ub97c \uad6c\ubd84\ud569\ub2c8\ub2e4. <Caps Lock>\ud0a4\uac00 \ucf1c\uc838 \uc788\ub294\uc9c0 \ud655\uc778\ud558\uc2dc\uace0 \ub2e4\uc2dc \uc785\ub825\ud558\uc2ed\uc2dc\uc624.",msg_enUS:"The password is incorrect. Letters in passwords must be typed using the correct case. Make sure that <Caps Lock> is not on and retype your password."};
error.ERROR_IINCORRECT_PASSWORD_KMCERT=22000015;errmap[error.ERROR_IINCORRECT_PASSWORD_KMCERT]={code:22000015,msg_koKR:"\uc554\ud638\ud654\uc6a9 \uc778\uc99d\uc11c \ube44\ubc00\ubc88\ud638\uac00 \uc62c\ubc14\ub974\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.",msg_enUS:"Encryption certificate password is incorrect."};error.ERROR_PKCS8_NO_VID=23000102;errmap[error.ERROR_PKCS8_NO_VID]={code:-1400,msg_koKR:"\uc778\uc99d\uc11c\uc5d0\uc11c \uc8fc\ubbfc\ub4f1\ub85d(\uc0ac\uc5c5\uc790\ub4f1\ub85d)\ubc88\ud638 \uc815\ubcf4\ub97c \uac00\uc838\uc62c \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.",
msg_enUS:"Cannot retrieve the information for identification from certificate."};error.ERROR_PKCS8_NO_RANDOM=23000104;errmap[error.ERROR_PKCS8_NO_RANDOM]={code:-1403,msg_koKR:"\ub79c\ub364\uac12\uc744 \uad6c\ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.",msg_enUS:"Fail to generate the random number."};error.ERROR_CREATE_SIGNDATA=24000003;errmap[error.ERROR_CREATE_SIGNDATA]={code:0,msg_koKR:"\uc804\uc790\uc11c\uba85 \ub370\uc774\ud130 \uc0dd\uc131 \uc694\uccad\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.",
msg_enUS:"Failed to generate requests for signature data."};error.ERROR_GETPLAINDATAOFSIGNDATA=24000004;errmap[error.ERROR_GETPLAINDATAOFSIGNDATA]={code:0,msg_koKR:"\uc804\uc790\uc11c\uba85 \ub370\uc774\ud130\ub97c \ud3c9\ubb38\uc73c\ub85c \ubcc0\ud658\ud558\ub294 \uc694\uccad\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.",msg_enUS:"Request to convert digital signature data to plain text failed."};error.ERROR_HASHDATA=24000005;errmap[error.ERROR_HASHDATA]={code:0,msg_koKR:"\ud574\uc26c\ub370\uc774\ud130 \uc0dd\uc131 \uc694\uccad\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.",
msg_enUS:"Request to generate hash data failed."};error.ERROR_SETENVELOPIDNUM=24000007;errmap[error.ERROR_SETENVELOPIDNUM]={code:-1401,msg_koKR:"\uc8fc\ubbfc\ub4f1\ub85d(\uc0ac\uc5c5\uc790\ub4f1\ub85d)\ubc88\ud638 \uc815\ubcf4\ub97c \uc554\ud638\ud654 \ud560 \uc218 \uc5c6\uc2b5\ub2c8\ub2e4.",msg_enUS:"Cannot encrypt the information for identification."};error.ERROR_SETIDNUM=24000008;errmap[error.ERROR_SETIDNUM]={code:0,msg_koKR:"\uc8fc\ubbfc\ub4f1\ub85d(\uc0ac\uc5c5\uc790\ub4f1\ub85d)\ubc88\ud638 \uc124\uc815\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.",
msg_enUS:"Cannot encrypt the information for identification."};error.ERROR_GETENVELOPIDNUM=24000009;errmap[error.ERROR_GETENVELOPIDNUM]={code:0,msg_koKR:"\uc554\ud638\ud654\ub41c \uc8fc\ubbfc\ub4f1\ub85d(\uc0ac\uc5c5\uc790\ub4f1\ub85d)\ubc88\ud638 \uc0dd\uc131\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4.",msg_enUS:"Cannot encrypt the information for identification."};error.ERROR_ENVELOP_FAIL=24000401;errmap[error.ERROR_ENVELOP_FAIL]={code:-1602,msg_koKR:"\uc554\ud638\ud654\uc5d0 \uc2e4\ud328\ud558\uc600\uc2b5\ub2c8\ub2e4.",
msg_enUS:"Envelop Failed"};error.ERROR_DEENVELOP_FAIL=24000403;errmap[error.ERROR_DEENVELOP_FAIL]={code:-1604,msg_koKR:"\uc554\ud638\ud654\ub41c \ub370\uc774\ud130 \ubcf5\ud638\ud654\uc5d0 \uc2e4\ud328\ud558\uc600\uc2b5\ub2c8\ub2e4.",msg_enUS:"Deenvelop Failed"};error.ERROR_SIGN_DUPLICATE_CERT=24000538;errmap[error.ERROR_SIGN_DUPLICATE_CERT]={code:-1,msg_koKR:"\ub3d9\uc77c\ud55c \uc778\uc99d\uc11c\ub85c \uc774\ubbf8 \uc11c\uba85\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\ub978 \uc778\uc99d\uc11c\ub97c \uc120\ud0dd\ud574 \uc8fc\uc2ed\uc2dc\uc624.",
msg_enUS:"The selected certificate is already used for signature. Please, select different certificate."};error.ERROR_CERT_EXPIRED=30043034;errmap[error.ERROR_CERT_EXPIRED]={code:43034,msg_koKR:"cert is expired",msg_enUS:"cert is expired"};error.setError=function(key,code,msg1,msg2,internal){if(typeof key==="number"){err.key=key;if(typeof code==="number"){err.code=code;err.msg_koKR=msg1?msg1:"";err.msg_enUS=msg2?msg2:"";err.internal=internal?internal:""}else{err.internal=code?code:"";if(errmap[key]){err.code=
errmap[key].code?errmap[key].code:0;err.msg_koKR=errmap[key].msg_koKR?errmap[key].msg_koKR:"";err.msg_enUS=errmap[key].msg_enUS?errmap[key].msg_enUS:""}else{err.code=0;err.msg_koKR="";err.msg_enUS=""}}}else{err.key=0;err.code=0;err.msg_koKR=key;err.msg_enUS=key;err.internal=key}};error.resetError=function(){err.key=0;err.code=0;err.msg_koKR="";err.msg_enUS="";err.internal=""};error.getError=function(){return err}})();(function(){var storage=sofo.storage;var xfs=sofo.xfs=sofo.xfs||{};var error=xfs.error=xfs.error||{};var mServiceURL="";var mServiceKey="";var mAsyncOption=3;var mAsyncDelay=true;var mAsyncDelayTime=1E3;var mGuideModule=null;var XW_SECUREINPUT_NATIVEINPUT=0;var XW_SECUREINPUT_XECUREKEYPADE2E=16;var secureInput=null;xfs.init=function(svcURL,svcKey,asyncOpt,guideUIFunc){mServiceURL=svcURL;mServiceKey=svcKey;mAsyncOption=asyncOpt;if(guideUIFunc)mGuideModule=guideUIFunc};xfs._setSecureInput=function(aInput){secureInput=
aInput};function _getKeyword(aInput){if(aInput==undefined||aInput==null||aInput=="")return"";if(secureInput==-1)return escape_url(aInput);var inputArray=aInput.split("$");if(inputArray.length<2)return escape_url(inputArray[0]);if(inputArray[0]==XW_SECUREINPUT_NATIVEINPUT)return escape_url(inputArray[1]);if(inputArray[0]==XW_SECUREINPUT_XECUREKEYPADE2E){var xkeypad=inputArray[1].split("|");return escape_url(xkeypad[2])+"&keypadType=XECUREKEYPAD&keypadSessionId="+escape_url(xkeypad[0])+"&keypadSessionToken="+
escape_url(xkeypad[1])}return escape_url(inputArray[0])}function _decryptKeyword(aInput,aNum){if(!aInput)return null;if(!secureInput)return aInput;var aType=-1;var aValue="";if(typeof aInput==="string"){var aIndex=aInput.indexOf("$");if(aIndex==-1)return null;aType=parseInt(aInput.substring(0,aIndex));if(aInput.length>aIndex+1)aValue=aInput.substring(aIndex+1)}else return null;var sInput=secureInput.split("$");var sType=0;var sData="";var aFind=false;for(var i=0;i<sInput.length;i++){var aIndex=sInput[i].indexOf("|");
if(aIndex==-1)sType=parseInt(sInput[i]);else{sType=parseInt(sInput[i].substring(0,aIndex));if(sInput[i].length>aIndex+1)sData=sInput[i].substring(aIndex+1)}if(sType==aType){aFind=true;break}}if(!aFind)return null;if(aType==XW_SECUREINPUT_NATIVEINPUT)return escape_url(aValue);else if(aType==XW_SECUREINPUT_XECUREKEYPADE2E){var xkeypad=aValue.split("|");if(aNum)return escape_url(xkeypad[2])+"&keypadType=XECUREKEYPAD&keypadSessionId"+aNum+"="+escape_url(xkeypad[0])+"&keypadSessionToken"+aNum+"="+escape_url(xkeypad[1]);
else return escape_url(xkeypad[2])+"&keypadType=XECUREKEYPAD&keypadSessionId="+escape_url(xkeypad[0])+"&keypadSessionToken="+escape_url(xkeypad[1])}else return null}function escape_url(aUrl){return encodeURIComponent(aUrl)}function _setAccessToken(token){storage.setSessionStorage("xfs_token",token)}function _getAccessToken(){var token=storage.getSessionStorage("xfs_token");if(token)return"&xfsAccessToken="+token;else return""}function _getAsyncOption(aOption){switch(mAsyncOption){case 0:return true;
case 1:return false;case 2:if(aOption)return aOption;else break;case 3:return mAsyncDelay;default:}return true}function _http(aUrl,aMsg,aAsync,aCallback){var asyncOpt=aAsync;var startTime,endTime;var req;if(window.XMLHttpRequest)req=new window.XMLHttpRequest;else if(aCallback){aCallback("");return-1}else return"";try{req.open("POST",aUrl,aAsync)}catch(e){asyncOpt=true;req.open("POST",aUrl,asyncOpt)}if(req.withCredentials!=undefined)req.withCredentials=true;if(asyncOpt){var guideDialog=null;if(mGuideModule&&
aAsync){guideDialog=mGuideModule({type:"",args:"",onconfirm:"",oncancel:function(){guideDialog.dispose()}});guideDialog.show()}req.onreadystatechange=function(aEvt){if(req.readyState==4){endTime=(new Date).getTime();if(endTime-startTime<mAsyncDelayTime)mAsyncDelay=false;if(guideDialog){guideDialog.dispose();guideDialog=null}if(req.status==200)aCallback(req.responseText);else aCallback(req.responseText)}}}req.setRequestHeader("Content-type","application/x-www-form-urlencoded");startTime=(new Date).getTime();
req.send(aMsg);if(asyncOpt)return 0;else if(aCallback){aCallback(req.responseText);return 0}else return req.responseText}function _callAPI(aApi,aMsg,async,aCallback){if(!mServiceURL||!mServiceKey){error.setError(error.ERROR_INVALID_PARAM);if(aCallback)aCallback(-1);return-1}var aUrl=mServiceURL+(mServiceURL.charAt(mServiceURL.length-1)=="/"?"":"/")+aApi;function returnAPI(aResponse){if(!aResponse){error.setError(error.ERROR_SERVER_CONNECT_FAIL);return-1}var aResult=JSON.parse(aResponse);if(aResult.code!=
200)error.setError(Number(aResult.detailCode),aResult.code,aResult.message,aResult.detailCode,aResult.detailMessage);return aResult}if(aCallback){var callbackFunc=function(aResult){aCallback(returnAPI(aResult))};return _http(aUrl,aMsg,async,callbackFunc)}else{var aResult=_http(aUrl,aMsg,false);return returnAPI(aResult)}}var err={key:0,msg_koKR:"",msg_enUS:"",code:0,message:"Success",detailCode:0,detailMessage:""};var errmap=[];var error={};error.ERROR_0=0;errmap[error.ERROR_0]={msg_koKR:"",msg_enUS:""};
error.ERROR_INVALID_PARAM=-1;errmap[error.ERROR_INVALID_PARAM]={msg_koKR:"invalid param",msg_enUS:"invalid param"};error.ERROR_SERVER_CONNECT_FAIL=400;errmap[error.ERROR_SERVER_CONNECT_FAIL]={msg_koKR:"\uc11c\ubc84 \uc811\uc18d\uc5d0 \uc2e4\ud328\ud558\uc600\uc2b5\ub2c8\ub2e4. \uc7a0\uc2dc \ud6c4 \ub2e4\uc2dc \uc2dc\ub3c4\ud574 \uc8fc\uc138\uc694.",msg_enUS:"Server connection failed. Please try again in a few minutes."};error.ERROR_NOT_LOGIN=1879376156;errmap[error.ERROR_NOT_LOGIN]={msg_koKR:"\uc11c\ubc84\uc640\uc758 \uc5f0\uacb0\uc774 \ub04a\uc5b4\uc84c\uc2b5\ub2c8\ub2e4. \ub2e4\uc2dc \ub85c\uadf8\uc778 \ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4.",
msg_enUS:"The connection to the server has been lost. Please login again."};error.ERROR_USER_LOGIN_NOT_FOUND_USERID=1677787420;errmap[error.ERROR_USER_LOGIN_NOT_FOUND_USERID]={msg_koKR:"\uc785\ub825\ud55c \uc544\uc774\ub514\uac00 \uc874\uc7ac\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc544\uc774\ub514\ub97c \ub2e4\uc2dc \ud55c\ubc88 \uc785\ub825\ud574 \uc8fc\uc138\uc694.",msg_enUS:"The ID you entered does not exist. Please enter your ID again."};error.ERROR_USER_LOGIN_INVALID_USERID=1677856784;errmap[error.ERROR_USER_LOGIN_INVALID_USERID]=
{msg_koKR:"\uc785\ub825\ud55c \uc544\uc774\ub514\uac00 \uc720\ud6a8\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \uc544\uc774\ub514\ub97c \ub2e4\uc2dc \ud55c\ubc88 \uc785\ub825\ud574 \uc8fc\uc138\uc694.",msg_enUS:"The ID you entered is not valid. Please enter your ID again."};error.ERROR_USER_LOGIN_INVALID_PASSWD=1677856783;errmap[error.ERROR_USER_LOGIN_INVALID_PASSWD]={msg_koKR:"\uc785\ub825\ud55c \ube44\ubc00\ubc88\ud638\uac00 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ube44\ubc00\ubc88\ud638\ub97c \ub2e4\uc2dc \ud55c\ubc88 \uc785\ub825\ud574 \uc8fc\uc138\uc694.",
msg_enUS:"The password you entered does not match. Please enter your password again."};error.ERROR_USER_LOGIN_INVALID_PASSWD1=1678311724;errmap[error.ERROR_USER_LOGIN_INVALID_PASSWD1]={msg_koKR:"\uc785\ub825\ud55c \ube44\ubc00\ubc88\ud638\uac00 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4. \ube44\ubc00\ubc88\ud638\ub97c \ub2e4\uc2dc \ud55c\ubc88 \uc785\ub825\ud574 \uc8fc\uc138\uc694.",msg_enUS:"The password you entered does not match. Please enter your password again."};error.ERROR_USER_LOGIN_INVALID_PASSWD2=
1678508328;errmap[error.ERROR_USER_LOGIN_INVALID_PASSWD2]={msg_koKR:"2\ucc28 \uc778\uc99d \ube44\ubc00\ubc88\ud638\uac00 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.\n2\ucc28 \uc778\uc99d \ube44\ubc00\ubc88\ud638\ub97c \ub2e4\uc2dc \uc785\ub825\ud558\uac70\ub098 \uc778\uc99d\ubc88\ud638 \uc7ac\uc694\uccad \ud6c4 2\ucc28 \uc778\uc99d \ube44\ubc00\ubc88\ud638\ub97c \ub2e4\uc2dc \ud55c\ubc88 \uc785\ub825\ud574 \uc8fc\uc138\uc694.",msg_enUS:"Secondary authentication code do not match.\nPlease re-enter your secondary verification code or request your secondary verification again and enter your secondary verification code."};
error.ERROR_USER_LOGIN_EXPIRED_PASSWD2=1678508316;errmap[error.ERROR_USER_LOGIN_EXPIRED_PASSWD2]={msg_koKR:"2\ucc28 \uc778\uc99d\ubc88\ud638\ub97c \uc694\uccad\ud558\uc9c0 \uc54a\uc558\uac70\ub098 \uc778\uc99d \ube44\ubc00\ubc88\ud638\uac00 \ub9cc\ub8cc\ub418\uc5c8\uc2b5\ub2c8\ub2e4.\n\uc778\uc99d\ubc88\ud638 \uc7ac\uc694\uccad \ud6c4 2\ucc28 \uc778\uc99d \ube44\ubc00\ubc88\ud638\ub97c \ub2e4\uc2dc \ud55c\ubc88 \uc785\ub825\ud574 \uc8fc\uc138\uc694.",msg_enUS:"You did not request a secondary verification number or your authentication password has expired.\nAfter re-requesting the authentication number, please enter the second authentication password again."};
error.ERROR_CERT_PASSWORD_CONFIRM_INVALID_PASSWD=1694633999;errmap[error.ERROR_CERT_PASSWORD_CONFIRM_INVALID_PASSWD]={msg_koKR:"\uc785\ub825\ud55c \ube44\ubc00\ubc88\ud638\uac00 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.",msg_enUS:"The password you entered does not match."};error.ERROR_CERT_PASSWORD_CONFIRM_INVALID_PASSWD1=822608172;errmap[error.ERROR_CERT_PASSWORD_CONFIRM_INVALID_PASSWD1]={msg_koKR:"\uc785\ub825\ud55c \ube44\ubc00\ubc88\ud638\uac00 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.",
msg_enUS:"The password you entered does not match."};error.ERROR_CERT_PASSWORD_UPDATE_FAIL=1694634009;errmap[error.ERROR_CERT_PASSWORD_UPDATE_FAIL]={msg_koKR:"\uc785\ub825\ud55c \ube44\ubc00\ubc88\ud638\uac00 \uc62c\ubc14\ub974\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.",msg_enUS:"The password you entered is incorrect."};error.ERROR_CERT_PASSWORD_UPDATE_FAIL1=1694630176;errmap[error.ERROR_CERT_PASSWORD_UPDATE_FAIL1]={msg_koKR:"\uc785\ub825\ud55c \ube44\ubc00\ubc88\ud638\uac00 \uc62c\ubc14\ub974\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.",
msg_enUS:"The password you entered is incorrect."};error.ERROR_CERT_SIGN_INVALID_PASSWD=1627717915;errmap[error.ERROR_CERT_SIGN_INVALID_PASSWD]={msg_koKR:"\uc785\ub825\ud55c \ube44\ubc00\ubc88\ud638\uac00 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.",msg_enUS:"The password you entered does not match."};error.ERROR_CERT_PFX_EXPORT_INVALID_PASSWD=1695220012;errmap[error.ERROR_CERT_PFX_EXPORT_INVALID_PASSWD]={msg_koKR:"\uc785\ub825\ud55c \ube44\ubc00\ubc88\ud638\uac00 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.",
msg_enUS:"The password you entered does not match."};error.ERROR_CERT_PFX_IMPORT_INVALID_PASSWD=1694765071;errmap[error.ERROR_CERT_PFX_IMPORT_INVALID_PASSWD]={msg_koKR:"\uc785\ub825\ud55c \ube44\ubc00\ubc88\ud638\uac00 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.",msg_enUS:"The password you entered does not match."};error.ERROR_CERT_PFX_IMPORT_CERT_ALREADY_EXIST=1694564623;errmap[error.ERROR_CERT_PFX_IMPORT_CERT_ALREADY_EXIST]={msg_koKR:"\ub4f1\ub85d\ub41c \uc778\uc99d\uc11c \uc815\ubcf4\uac00 \uc874\uc7ac\ud569\ub2c8\ub2e4.",
msg_enUS:"Registered certificate information exists."};error.ERROR_CERT_PFX_IMPORT_CERT_EXPIRED=1695023393;errmap[error.ERROR_CERT_PFX_IMPORT_CERT_EXPIRED]={msg_koKR:"\uc720\ud6a8\uae30\uac04\uc774 \ub9cc\ub8cc\ub41c \uc778\uc99d\uc11c \uc785\ub2c8\ub2e4.",msg_enUS:"The certificate has expired."};error.ERROR_CERT_PFX_IMPORT_CERT_VERIFY_ERROR=1695285531;errmap[error.ERROR_CERT_PFX_IMPORT_CERT_VERIFY_ERROR]={msg_koKR:"\uc778\uc99d\uc11c \uac80\uc99d\uc5d0 \uc2e4\ud328\ud558\uc600\uc2b5\ub2c8\ub2e4.",
msg_enUS:"Certificate validation failed."};error.ERROR_CERT_PFX_IMPORT_CERT_DECODE_ERROR=1695416600;errmap[error.ERROR_CERT_PFX_IMPORT_CERT_DECODE_ERROR]={msg_koKR:"\uc720\ud6a8\ud558\uc9c0 \uc54a\ub294 \uc778\uc99d\uc11c \uc785\ub2c8\ub2e4.",msg_enUS:"Invalid certificate."};error.ERROR_UNKNOWN=9999;errmap[error.ERROR_UNKNOWN]={msg_koKR:"\uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uc600\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4.",msg_enUS:"An error has occurred. Please contact your administrator."};
error.ERROR_USER_LOGIN=1;errmap[error.ERROR_USER_LOGIN]={msg_koKR:"\ub85c\uadf8\uc778 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uc600\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4.",msg_enUS:"There was an error signing in. Please contact your administrator."};error.ERROR_USER_LOGOUT=2;errmap[error.ERROR_USER_LOGOUT]={msg_koKR:"\ub85c\uadf8\uc544\uc6c3 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uc600\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4.",
msg_enUS:"There was an error signing out. Please contact your administrator."};error.ERROR_USER_EXTENSION=3;errmap[error.ERROR_USER_EXTENSION]={msg_koKR:"\uc11c\ubc84 \uc811\uc18d \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uc600\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4.",msg_enUS:"There was an error connecting to the server. Please contact your administrator."};error.ERROR_OTP_REQUEST=4;errmap[error.ERROR_OTP_REQUEST]={msg_koKR:"\uc778\uc99d\ubc88\ud638 \uc694\uccad \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uc600\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4.",
msg_enUS:"There was an error requesting your verification number. Please contact your administrator."};error.ERROR_OTP_VALID=5;errmap[error.ERROR_OTP_VALID]={msg_koKR:"\uc778\uc99d\ubc88\ud638 \uc694\uccad \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uc600\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4.",msg_enUS:"An error occurred while verifying the verification number. Please contact your administrator."};error.ERROR_CERT_LIST=6;errmap[error.ERROR_CERT_LIST]=
{msg_koKR:"\uc778\uc99d\uc11c \ub9ac\uc2a4\ud2b8 \uac80\uc0c9 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uc600\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4.",msg_enUS:"An error occurred while retrieving the certificate list. Please contact your administrator."};error.ERROR_CERT_DETAIL=7;errmap[error.ERROR_CERT_DETAIL]={msg_koKR:"\uc778\uc99d\uc11c \uc815\ubcf4 \uac80\uc0c9 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uc600\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4.",
msg_enUS:"An error occurred while retrieving certificate information. Please contact your administrator."};error.ERROR_CREATE_SIGNDATA=24000003;errmap[error.ERROR_CREATE_SIGNDATA]={msg_koKR:"\uc804\uc790\uc11c\uba85 \ub370\uc774\ud130 \uc0dd\uc131 \uc694\uccad\uc5d0 \uc2e4\ud328\ud588\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4.",msg_enUS:"Failed to generate requests for signature data. Please contact your administrator."};error.ERROR_CERT_DELETE=
8;errmap[error.ERROR_CERT_DELETE]={msg_koKR:"\uc778\uc99d\uc11c \uc0ad\uc81c \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uc600\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4.",msg_enUS:"There was an error deleting the certificate. Please contact your administrator."};error.ERROR_CERT_PWD_CONFIRM=9;errmap[error.ERROR_CERT_PWD_CONFIRM]={msg_koKR:"\uc778\uc99d\uc11c \ube44\ubc00\ubc88\ud638 \uac80\uc99d \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uc600\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4.",
msg_enUS:"An error occurred while verifying the certificate password. Please contact your administrator."};error.ERROR_CERT_PWD_UPDATE=10;errmap[error.ERROR_CERT_PWD_UPDATE]={msg_koKR:"\uc778\uc99d\uc11c \ube44\ubc00\ubc88\ud638 \ubcc0\uacbd \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uc600\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4.",msg_enUS:"An error occurred while changing the certificate password. Please contact your administrator."};
error.ERROR_CERT_PFX_EXPORT=11;errmap[error.ERROR_CERT_PFX_EXPORT]={msg_koKR:"\uc778\uc99d\uc11c \ub0b4\ubcf4\ub0b4\uae30 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uc600\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4.",msg_enUS:"An error occurred while exporting the certificate. Please contact your administrator."};error.ERROR_CERT_PFX_IMPORT=12;errmap[error.ERROR_CERT_PFX_IMPORT]={msg_koKR:"\uc778\uc99d\uc11c \uac00\uc838\uc624\uae30 \uc911 \uc624\ub958\uac00 \ubc1c\uc0dd\ud558\uc600\uc2b5\ub2c8\ub2e4. \uad00\ub9ac\uc790\uc5d0\uac8c \ubb38\uc758\ud558\uc2dc\uae30 \ubc14\ub78d\ub2c8\ub2e4.",
msg_enUS:"An error occurred while importing the certificate. Please contact your administrator."};error.setError=function(key,code,msg,code2,msg2){err.key=key;if(errmap[key]){err.msg_koKR=errmap[key].msg_koKR;err.msg_enUS=errmap[key].msg_enUS}else{err.msg_koKR="";err.msg_enUS=""}if(typeof code==="number"&&msg!=undefined){err.code=code;err.message=msg}if(typeof code2==="number"&&msg2!=undefined){err.detailCode=code2;err.detailMessage=msg2}if(key==error.ERROR_CERT_PASSWORD_CONFIRM_INVALID_PASSWD||key==
error.ERROR_CERT_PASSWORD_CONFIRM_INVALID_PASSWD1||key==error.ERROR_CERT_SIGN_INVALID_PASSWD||key==error.ERROR_CERT_PFX_EXPORT_INVALID_PASSWD)sofo.error.setError(sofo.error.ERROR_VERIFYPASSWORD);else if(key==error.ERROR_CERT_PASSWORD_UPDATE_FAIL)if(err.detailMessage=="New password parameter is invalid")sofo.error.setError(err.key,err.key,"\uc554\ud638\ub294 \ubb38\uc790/\uc22b\uc790/\ud2b9\uc218\uae30\ud638\ub97c \uc870\ud569\ud574\uc57c \ud569\ub2c8\ub2e4.","The password is must be combined to characters/numbers/special characters.");
else if(err.detailMessage=="NewPasswordConfirm parameter is invalid")sofo.error.setError(err.key,err.key,"\uc0c8 \uc554\ud638\uac00 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.","The passwords do not match.");else sofo.error.setError(err.key,err.key,err.msg_koKR+" ("+err.detailMessage+")",err.msg_enUS+" ("+err.detailMessage+")");else if(key==error.ERROR_CERT_PASSWORD_UPDATE_FAIL1)if(err.detailMessage=="New password is mismatch")sofo.error.setError(err.key,err.key,"\uc0c8 \uc554\ud638\uac00 \uc77c\uce58\ud558\uc9c0 \uc54a\uc2b5\ub2c8\ub2e4.",
"The passwords do not match.");else if(err.detailMessage=="Existing password is the same")sofo.error.setError(err.key,err.key,"\ubcc0\uacbd \uc804 \uc554\ud638\uc640 \ub3d9\uc77c\ud569\ub2c8\ub2e4.","It is the same as the password before change.");else sofo.error.setError(err.key,err.key,err.msg_koKR+" ("+err.detailMessage+")",err.msg_enUS+" ("+err.detailMessage+")");else sofo.error.setError(err.key,err.key,err.msg_koKR,err.msg_enUS)};error.resetError=function(){err.key=0;err.msg_koKR="";err.msg_enUS=
"";err.code=200;err.message="Success";err.detailCode=0;err.detailMessage="";sofo.error.resetError()};error.getError=function(){return err};xfs.userLogin=function(aUserId,aKeyword,aSecondYn,aCode,aCallback){error.resetError();if(typeof aCallback!="function"){error.setError(error.ERROR_INVALID_PARAM);return-1}var api="user/login";var msg="serviceKey="+mServiceKey+"&"+"userId="+escape_url(aUserId)+"&"+"password="+_decryptKeyword(aKeyword);if(aSecondYn)msg+="&"+"secondPassYn=Y&"+"secondPassword="+_decryptKeyword(aCode);
var callbackFunc=function(aResult){if(aResult==-1||aResult.code!=200){if(!error.getError().msg_koKR||!error.getError().msg_enUS)error.setError(error.ERROR_USER_LOGIN);aCallback(-1)}else{if(aResult.xfsAccessToken)_setAccessToken(aResult.xfsAccessToken);aCallback(0)}};_callAPI(api,msg,_getAsyncOption(),callbackFunc)};xfs.userLogout=function(aCallback){error.resetError();if(typeof aCallback!="function"){error.setError(error.ERROR_INVALID_PARAM);return-1}var api="user/logout";var msg="serviceKey="+mServiceKey+
_getAccessToken();var callbackFunc=function(aResult){_setAccessToken("");if(aResult==-1||aResult.code!=200){if(!error.getError().msg_koKR||!error.getError().msg_enUS)error.setError(error.ERROR_USER_LOGOUT);aCallback(-1)}else aCallback(0)};_callAPI(api,msg,_getAsyncOption(),callbackFunc)};xfs.userExtension=function(aCallback){error.resetError();if(typeof aCallback!="function"){error.setError(error.ERROR_INVALID_PARAM);return-1}var api="user/extension";var msg="serviceKey="+mServiceKey+_getAccessToken();
var callbackFunc=function(aResult){if(aResult==-1||aResult.code!=200){if(!error.getError().msg_koKR||!error.getError().msg_enUS)error.setError(error.ERROR_USER_EXTENSION);aCallback(-1)}else aCallback(0)};_callAPI(api,msg,_getAsyncOption(true),callbackFunc)};xfs.otpRequest=function(aUserId,aCallback){error.resetError();if(typeof aCallback!="function"){error.setError(error.ERROR_INVALID_PARAM);return-1}var api="otp/request";var msg="serviceKey="+mServiceKey+"&"+"userId="+escape_url(aUserId);var callbackFunc=
function(aResult){if(aResult==-1||aResult.code!=200){if(!error.getError().msg_koKR||!error.getError().msg_enUS)error.setError(error.ERROR_OTP_REQUEST);aCallback(-1)}else aCallback(0)};_callAPI(api,msg,true,callbackFunc)};xfs.otpValid=function(aUserId,aKeyword,aCallback){error.resetError();if(typeof aCallback!="function"){error.setError(error.ERROR_INVALID_PARAM);return-1}var api="otp/valid";var msg="serviceKey="+mServiceKey+"&"+"userId="+escape_url(aUserId)+"&"+"password="+_decryptKeyword(aKeyword);
var callbackFunc=function(aResult){if(aResult==-1||aResult.code!=200){if(!error.getError().msg_koKR||!error.getError().msg_enUS)error.setError(error.ERROR_OTP_VALID);aCallback(-1)}else aCallback(0)};_callAPI(api,msg,_getAsyncOption(),callbackFunc)};var aCountPerPage=5;xfs.certList=function(aCallback){error.resetError();if(typeof aCallback!="function"){error.setError(error.ERROR_INVALID_PARAM);return-1}var api="cert/list";var msg="serviceKey="+mServiceKey+_getAccessToken()+"&"+"expireDate=&"+"issueDate=&"+
"subjectDn=&"+"issuerDn=&"+"status=&"+"description=&"+"countPerPage="+aCountPerPage+"&"+"pageNo=";var totalPage=0;var curPage=1;var certList=[];function callbackFunc(aResult){if(aResult==-1||aResult.code!=200){if(!error.getError().msg_koKR||!error.getError().msg_enUS)error.setError(error.ERROR_CERT_LIST);aCallback(certList);return}if(aResult.totalCount)totalPage=Math.ceil(aResult.totalCount/aResult.countPerPage);certList=certList.concat(aResult.item);if(curPage<totalPage){curPage++;callAPI()}else aCallback(certList)}
function callAPI(){_callAPI(api,msg+curPage,_getAsyncOption(),callbackFunc)}callAPI()};xfs.certDetail=function(aIssuerDn,aSerial,aCallback){error.resetError();if(typeof aCallback!="function"){error.setError(error.ERROR_INVALID_PARAM);return-1}var api="cert/detail";var msg="serviceKey="+mServiceKey+"&"+"issuerDn="+escape_url(aIssuerDn)+"&"+"serial="+aSerial+_getAccessToken();var callbackFunc=function(aResult){if(aResult==-1||aResult.code!=200){if(!error.getError().msg_koKR||!error.getError().msg_enUS)error.setError(error.ERROR_CERT_DETAIL);
aCallback("")}else aCallback(aResult.item)};_callAPI(api,msg,_getAsyncOption(),callbackFunc)};var SIGN_OPTION_ENCODING_BASE64=256;var SIGN_OPTION_USE_SIGNEDATTRS=512;var SIGN_OPTION_NO_CONTENT=4096;var SIGN_OPTION_NO_CMS=65536;var SIGN_OPTION_PKCS1=8388608;xfs.certSign=function(aIssuerDn,aSerial,aKeyword,aPlain,aOption,aCharset,aCallback){error.resetError();if(typeof aCallback!="function"){error.setError(error.ERROR_INVALID_PARAM);return-1}var api="cert/sign";var msg="serviceKey="+mServiceKey+"&"+
"issuerDn="+escape_url(aIssuerDn)+"&"+"serial="+aSerial+"&"+"password="+_decryptKeyword(aKeyword)+"&"+"plain="+escape_url(aPlain)+"&"+"charset="+aCharset+"&"+_getAccessToken();var callbackFunc=function(aResult){if(aResult==-1||aResult.code!=200||!aResult.item[0].sign||typeof aResult.item[0].sign!=="string"||aResult.item[0].sign.length==0){if(!error.getError().msg_koKR||!error.getError().msg_enUS)error.setError(error.ERROR_CREATE_SIGNDATA);aCallback("")}else{var signed=aResult.item[0].sign;var signedType;
if(signed.charAt(0)=="3")signedType=0;else if(signed.charAt(0)=="M")signedType=1;else{error.setError(error.ERROR_CREATE_SIGNDATA);aCallback("")}if(aOption&SIGN_OPTION_ENCODING_BASE64)if(signedType==1)aCallback(aResult.item[0].sign);else try{var ba=forge.util.hexToBytes(aResult.item[0].sign);aCallback(forge.util.encode64(ba))}catch(e){error.setError(error.ERROR_CREATE_SIGNDATA);aCallback("")}else if(signedType==0)aCallback(aResult.item[0].sign);else try{var ba=forge.util.decode64(aResult.item[0].sign);
aCallback(forge.util.bytesToHex(ba))}catch(e){error.setError(error.ERROR_CREATE_SIGNDATA);aCallback("")}}};_callAPI(api,msg,_getAsyncOption(),callbackFunc)};xfs.certDigestSign=function(aIssuerDn,aSerial,aKeyword,aDigest,aOption,aCallback){error.resetError();if(typeof aCallback!="function"){error.setError(error.ERROR_INVALID_PARAM);return-1}var api="cert/digestSign";var msg="serviceKey="+mServiceKey+"&"+"issuerDn="+escape_url(aIssuerDn)+"&"+"serial="+aSerial+"&"+"password="+_decryptKeyword(aKeyword)+
"&"+"digest="+escape_url(aDigest)+_getAccessToken();var callbackFunc=function(aResult){if(aResult==-1||aResult.code!=200||!aResult.item[0].sign||typeof aResult.item[0].sign!=="string"||aResult.item[0].sign.length==0){if(!error.getError().msg_koKR||!error.getError().msg_enUS)error.setError(error.ERROR_CREATE_SIGNDATA);aCallback("")}else{var signed=aResult.item[0].sign;var signedType;if(signed.charAt(0)=="3")signedType=0;else if(signed.charAt(0)=="M")signedType=1;else{error.setError(error.ERROR_CREATE_SIGNDATA);
aCallback("")}if(aOption&SIGN_OPTION_ENCODING_BASE64)if(signedType==1)aCallback(aResult.item[0].sign);else try{var ba=forge.util.hexToBytes(aResult.item[0].sign);aCallback(forge.util.encode64(ba))}catch(e){error.setError(error.ERROR_CREATE_SIGNDATA);aCallback("")}else if(signedType==0)aCallback(aResult.item[0].sign);else try{var ba=forge.util.decode64(aResult.item[0].sign);aCallback(forge.util.bytesToHex(ba))}catch(e){error.setError(error.ERROR_CREATE_SIGNDATA);aCallback("")}}};_callAPI(api,msg,_getAsyncOption(),
callbackFunc)};xfs.certDelete=function(aIssuerDn,aSerial,aCallback){error.resetError();if(typeof aCallback!="function"){error.setError(error.ERROR_INVALID_PARAM);return-1}var api="cert/delete";var msg="serviceKey="+mServiceKey+"&"+"issuerDn="+escape_url(aIssuerDn)+"&"+"serial="+aSerial+_getAccessToken();var callbackFunc=function(aResult){if(aResult==-1||aResult.code!=200){if(!error.getError().msg_koKR||!error.getError().msg_enUS)error.setError(error.ERROR_CERT_DELETE);aCallback(-1)}else aCallback(0)};
_callAPI(api,msg,_getAsyncOption(),callbackFunc)};xfs.certPasswordConfirm=function(aIssuerDn,aSerial,aKeyword,aCallback){error.resetError();if(typeof aCallback!="function"){error.setError(error.ERROR_INVALID_PARAM);return-1}var api="cert/password/confirm";var msg="serviceKey="+mServiceKey+"&"+"issuerDn="+escape_url(aIssuerDn)+"&"+"serial="+aSerial+"&"+"password="+_decryptKeyword(aKeyword)+_getAccessToken();var callbackFunc=function(aResult){if(aResult==-1||aResult.code!=200){if(!error.getError().msg_koKR||
!error.getError().msg_enUS)error.setError(error.ERROR_CERT_PWD_CONFIRM);aCallback(-1)}else aCallback(0)};_callAPI(api,msg,_getAsyncOption(),callbackFunc)};xfs.certPasswordUpdate=function(aIssuerDn,aSerial,aOldKeyword,aNewKeyword,aConfirmKeyword,aCallback){error.resetError();if(typeof aCallback!="function"){error.setError(error.ERROR_INVALID_PARAM);return-1}var api="cert/password/update";var msg="serviceKey="+mServiceKey+"&"+"issuerDn="+escape_url(aIssuerDn)+"&"+"serial="+aSerial+"&"+"oldPassword="+
_decryptKeyword(aOldKeyword)+"&"+"newPassword="+_decryptKeyword(aNewKeyword,"2")+"&"+"newPasswordConfirm="+_decryptKeyword(aConfirmKeyword,"3")+_getAccessToken();var callbackFunc=function(aResult){if(aResult==-1||aResult.code!=200){if(!error.getError().msg_koKR||!error.getError().msg_enUS)error.setError(error.ERROR_CERT_PWD_UPDATE);else;aCallback(-1)}else aCallback(0)};_callAPI(api,msg,_getAsyncOption(),callbackFunc)};xfs.certPfxExport=function(aIssuerDn,aSerial,aKeyword,aCallback){error.resetError();
if(typeof aCallback!="function"){error.setError(error.ERROR_INVALID_PARAM);return""}var api="cert/pfx/export";var msg="serviceKey="+mServiceKey+"&"+"issuerDn="+escape_url(aIssuerDn)+"&"+"serial="+aSerial+"&"+"password="+_decryptKeyword(aKeyword)+_getAccessToken();var callbackFunc=function(aResult){if(aResult==-1||aResult.code!=200){if(!error.getError().msg_koKR||!error.getError().msg_enUS)error.setError(error.ERROR_CERT_PFX_EXPORT);aCallback("")}else{var aPfxCert=aResult.item[0].pfxCert;if(aPfxCert.charAt(0)==
"3")try{var ba=forge.util.hexToBytes(aPfxCert);aCallback(forge.util.encode64(ba))}catch(e){error.setError(error.ERROR_EXPORTCERT);aCallback("")}else aCallback(aPfxCert)}};_callAPI(api,msg,_getAsyncOption(),callbackFunc)};xfs.certPfxImport=function(aPfxCert,aKeyword,aCallback){error.resetError();if(typeof aCallback!="function"){error.setError(error.ERROR_INVALID_PARAM);return-1}var api="cert/pfx/import";var msg="serviceKey="+mServiceKey+"&"+"pfxCert="+escape_url(aPfxCert)+"&"+"password="+_decryptKeyword(aKeyword)+
_getAccessToken();var callbackFunc=function(aResult){if(aResult==-1||aResult.code!=200){if(!error.getError().msg_koKR||!error.getError().msg_enUS)error.setError(error.ERROR_CERT_PFX_IMPORT);aCallback(-1)}else aCallback(0)};_callAPI(api,msg,_getAsyncOption(),callbackFunc)}})();
